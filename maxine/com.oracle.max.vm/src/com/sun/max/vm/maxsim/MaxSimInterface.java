// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MaxSimInterface.proto

package com.sun.max.vm.maxsim;

public final class MaxSimInterface {
  private MaxSimInterface() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code MaxSimInterface.PointerTaggingType}
   *
   * <pre>
   * Pointer tagging type.
   * </pre>
   */
  public enum PointerTaggingType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NO_TAGGING = 0;</code>
     */
    NO_TAGGING(0, 0),
    /**
     * <code>CLASS_ID_TAGGING = 1;</code>
     */
    CLASS_ID_TAGGING(1, 1),
    /**
     * <code>ALLOC_SITE_ID_TAGGING = 2;</code>
     */
    ALLOC_SITE_ID_TAGGING(2, 2),
    /**
     * <code>UNDEFINED_TAGGING = 3;</code>
     */
    UNDEFINED_TAGGING(3, 3),
    ;

    /**
     * <code>NO_TAGGING = 0;</code>
     */
    public static final int NO_TAGGING_VALUE = 0;
    /**
     * <code>CLASS_ID_TAGGING = 1;</code>
     */
    public static final int CLASS_ID_TAGGING_VALUE = 1;
    /**
     * <code>ALLOC_SITE_ID_TAGGING = 2;</code>
     */
    public static final int ALLOC_SITE_ID_TAGGING_VALUE = 2;
    /**
     * <code>UNDEFINED_TAGGING = 3;</code>
     */
    public static final int UNDEFINED_TAGGING_VALUE = 3;


    public final int getNumber() { return value; }

    public static PointerTaggingType valueOf(int value) {
      switch (value) {
        case 0: return NO_TAGGING;
        case 1: return CLASS_ID_TAGGING;
        case 2: return ALLOC_SITE_ID_TAGGING;
        case 3: return UNDEFINED_TAGGING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PointerTaggingType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PointerTaggingType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PointerTaggingType>() {
            public PointerTaggingType findValueByNumber(int number) {
              return PointerTaggingType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(0);
    }

    private static final PointerTaggingType[] VALUES = values();

    public static PointerTaggingType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PointerTaggingType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.PointerTaggingType)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.ZSimMagicOpcodes}
   *
   * <pre>
   * ZSim magic opcodes.
   * NOTE: These opcodes need to be in sync with magic ops in src/zsim.cpp and zsim/misc/hooks/zsim_hooks.h
   * </pre>
   */
  public enum ZSimMagicOpcodes
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ZSIM_M_OPC_LO = 1025;</code>
     */
    ZSIM_M_OPC_LO(0, 1025),
    /**
     * <code>ZSIM_M_OPC_ROI_END = 1026;</code>
     *
     * <pre>
     * End simulation of a Region Of Interest (ROI) entering fast-forwarding mode.
     * </pre>
     */
    ZSIM_M_OPC_ROI_END(2, 1026),
    /**
     * <code>ZSIM_M_OPC_ZSIM_HI = 1033;</code>
     */
    ZSIM_M_OPC_ZSIM_HI(3, 1033),
    ;

    /**
     * <code>ZSIM_M_OPC_ROI_BEGIN = 1025;</code>
     *
     * <pre>
     * Begin simulation of a Region Of Interest (ROI) exiting fast-forwarding mode.
     * </pre>
     */
    public static final ZSimMagicOpcodes ZSIM_M_OPC_ROI_BEGIN = ZSIM_M_OPC_LO;
    /**
     * <code>ZSIM_M_OPC_LO = 1025;</code>
     */
    public static final int ZSIM_M_OPC_LO_VALUE = 1025;
    /**
     * <code>ZSIM_M_OPC_ROI_BEGIN = 1025;</code>
     *
     * <pre>
     * Begin simulation of a Region Of Interest (ROI) exiting fast-forwarding mode.
     * </pre>
     */
    public static final int ZSIM_M_OPC_ROI_BEGIN_VALUE = 1025;
    /**
     * <code>ZSIM_M_OPC_ROI_END = 1026;</code>
     *
     * <pre>
     * End simulation of a Region Of Interest (ROI) entering fast-forwarding mode.
     * </pre>
     */
    public static final int ZSIM_M_OPC_ROI_END_VALUE = 1026;
    /**
     * <code>ZSIM_M_OPC_ZSIM_HI = 1033;</code>
     */
    public static final int ZSIM_M_OPC_ZSIM_HI_VALUE = 1033;


    public final int getNumber() { return value; }

    public static ZSimMagicOpcodes valueOf(int value) {
      switch (value) {
        case 1025: return ZSIM_M_OPC_LO;
        case 1026: return ZSIM_M_OPC_ROI_END;
        case 1033: return ZSIM_M_OPC_ZSIM_HI;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ZSimMagicOpcodes>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ZSimMagicOpcodes>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ZSimMagicOpcodes>() {
            public ZSimMagicOpcodes findValueByNumber(int number) {
              return ZSimMagicOpcodes.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(1);
    }

    private static final ZSimMagicOpcodes[] VALUES = {
      ZSIM_M_OPC_LO, ZSIM_M_OPC_ROI_BEGIN, ZSIM_M_OPC_ROI_END, ZSIM_M_OPC_ZSIM_HI, 
    };

    public static ZSimMagicOpcodes valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private ZSimMagicOpcodes(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.ZSimMagicOpcodes)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.MaxSimMagicOpcodes}
   *
   * <pre>
   * MaxSim magic opcodes.
   * </pre>
   */
  public enum MaxSimMagicOpcodes
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAXSIM_M_OPC_LO = 1101;</code>
     *
     * <pre>
     * NOTE: Leave a gap between ZSIM_M_OPC_ZSIM_HI and MAXSIM_M_OPC_LO to reduce the risk of intersection in future.
     * </pre>
     */
    MAXSIM_M_OPC_LO(0, 1101),
    /**
     * <code>MAXSIM_M_OPC_REPORT_HUB_OFFSET = 1102;</code>
     *
     * <pre>
     * Registers an offset of the hub inside an object.
     * Receives an offset in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_REPORT_HUB_OFFSET(2, 1102),
    /**
     * <code>MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET = 1103;</code>
     *
     * <pre>
     * Registers an offset inside a hub where a HubType value is stored.
     * Receives an offset in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET(3, 1103),
    /**
     * <code>MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET = 1104;</code>
     *
     * <pre>
     * Registers an offset of the first element inside an array.
     * Receives an offset in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET(4, 1104),
    /**
     * <code>MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE = 1105;</code>
     *
     * <pre>
     * Registers an address range.
     * Receives an AddressRange_t variable address in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE(5, 1105),
    /**
     * <code>MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE = 1106;</code>
     *
     * <pre>
     * Deregisters an address range.
     * Receives an AddressRange_t variable address in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE(6, 1106),
    /**
     * <code>MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID = 1107;</code>
     *
     * <pre>
     * Gets an allocations site estimation id.
     * Returns an id in the rcx register.
     * </pre>
     */
    MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID(7, 1107),
    /**
     * <code>MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION = 1108;</code>
     *
     * <pre>
     * Profiles an object allocation.
     * Receives a size, a tag and a tagType in the rbx register packed as described by MaxSimMagicOpPackedArgsOffsets.
     * </pre>
     */
    MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION(8, 1108),
    /**
     * <code>MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION = 1109;</code>
     *
     * <pre>
     * Enables MaxSim profile collection.
     * Receives MaxineVMOperationMode after enabling profile collection.
     * </pre>
     */
    MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION(9, 1109),
    /**
     * <code>MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION = 1110;</code>
     *
     * <pre>
     * Disables MaxSim profile collection.
     * Receives MaxineVMOperationMode after disabling profile collection.
     * </pre>
     */
    MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION(10, 1110),
    /**
     * <code>MAXSIM_M_OPC_RESET_PROFILE_COLLECTION = 1111;</code>
     *
     * <pre>
     * Resets MaxSim profile collection.
     * </pre>
     */
    MAXSIM_M_OPC_RESET_PROFILE_COLLECTION(11, 1111),
    /**
     * <code>MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE = 1112;</code>
     *
     * <pre>
     * Prints MaxSim profile to a file.
     * Receives an address of a null terminated string in the rbx register.
     * </pre>
     */
    MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE(12, 1112),
    /**
     * <code>MAXSIM_M_OPC_DUMP_EVENTUAL_STATS = 1113;</code>
     *
     * <pre>
     * Dumps eventual statistics.
     * Receives MaxineVMOperationMode after dumping eventual statistics.
     * </pre>
     */
    MAXSIM_M_OPC_DUMP_EVENTUAL_STATS(13, 1113),
    /**
     * <code>MAXSIM_M_OPC_FILTER_LOOP_BEGIN = 1114;</code>
     *
     * <pre>
     * Begins filtering of loop iterations during simulation.
     * Receives an address of an object handled in a loop.
     * </pre>
     */
    MAXSIM_M_OPC_FILTER_LOOP_BEGIN(14, 1114),
    /**
     * <code>MAXSIM_M_OPC_FILTER_LOOP_END = 1115;</code>
     *
     * <pre>
     * Ends filtering of loop iterations during simulation.
     * </pre>
     */
    MAXSIM_M_OPC_FILTER_LOOP_END(15, 1115),
    /**
     * <code>MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH = 1116;</code>
     *
     * <pre>
     * Activates data transformation via address space morphing.
     * </pre>
     */
    MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH(16, 1116),
    /**
     * <code>MAXSIM_M_OPC_HI = 1200;</code>
     */
    MAXSIM_M_OPC_HI(17, 1200),
    ;

    /**
     * <code>MAXSIM_M_OPC_GET_AVAILABLE_PROCESSORS_NUM = 1101;</code>
     *
     * <pre>
     * Gets a number of available processors (cores) in a model.
     * Returns a number in the rcx register.
     * </pre>
     */
    public static final MaxSimMagicOpcodes MAXSIM_M_OPC_GET_AVAILABLE_PROCESSORS_NUM = MAXSIM_M_OPC_LO;
    /**
     * <code>MAXSIM_M_OPC_LO = 1101;</code>
     *
     * <pre>
     * NOTE: Leave a gap between ZSIM_M_OPC_ZSIM_HI and MAXSIM_M_OPC_LO to reduce the risk of intersection in future.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_LO_VALUE = 1101;
    /**
     * <code>MAXSIM_M_OPC_GET_AVAILABLE_PROCESSORS_NUM = 1101;</code>
     *
     * <pre>
     * Gets a number of available processors (cores) in a model.
     * Returns a number in the rcx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_GET_AVAILABLE_PROCESSORS_NUM_VALUE = 1101;
    /**
     * <code>MAXSIM_M_OPC_REPORT_HUB_OFFSET = 1102;</code>
     *
     * <pre>
     * Registers an offset of the hub inside an object.
     * Receives an offset in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_REPORT_HUB_OFFSET_VALUE = 1102;
    /**
     * <code>MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET = 1103;</code>
     *
     * <pre>
     * Registers an offset inside a hub where a HubType value is stored.
     * Receives an offset in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET_VALUE = 1103;
    /**
     * <code>MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET = 1104;</code>
     *
     * <pre>
     * Registers an offset of the first element inside an array.
     * Receives an offset in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET_VALUE = 1104;
    /**
     * <code>MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE = 1105;</code>
     *
     * <pre>
     * Registers an address range.
     * Receives an AddressRange_t variable address in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE_VALUE = 1105;
    /**
     * <code>MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE = 1106;</code>
     *
     * <pre>
     * Deregisters an address range.
     * Receives an AddressRange_t variable address in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE_VALUE = 1106;
    /**
     * <code>MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID = 1107;</code>
     *
     * <pre>
     * Gets an allocations site estimation id.
     * Returns an id in the rcx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID_VALUE = 1107;
    /**
     * <code>MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION = 1108;</code>
     *
     * <pre>
     * Profiles an object allocation.
     * Receives a size, a tag and a tagType in the rbx register packed as described by MaxSimMagicOpPackedArgsOffsets.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION_VALUE = 1108;
    /**
     * <code>MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION = 1109;</code>
     *
     * <pre>
     * Enables MaxSim profile collection.
     * Receives MaxineVMOperationMode after enabling profile collection.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION_VALUE = 1109;
    /**
     * <code>MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION = 1110;</code>
     *
     * <pre>
     * Disables MaxSim profile collection.
     * Receives MaxineVMOperationMode after disabling profile collection.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION_VALUE = 1110;
    /**
     * <code>MAXSIM_M_OPC_RESET_PROFILE_COLLECTION = 1111;</code>
     *
     * <pre>
     * Resets MaxSim profile collection.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_RESET_PROFILE_COLLECTION_VALUE = 1111;
    /**
     * <code>MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE = 1112;</code>
     *
     * <pre>
     * Prints MaxSim profile to a file.
     * Receives an address of a null terminated string in the rbx register.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE_VALUE = 1112;
    /**
     * <code>MAXSIM_M_OPC_DUMP_EVENTUAL_STATS = 1113;</code>
     *
     * <pre>
     * Dumps eventual statistics.
     * Receives MaxineVMOperationMode after dumping eventual statistics.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_DUMP_EVENTUAL_STATS_VALUE = 1113;
    /**
     * <code>MAXSIM_M_OPC_FILTER_LOOP_BEGIN = 1114;</code>
     *
     * <pre>
     * Begins filtering of loop iterations during simulation.
     * Receives an address of an object handled in a loop.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_FILTER_LOOP_BEGIN_VALUE = 1114;
    /**
     * <code>MAXSIM_M_OPC_FILTER_LOOP_END = 1115;</code>
     *
     * <pre>
     * Ends filtering of loop iterations during simulation.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_FILTER_LOOP_END_VALUE = 1115;
    /**
     * <code>MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH = 1116;</code>
     *
     * <pre>
     * Activates data transformation via address space morphing.
     * </pre>
     */
    public static final int MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH_VALUE = 1116;
    /**
     * <code>MAXSIM_M_OPC_HI = 1200;</code>
     */
    public static final int MAXSIM_M_OPC_HI_VALUE = 1200;


    public final int getNumber() { return value; }

    public static MaxSimMagicOpcodes valueOf(int value) {
      switch (value) {
        case 1101: return MAXSIM_M_OPC_LO;
        case 1102: return MAXSIM_M_OPC_REPORT_HUB_OFFSET;
        case 1103: return MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET;
        case 1104: return MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET;
        case 1105: return MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE;
        case 1106: return MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE;
        case 1107: return MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID;
        case 1108: return MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION;
        case 1109: return MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION;
        case 1110: return MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION;
        case 1111: return MAXSIM_M_OPC_RESET_PROFILE_COLLECTION;
        case 1112: return MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE;
        case 1113: return MAXSIM_M_OPC_DUMP_EVENTUAL_STATS;
        case 1114: return MAXSIM_M_OPC_FILTER_LOOP_BEGIN;
        case 1115: return MAXSIM_M_OPC_FILTER_LOOP_END;
        case 1116: return MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH;
        case 1200: return MAXSIM_M_OPC_HI;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpcodes>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpcodes>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpcodes>() {
            public MaxSimMagicOpcodes findValueByNumber(int number) {
              return MaxSimMagicOpcodes.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(2);
    }

    private static final MaxSimMagicOpcodes[] VALUES = {
      MAXSIM_M_OPC_LO, MAXSIM_M_OPC_GET_AVAILABLE_PROCESSORS_NUM, MAXSIM_M_OPC_REPORT_HUB_OFFSET, MAXSIM_M_OPC_REPORT_HUB_TYPE_OFFSET, MAXSIM_M_OPC_REPORT_ARRAY_FIRST_ELEM_OFFSET, MAXSIM_M_OPC_REGISTER_ADDRESS_RANGE, MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE, MAXSIM_M_OPC_GET_ALLOCATION_SITE_ESTIMATION_ID, MAXSIM_M_OPC_PROFILE_OBJECT_ALLOCATION, MAXSIM_M_OPC_ENABLE_PROFILE_COLLECTION, MAXSIM_M_OPC_DISABLE_PROFILE_COLLECTION, MAXSIM_M_OPC_RESET_PROFILE_COLLECTION, MAXSIM_M_OPC_PRINT_PROFILE_TO_FILE, MAXSIM_M_OPC_DUMP_EVENTUAL_STATS, MAXSIM_M_OPC_FILTER_LOOP_BEGIN, MAXSIM_M_OPC_FILTER_LOOP_END, MAXSIM_M_OPC_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MORPH, MAXSIM_M_OPC_HI, 
    };

    public static MaxSimMagicOpcodes valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MaxSimMagicOpcodes(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.MaxSimMagicOpcodes)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.MaxSimMagicOpPackedArgsOffsets}
   *
   * <pre>
   * MaxSim magic operation packed arguments offsets.
   * </pre>
   */
  public enum MaxSimMagicOpPackedArgsOffsets
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_OFF = 0;</code>
     */
    MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_OFF(0, 0),
    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_TYPE_OFF = 32;</code>
     */
    MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_TYPE_OFF(1, 32),
    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OFF = 48;</code>
     */
    MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OFF(2, 48),
    ;

    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_OFF = 0;</code>
     */
    public static final int MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_OFF_VALUE = 0;
    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_TYPE_OFF = 32;</code>
     */
    public static final int MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_TYPE_OFF_VALUE = 32;
    /**
     * <code>MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OFF = 48;</code>
     */
    public static final int MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OFF_VALUE = 48;


    public final int getNumber() { return value; }

    public static MaxSimMagicOpPackedArgsOffsets valueOf(int value) {
      switch (value) {
        case 0: return MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_OFF;
        case 32: return MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_TYPE_OFF;
        case 48: return MAXSIM_M_OP_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OFF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpPackedArgsOffsets>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpPackedArgsOffsets>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MaxSimMagicOpPackedArgsOffsets>() {
            public MaxSimMagicOpPackedArgsOffsets findValueByNumber(int number) {
              return MaxSimMagicOpPackedArgsOffsets.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(3);
    }

    private static final MaxSimMagicOpPackedArgsOffsets[] VALUES = values();

    public static MaxSimMagicOpPackedArgsOffsets valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MaxSimMagicOpPackedArgsOffsets(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.MaxSimMagicOpPackedArgsOffsets)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.AddressRangeType}
   *
   * <pre>
   * Address range type.
   * </pre>
   */
  public enum AddressRangeType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STACK_ADDRESS_RANGE = 0;</code>
     *
     * <pre>
     * Stack address range.
     * </pre>
     */
    STACK_ADDRESS_RANGE(0, 0),
    /**
     * <code>TLS_ADDRESS_RANGE = 1;</code>
     *
     * <pre>
     * Thread-local storage address range.
     * </pre>
     */
    TLS_ADDRESS_RANGE(1, 1),
    /**
     * <code>HEAP_ADDRESS_RANGE = 2;</code>
     *
     * <pre>
     * Heap address range.
     * </pre>
     */
    HEAP_ADDRESS_RANGE(2, 2),
    /**
     * <code>CODE_ADDRESS_RANGE = 3;</code>
     *
     * <pre>
     * Code cache address range.
     * </pre>
     */
    CODE_ADDRESS_RANGE(3, 3),
    /**
     * <code>NATIVE_ADDRESS_RANGE = 4;</code>
     *
     * <pre>
     * Native address range.
     * </pre>
     */
    NATIVE_ADDRESS_RANGE(4, 4),
    /**
     * <code>ARRAY_CRITICAL_ADDRESS_RANGE = 5;</code>
     *
     * <pre>
     * Array critical address range (see JNI GetPrimitiveArrayCritical).
     * </pre>
     */
    ARRAY_CRITICAL_ADDRESS_RANGE(5, 5),
    /**
     * <code>ALLOCATION_FRONTIER_ADDRESS_RANGE = 6;</code>
     *
     * <pre>
     * Allocation frontier (functions called at allocation sites) address range.
     * </pre>
     */
    ALLOCATION_FRONTIER_ADDRESS_RANGE(6, 6),
    /**
     * <code>PROTOBUF_MESSAGE_ADDRESS_RANGE = 7;</code>
     *
     * <pre>
     * ProtoBuf message address range (for sending protocol buffer messages).
     * </pre>
     */
    PROTOBUF_MESSAGE_ADDRESS_RANGE(7, 7),
    /**
     * <code>UNDEFINED_ADDRESS_RANGE = 8;</code>
     *
     * <pre>
     * Undefined address range.
     * </pre>
     */
    UNDEFINED_ADDRESS_RANGE(8, 8),
    ;

    /**
     * <code>STACK_ADDRESS_RANGE = 0;</code>
     *
     * <pre>
     * Stack address range.
     * </pre>
     */
    public static final int STACK_ADDRESS_RANGE_VALUE = 0;
    /**
     * <code>TLS_ADDRESS_RANGE = 1;</code>
     *
     * <pre>
     * Thread-local storage address range.
     * </pre>
     */
    public static final int TLS_ADDRESS_RANGE_VALUE = 1;
    /**
     * <code>HEAP_ADDRESS_RANGE = 2;</code>
     *
     * <pre>
     * Heap address range.
     * </pre>
     */
    public static final int HEAP_ADDRESS_RANGE_VALUE = 2;
    /**
     * <code>CODE_ADDRESS_RANGE = 3;</code>
     *
     * <pre>
     * Code cache address range.
     * </pre>
     */
    public static final int CODE_ADDRESS_RANGE_VALUE = 3;
    /**
     * <code>NATIVE_ADDRESS_RANGE = 4;</code>
     *
     * <pre>
     * Native address range.
     * </pre>
     */
    public static final int NATIVE_ADDRESS_RANGE_VALUE = 4;
    /**
     * <code>ARRAY_CRITICAL_ADDRESS_RANGE = 5;</code>
     *
     * <pre>
     * Array critical address range (see JNI GetPrimitiveArrayCritical).
     * </pre>
     */
    public static final int ARRAY_CRITICAL_ADDRESS_RANGE_VALUE = 5;
    /**
     * <code>ALLOCATION_FRONTIER_ADDRESS_RANGE = 6;</code>
     *
     * <pre>
     * Allocation frontier (functions called at allocation sites) address range.
     * </pre>
     */
    public static final int ALLOCATION_FRONTIER_ADDRESS_RANGE_VALUE = 6;
    /**
     * <code>PROTOBUF_MESSAGE_ADDRESS_RANGE = 7;</code>
     *
     * <pre>
     * ProtoBuf message address range (for sending protocol buffer messages).
     * </pre>
     */
    public static final int PROTOBUF_MESSAGE_ADDRESS_RANGE_VALUE = 7;
    /**
     * <code>UNDEFINED_ADDRESS_RANGE = 8;</code>
     *
     * <pre>
     * Undefined address range.
     * </pre>
     */
    public static final int UNDEFINED_ADDRESS_RANGE_VALUE = 8;


    public final int getNumber() { return value; }

    public static AddressRangeType valueOf(int value) {
      switch (value) {
        case 0: return STACK_ADDRESS_RANGE;
        case 1: return TLS_ADDRESS_RANGE;
        case 2: return HEAP_ADDRESS_RANGE;
        case 3: return CODE_ADDRESS_RANGE;
        case 4: return NATIVE_ADDRESS_RANGE;
        case 5: return ARRAY_CRITICAL_ADDRESS_RANGE;
        case 6: return ALLOCATION_FRONTIER_ADDRESS_RANGE;
        case 7: return PROTOBUF_MESSAGE_ADDRESS_RANGE;
        case 8: return UNDEFINED_ADDRESS_RANGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<AddressRangeType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<AddressRangeType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<AddressRangeType>() {
            public AddressRangeType findValueByNumber(int number) {
              return AddressRangeType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(4);
    }

    private static final AddressRangeType[] VALUES = values();

    public static AddressRangeType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private AddressRangeType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.AddressRangeType)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.MaxineVMOperationMode}
   *
   * <pre>
   * Maxine VM operation mode.
   * </pre>
   */
  public enum MaxineVMOperationMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MAXINE_VM_OPERATION_MODE_UNKNOWN = 0;</code>
     *
     * <pre>
     * Unknown VM operation mode.
     * </pre>
     */
    MAXINE_VM_OPERATION_MODE_UNKNOWN(0, 0),
    /**
     * <code>MAXINE_VM_OPERATION_MODE_RUNNING_NON_GC = 1;</code>
     *
     * <pre>
     * Running VM non-GC operation mode.
     * </pre>
     */
    MAXINE_VM_OPERATION_MODE_RUNNING_NON_GC(1, 1),
    /**
     * <code>MAXINE_VM_OPERATION_MODE_RUNNING_GC = 2;</code>
     *
     * <pre>
     * Running VM GC operation mode.
     * </pre>
     */
    MAXINE_VM_OPERATION_MODE_RUNNING_GC(2, 2),
    /**
     * <code>MAXINE_VM_OPERATION_MODE_SAME = 3;</code>
     *
     * <pre>
     * Same VM operation mode as previously registered.
     * </pre>
     */
    MAXINE_VM_OPERATION_MODE_SAME(3, 3),
    ;

    /**
     * <code>MAXINE_VM_OPERATION_MODE_UNKNOWN = 0;</code>
     *
     * <pre>
     * Unknown VM operation mode.
     * </pre>
     */
    public static final int MAXINE_VM_OPERATION_MODE_UNKNOWN_VALUE = 0;
    /**
     * <code>MAXINE_VM_OPERATION_MODE_RUNNING_NON_GC = 1;</code>
     *
     * <pre>
     * Running VM non-GC operation mode.
     * </pre>
     */
    public static final int MAXINE_VM_OPERATION_MODE_RUNNING_NON_GC_VALUE = 1;
    /**
     * <code>MAXINE_VM_OPERATION_MODE_RUNNING_GC = 2;</code>
     *
     * <pre>
     * Running VM GC operation mode.
     * </pre>
     */
    public static final int MAXINE_VM_OPERATION_MODE_RUNNING_GC_VALUE = 2;
    /**
     * <code>MAXINE_VM_OPERATION_MODE_SAME = 3;</code>
     *
     * <pre>
     * Same VM operation mode as previously registered.
     * </pre>
     */
    public static final int MAXINE_VM_OPERATION_MODE_SAME_VALUE = 3;


    public final int getNumber() { return value; }

    public static MaxineVMOperationMode valueOf(int value) {
      switch (value) {
        case 0: return MAXINE_VM_OPERATION_MODE_UNKNOWN;
        case 1: return MAXINE_VM_OPERATION_MODE_RUNNING_NON_GC;
        case 2: return MAXINE_VM_OPERATION_MODE_RUNNING_GC;
        case 3: return MAXINE_VM_OPERATION_MODE_SAME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MaxineVMOperationMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MaxineVMOperationMode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MaxineVMOperationMode>() {
            public MaxineVMOperationMode findValueByNumber(int number) {
              return MaxineVMOperationMode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(5);
    }

    private static final MaxineVMOperationMode[] VALUES = values();

    public static MaxineVMOperationMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private MaxineVMOperationMode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.MaxineVMOperationMode)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.HubType}
   *
   * <pre>
   * Hub type.
   * </pre>
   */
  public enum HubType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HUB_TYPE_TUPLE = 0;</code>
     */
    HUB_TYPE_TUPLE(0, 0),
    /**
     * <code>HUB_TYPE_ARRAY_OF_REFERENCES = 1;</code>
     */
    HUB_TYPE_ARRAY_OF_REFERENCES(1, 1),
    /**
     * <code>HUB_TYPE_ARRAY_OF_PRIMITIVES = 2;</code>
     */
    HUB_TYPE_ARRAY_OF_PRIMITIVES(2, 2),
    /**
     * <code>HUB_TYPE_UNDEF = 3;</code>
     */
    HUB_TYPE_UNDEF(3, 3),
    ;

    /**
     * <code>HUB_TYPE_TUPLE = 0;</code>
     */
    public static final int HUB_TYPE_TUPLE_VALUE = 0;
    /**
     * <code>HUB_TYPE_ARRAY_OF_REFERENCES = 1;</code>
     */
    public static final int HUB_TYPE_ARRAY_OF_REFERENCES_VALUE = 1;
    /**
     * <code>HUB_TYPE_ARRAY_OF_PRIMITIVES = 2;</code>
     */
    public static final int HUB_TYPE_ARRAY_OF_PRIMITIVES_VALUE = 2;
    /**
     * <code>HUB_TYPE_UNDEF = 3;</code>
     */
    public static final int HUB_TYPE_UNDEF_VALUE = 3;


    public final int getNumber() { return value; }

    public static HubType valueOf(int value) {
      switch (value) {
        case 0: return HUB_TYPE_TUPLE;
        case 1: return HUB_TYPE_ARRAY_OF_REFERENCES;
        case 2: return HUB_TYPE_ARRAY_OF_PRIMITIVES;
        case 3: return HUB_TYPE_UNDEF;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<HubType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<HubType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<HubType>() {
            public HubType findValueByNumber(int number) {
              return HubType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(6);
    }

    private static final HubType[] VALUES = values();

    public static HubType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private HubType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.HubType)
  }

  /**
   * Protobuf enum {@code MaxSimInterface.PointerTag}
   *
   * <pre>
   * Pointer tags.
   * </pre>
   */
  public enum PointerTag
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TAG_AGGREGATE_LO = -1;</code>
     *
     * <pre>
     * Represents lowest aggregate tag.
     * </pre>
     */
    TAG_AGGREGATE_LO(0, -1),
    /**
     * <code>TAG_FETCHES = 0;</code>
     *
     * <pre>
     * Represents code fetch memory accesses.
     * </pre>
     */
    TAG_FETCHES(2, 0),
    /**
     * <code>TAG_CODE = 1;</code>
     *
     * <pre>
     * Represents self-referencing or self-modifying code memory accesses.
     * </pre>
     */
    TAG_CODE(3, 1),
    /**
     * <code>TAG_HEAP = 2;</code>
     *
     * <pre>
     * Represents raw heap memory accesses (e.g. initializing heap with zeroes).
     * </pre>
     */
    TAG_HEAP(4, 2),
    /**
     * <code>TAG_STACK = 3;</code>
     *
     * <pre>
     * Represents stack memory accesses.
     * </pre>
     */
    TAG_STACK(5, 3),
    /**
     * <code>TAG_TLS = 4;</code>
     *
     * <pre>
     * Represents thread-local storage memory accesses.
     * </pre>
     */
    TAG_TLS(6, 4),
    /**
     * <code>TAG_NATIVE = 5;</code>
     *
     * <pre>
     * Represents native memory accesses.
     * </pre>
     */
    TAG_NATIVE(7, 5),
    /**
     * <code>TAG_STATIC = 6;</code>
     *
     * <pre>
     * Represents static class members accesses.
     * </pre>
     */
    TAG_STATIC(8, 6),
    /**
     * <code>TAG_UNDEFINED_GP = 7;</code>
     *
     * <pre>
     * Represents undefined general purpose tag (out of range [TAG_GP_LO; TAG_GP_HI]).
     * </pre>
     */
    TAG_UNDEFINED_GP(9, 7),
    /**
     * <code>TAG_RESERVED_LO = 8;</code>
     *
     * <pre>
     * Represents lowest reserved tag.
     * </pre>
     */
    TAG_RESERVED_LO(11, 8),
    /**
     * <code>TAG_RESERVED_HI = 10;</code>
     *
     * <pre>
     * Represents highest reserved tag.
     * </pre>
     */
    TAG_RESERVED_HI(12, 10),
    /**
     * <code>TAG_TRANSFORMATION_LO = 11;</code>
     *
     * <pre>
     * Represents lowest transformation tag.
     * </pre>
     */
    TAG_TRANSFORMATION_LO(13, 11),
    /**
     * <code>TAG_TRANSFORMATION_HI = 15;</code>
     *
     * <pre>
     * Represents highest transformation tag.
     * </pre>
     */
    TAG_TRANSFORMATION_HI(14, 15),
    /**
     * <code>TAG_GP_LO = 16;</code>
     *
     * <pre>
     * Represents lowest general purpose tag.
     * </pre>
     */
    TAG_GP_LO(15, 16),
    /**
     * <code>TAG_GP_HI = 65534;</code>
     *
     * <pre>
     * Represents highest general purpose tag.
     * </pre>
     */
    TAG_GP_HI(16, 65534),
    /**
     * <code>DEFINED_TAGS_NUM = 65535;</code>
     *
     * <pre>
     * Number of defined tags.
     * </pre>
     */
    DEFINED_TAGS_NUM(17, 65535),
    ;

    /**
     * <code>TAG_UNDEFINED = -1;</code>
     *
     * <pre>
     * Represents undefined tag.
     * </pre>
     */
    public static final PointerTag TAG_UNDEFINED = TAG_AGGREGATE_LO;
    /**
     * <code>TAG_AGGREGATE_HI = 7;</code>
     *
     * <pre>
     * Represents highest aggregate tag.
     * </pre>
     */
    public static final PointerTag TAG_AGGREGATE_HI = TAG_UNDEFINED_GP;
    /**
     * <code>TAG_AGGREGATE_LO = -1;</code>
     *
     * <pre>
     * Represents lowest aggregate tag.
     * </pre>
     */
    public static final int TAG_AGGREGATE_LO_VALUE = -1;
    /**
     * <code>TAG_UNDEFINED = -1;</code>
     *
     * <pre>
     * Represents undefined tag.
     * </pre>
     */
    public static final int TAG_UNDEFINED_VALUE = -1;
    /**
     * <code>TAG_FETCHES = 0;</code>
     *
     * <pre>
     * Represents code fetch memory accesses.
     * </pre>
     */
    public static final int TAG_FETCHES_VALUE = 0;
    /**
     * <code>TAG_CODE = 1;</code>
     *
     * <pre>
     * Represents self-referencing or self-modifying code memory accesses.
     * </pre>
     */
    public static final int TAG_CODE_VALUE = 1;
    /**
     * <code>TAG_HEAP = 2;</code>
     *
     * <pre>
     * Represents raw heap memory accesses (e.g. initializing heap with zeroes).
     * </pre>
     */
    public static final int TAG_HEAP_VALUE = 2;
    /**
     * <code>TAG_STACK = 3;</code>
     *
     * <pre>
     * Represents stack memory accesses.
     * </pre>
     */
    public static final int TAG_STACK_VALUE = 3;
    /**
     * <code>TAG_TLS = 4;</code>
     *
     * <pre>
     * Represents thread-local storage memory accesses.
     * </pre>
     */
    public static final int TAG_TLS_VALUE = 4;
    /**
     * <code>TAG_NATIVE = 5;</code>
     *
     * <pre>
     * Represents native memory accesses.
     * </pre>
     */
    public static final int TAG_NATIVE_VALUE = 5;
    /**
     * <code>TAG_STATIC = 6;</code>
     *
     * <pre>
     * Represents static class members accesses.
     * </pre>
     */
    public static final int TAG_STATIC_VALUE = 6;
    /**
     * <code>TAG_UNDEFINED_GP = 7;</code>
     *
     * <pre>
     * Represents undefined general purpose tag (out of range [TAG_GP_LO; TAG_GP_HI]).
     * </pre>
     */
    public static final int TAG_UNDEFINED_GP_VALUE = 7;
    /**
     * <code>TAG_AGGREGATE_HI = 7;</code>
     *
     * <pre>
     * Represents highest aggregate tag.
     * </pre>
     */
    public static final int TAG_AGGREGATE_HI_VALUE = 7;
    /**
     * <code>TAG_RESERVED_LO = 8;</code>
     *
     * <pre>
     * Represents lowest reserved tag.
     * </pre>
     */
    public static final int TAG_RESERVED_LO_VALUE = 8;
    /**
     * <code>TAG_RESERVED_HI = 10;</code>
     *
     * <pre>
     * Represents highest reserved tag.
     * </pre>
     */
    public static final int TAG_RESERVED_HI_VALUE = 10;
    /**
     * <code>TAG_TRANSFORMATION_LO = 11;</code>
     *
     * <pre>
     * Represents lowest transformation tag.
     * </pre>
     */
    public static final int TAG_TRANSFORMATION_LO_VALUE = 11;
    /**
     * <code>TAG_TRANSFORMATION_HI = 15;</code>
     *
     * <pre>
     * Represents highest transformation tag.
     * </pre>
     */
    public static final int TAG_TRANSFORMATION_HI_VALUE = 15;
    /**
     * <code>TAG_GP_LO = 16;</code>
     *
     * <pre>
     * Represents lowest general purpose tag.
     * </pre>
     */
    public static final int TAG_GP_LO_VALUE = 16;
    /**
     * <code>TAG_GP_HI = 65534;</code>
     *
     * <pre>
     * Represents highest general purpose tag.
     * </pre>
     */
    public static final int TAG_GP_HI_VALUE = 65534;
    /**
     * <code>DEFINED_TAGS_NUM = 65535;</code>
     *
     * <pre>
     * Number of defined tags.
     * </pre>
     */
    public static final int DEFINED_TAGS_NUM_VALUE = 65535;


    public final int getNumber() { return value; }

    public static PointerTag valueOf(int value) {
      switch (value) {
        case -1: return TAG_AGGREGATE_LO;
        case 0: return TAG_FETCHES;
        case 1: return TAG_CODE;
        case 2: return TAG_HEAP;
        case 3: return TAG_STACK;
        case 4: return TAG_TLS;
        case 5: return TAG_NATIVE;
        case 6: return TAG_STATIC;
        case 7: return TAG_UNDEFINED_GP;
        case 8: return TAG_RESERVED_LO;
        case 10: return TAG_RESERVED_HI;
        case 11: return TAG_TRANSFORMATION_LO;
        case 15: return TAG_TRANSFORMATION_HI;
        case 16: return TAG_GP_LO;
        case 65534: return TAG_GP_HI;
        case 65535: return DEFINED_TAGS_NUM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PointerTag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<PointerTag>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<PointerTag>() {
            public PointerTag findValueByNumber(int number) {
              return PointerTag.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.getDescriptor().getEnumTypes().get(7);
    }

    private static final PointerTag[] VALUES = {
      TAG_AGGREGATE_LO, TAG_UNDEFINED, TAG_FETCHES, TAG_CODE, TAG_HEAP, TAG_STACK, TAG_TLS, TAG_NATIVE, TAG_STATIC, TAG_UNDEFINED_GP, TAG_AGGREGATE_HI, TAG_RESERVED_LO, TAG_RESERVED_HI, TAG_TRANSFORMATION_LO, TAG_TRANSFORMATION_HI, TAG_GP_LO, TAG_GP_HI, DEFINED_TAGS_NUM, 
    };

    public static PointerTag valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private PointerTag(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:MaxSimInterface.PointerTag)
  }

  public interface MaxSimConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.MaxSimConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
     *
     * <pre>
     * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
     * </pre>
     */
    boolean hasIsMaxSimEnabled();
    /**
     * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
     *
     * <pre>
     * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
     * </pre>
     */
    boolean getIsMaxSimEnabled();

    /**
     * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
     *
     * <pre>
     * Type of pointer tagging active in MaxSim.
     * </pre>
     */
    boolean hasPointerTaggingType();
    /**
     * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
     *
     * <pre>
     * Type of pointer tagging active in MaxSim.
     * </pre>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType getPointerTaggingType();

    /**
     * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
     * </pre>
     */
    boolean hasLayoutScaleFactor();
    /**
     * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
     * </pre>
     */
    int getLayoutScaleFactor();

    /**
     * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for references in Maxine VM used in address space morphing.
     * </pre>
     */
    boolean hasLayoutScaleRefFactor();
    /**
     * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for references in Maxine VM used in address space morphing.
     * </pre>
     */
    int getLayoutScaleRefFactor();
  }
  /**
   * Protobuf type {@code MaxSimInterface.MaxSimConfig}
   *
   * <pre>
   * MaxSim configuration.
   * </pre>
   */
  public static final class MaxSimConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.MaxSimConfig)
      MaxSimConfigOrBuilder {
    // Use MaxSimConfig.newBuilder() to construct.
    private MaxSimConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaxSimConfig(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaxSimConfig defaultInstance;
    public static MaxSimConfig getDefaultInstance() {
      return defaultInstance;
    }

    public MaxSimConfig getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaxSimConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              isMaxSimEnabled_ = input.readBool();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType value = com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                pointerTaggingType_ = value;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              layoutScaleFactor_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              layoutScaleRefFactor_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxSimConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxSimConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.class, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder.class);
    }

    public static com.google.protobuf.Parser<MaxSimConfig> PARSER =
        new com.google.protobuf.AbstractParser<MaxSimConfig>() {
      public MaxSimConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaxSimConfig(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaxSimConfig> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ISMAXSIMENABLED_FIELD_NUMBER = 1;
    private boolean isMaxSimEnabled_;
    /**
     * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
     *
     * <pre>
     * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
     * </pre>
     */
    public boolean hasIsMaxSimEnabled() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
     *
     * <pre>
     * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
     * </pre>
     */
    public boolean getIsMaxSimEnabled() {
      return isMaxSimEnabled_;
    }

    public static final int POINTERTAGGINGTYPE_FIELD_NUMBER = 2;
    private com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType pointerTaggingType_;
    /**
     * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
     *
     * <pre>
     * Type of pointer tagging active in MaxSim.
     * </pre>
     */
    public boolean hasPointerTaggingType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
     *
     * <pre>
     * Type of pointer tagging active in MaxSim.
     * </pre>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType getPointerTaggingType() {
      return pointerTaggingType_;
    }

    public static final int LAYOUTSCALEFACTOR_FIELD_NUMBER = 3;
    private int layoutScaleFactor_;
    /**
     * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
     * </pre>
     */
    public boolean hasLayoutScaleFactor() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
     * </pre>
     */
    public int getLayoutScaleFactor() {
      return layoutScaleFactor_;
    }

    public static final int LAYOUTSCALEREFFACTOR_FIELD_NUMBER = 4;
    private int layoutScaleRefFactor_;
    /**
     * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for references in Maxine VM used in address space morphing.
     * </pre>
     */
    public boolean hasLayoutScaleRefFactor() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
     *
     * <pre>
     * Scaling factor for references in Maxine VM used in address space morphing.
     * </pre>
     */
    public int getLayoutScaleRefFactor() {
      return layoutScaleRefFactor_;
    }

    private void initFields() {
      isMaxSimEnabled_ = true;
      pointerTaggingType_ = com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType.CLASS_ID_TAGGING;
      layoutScaleFactor_ = 1;
      layoutScaleRefFactor_ = 1;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, isMaxSimEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, pointerTaggingType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, layoutScaleFactor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, layoutScaleRefFactor_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, isMaxSimEnabled_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, pointerTaggingType_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, layoutScaleFactor_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, layoutScaleRefFactor_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.MaxSimConfig}
     *
     * <pre>
     * MaxSim configuration.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.MaxSimConfig)
        com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxSimConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxSimConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.class, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        isMaxSimEnabled_ = true;
        bitField0_ = (bitField0_ & ~0x00000001);
        pointerTaggingType_ = com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType.CLASS_ID_TAGGING;
        bitField0_ = (bitField0_ & ~0x00000002);
        layoutScaleFactor_ = 1;
        bitField0_ = (bitField0_ & ~0x00000004);
        layoutScaleRefFactor_ = 1;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxSimConfig_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig build() {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig result = new com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isMaxSimEnabled_ = isMaxSimEnabled_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pointerTaggingType_ = pointerTaggingType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.layoutScaleFactor_ = layoutScaleFactor_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.layoutScaleRefFactor_ = layoutScaleRefFactor_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance()) return this;
        if (other.hasIsMaxSimEnabled()) {
          setIsMaxSimEnabled(other.getIsMaxSimEnabled());
        }
        if (other.hasPointerTaggingType()) {
          setPointerTaggingType(other.getPointerTaggingType());
        }
        if (other.hasLayoutScaleFactor()) {
          setLayoutScaleFactor(other.getLayoutScaleFactor());
        }
        if (other.hasLayoutScaleRefFactor()) {
          setLayoutScaleRefFactor(other.getLayoutScaleRefFactor());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean isMaxSimEnabled_ = true;
      /**
       * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
       *
       * <pre>
       * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
       * </pre>
       */
      public boolean hasIsMaxSimEnabled() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
       *
       * <pre>
       * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
       * </pre>
       */
      public boolean getIsMaxSimEnabled() {
        return isMaxSimEnabled_;
      }
      /**
       * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
       *
       * <pre>
       * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
       * </pre>
       */
      public Builder setIsMaxSimEnabled(boolean value) {
        bitField0_ |= 0x00000001;
        isMaxSimEnabled_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isMaxSimEnabled = 1 [default = true];</code>
       *
       * <pre>
       * Indicates whether MaxSim is enabled (Maxine and ZSim are working in tandem).
       * </pre>
       */
      public Builder clearIsMaxSimEnabled() {
        bitField0_ = (bitField0_ & ~0x00000001);
        isMaxSimEnabled_ = true;
        onChanged();
        return this;
      }

      private com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType pointerTaggingType_ = com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType.CLASS_ID_TAGGING;
      /**
       * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
       *
       * <pre>
       * Type of pointer tagging active in MaxSim.
       * </pre>
       */
      public boolean hasPointerTaggingType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
       *
       * <pre>
       * Type of pointer tagging active in MaxSim.
       * </pre>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType getPointerTaggingType() {
        return pointerTaggingType_;
      }
      /**
       * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
       *
       * <pre>
       * Type of pointer tagging active in MaxSim.
       * </pre>
       */
      public Builder setPointerTaggingType(com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        pointerTaggingType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MaxSimInterface.PointerTaggingType pointerTaggingType = 2 [default = CLASS_ID_TAGGING];</code>
       *
       * <pre>
       * Type of pointer tagging active in MaxSim.
       * </pre>
       */
      public Builder clearPointerTaggingType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pointerTaggingType_ = com.sun.max.vm.maxsim.MaxSimInterface.PointerTaggingType.CLASS_ID_TAGGING;
        onChanged();
        return this;
      }

      private int layoutScaleFactor_ = 1;
      /**
       * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
       * </pre>
       */
      public boolean hasLayoutScaleFactor() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
       * </pre>
       */
      public int getLayoutScaleFactor() {
        return layoutScaleFactor_;
      }
      /**
       * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
       * </pre>
       */
      public Builder setLayoutScaleFactor(int value) {
        bitField0_ |= 0x00000004;
        layoutScaleFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 layoutScaleFactor = 3 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for primitives in Maxine VM and contraction factor in ZSim used in address space morphing.
       * </pre>
       */
      public Builder clearLayoutScaleFactor() {
        bitField0_ = (bitField0_ & ~0x00000004);
        layoutScaleFactor_ = 1;
        onChanged();
        return this;
      }

      private int layoutScaleRefFactor_ = 1;
      /**
       * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for references in Maxine VM used in address space morphing.
       * </pre>
       */
      public boolean hasLayoutScaleRefFactor() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for references in Maxine VM used in address space morphing.
       * </pre>
       */
      public int getLayoutScaleRefFactor() {
        return layoutScaleRefFactor_;
      }
      /**
       * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for references in Maxine VM used in address space morphing.
       * </pre>
       */
      public Builder setLayoutScaleRefFactor(int value) {
        bitField0_ |= 0x00000008;
        layoutScaleRefFactor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 layoutScaleRefFactor = 4 [default = 1];</code>
       *
       * <pre>
       * Scaling factor for references in Maxine VM used in address space morphing.
       * </pre>
       */
      public Builder clearLayoutScaleRefFactor() {
        bitField0_ = (bitField0_ & ~0x00000008);
        layoutScaleRefFactor_ = 1;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.MaxSimConfig)
    }

    static {
      defaultInstance = new MaxSimConfig(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.MaxSimConfig)
  }

  public interface FieldOffsetRemapPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.FieldOffsetRemapPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 fromOffset = 1;</code>
     */
    boolean hasFromOffset();
    /**
     * <code>required int32 fromOffset = 1;</code>
     */
    int getFromOffset();

    /**
     * <code>required int32 toOffset = 2;</code>
     */
    boolean hasToOffset();
    /**
     * <code>required int32 toOffset = 2;</code>
     */
    int getToOffset();
  }
  /**
   * Protobuf type {@code MaxSimInterface.FieldOffsetRemapPair}
   *
   * <pre>
   * Field offset remapping pair.
   * </pre>
   */
  public static final class FieldOffsetRemapPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.FieldOffsetRemapPair)
      FieldOffsetRemapPairOrBuilder {
    // Use FieldOffsetRemapPair.newBuilder() to construct.
    private FieldOffsetRemapPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FieldOffsetRemapPair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FieldOffsetRemapPair defaultInstance;
    public static FieldOffsetRemapPair getDefaultInstance() {
      return defaultInstance;
    }

    public FieldOffsetRemapPair getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FieldOffsetRemapPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              fromOffset_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              toOffset_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldOffsetRemapPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder.class);
    }

    public static com.google.protobuf.Parser<FieldOffsetRemapPair> PARSER =
        new com.google.protobuf.AbstractParser<FieldOffsetRemapPair>() {
      public FieldOffsetRemapPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldOffsetRemapPair(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FieldOffsetRemapPair> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int FROMOFFSET_FIELD_NUMBER = 1;
    private int fromOffset_;
    /**
     * <code>required int32 fromOffset = 1;</code>
     */
    public boolean hasFromOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 fromOffset = 1;</code>
     */
    public int getFromOffset() {
      return fromOffset_;
    }

    public static final int TOOFFSET_FIELD_NUMBER = 2;
    private int toOffset_;
    /**
     * <code>required int32 toOffset = 2;</code>
     */
    public boolean hasToOffset() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 toOffset = 2;</code>
     */
    public int getToOffset() {
      return toOffset_;
    }

    private void initFields() {
      fromOffset_ = 0;
      toOffset_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasFromOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasToOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, fromOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, toOffset_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, fromOffset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, toOffset_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.FieldOffsetRemapPair}
     *
     * <pre>
     * Field offset remapping pair.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.FieldOffsetRemapPair)
        com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldOffsetRemapPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        fromOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        toOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair build() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair result = new com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.fromOffset_ = fromOffset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.toOffset_ = toOffset_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.getDefaultInstance()) return this;
        if (other.hasFromOffset()) {
          setFromOffset(other.getFromOffset());
        }
        if (other.hasToOffset()) {
          setToOffset(other.getToOffset());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasFromOffset()) {
          
          return false;
        }
        if (!hasToOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int fromOffset_ ;
      /**
       * <code>required int32 fromOffset = 1;</code>
       */
      public boolean hasFromOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 fromOffset = 1;</code>
       */
      public int getFromOffset() {
        return fromOffset_;
      }
      /**
       * <code>required int32 fromOffset = 1;</code>
       */
      public Builder setFromOffset(int value) {
        bitField0_ |= 0x00000001;
        fromOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 fromOffset = 1;</code>
       */
      public Builder clearFromOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fromOffset_ = 0;
        onChanged();
        return this;
      }

      private int toOffset_ ;
      /**
       * <code>required int32 toOffset = 2;</code>
       */
      public boolean hasToOffset() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 toOffset = 2;</code>
       */
      public int getToOffset() {
        return toOffset_;
      }
      /**
       * <code>required int32 toOffset = 2;</code>
       */
      public Builder setToOffset(int value) {
        bitField0_ |= 0x00000002;
        toOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 toOffset = 2;</code>
       */
      public Builder clearToOffset() {
        bitField0_ = (bitField0_ & ~0x00000002);
        toOffset_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.FieldOffsetRemapPair)
    }

    static {
      defaultInstance = new FieldOffsetRemapPair(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.FieldOffsetRemapPair)
  }

  public interface DataTransInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.DataTransInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string typeDesc = 1;</code>
     */
    boolean hasTypeDesc();
    /**
     * <code>required string typeDesc = 1;</code>
     */
    java.lang.String getTypeDesc();
    /**
     * <code>required string typeDesc = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeDescBytes();

    /**
     * <code>optional int32 transTag = 2;</code>
     */
    boolean hasTransTag();
    /**
     * <code>optional int32 transTag = 2;</code>
     */
    int getTransTag();

    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> 
        getFieldOffsetRemapPairsList();
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair getFieldOffsetRemapPairs(int index);
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    int getFieldOffsetRemapPairsCount();
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder> 
        getFieldOffsetRemapPairsOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder getFieldOffsetRemapPairsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.DataTransInfo}
   *
   * <pre>
   * Data transformation information.
   * </pre>
   */
  public static final class DataTransInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.DataTransInfo)
      DataTransInfoOrBuilder {
    // Use DataTransInfo.newBuilder() to construct.
    private DataTransInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataTransInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataTransInfo defaultInstance;
    public static DataTransInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DataTransInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataTransInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              typeDesc_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              transTag_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fieldOffsetRemapPairs_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair>();
                mutable_bitField0_ |= 0x00000004;
              }
              fieldOffsetRemapPairs_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fieldOffsetRemapPairs_ = java.util.Collections.unmodifiableList(fieldOffsetRemapPairs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DataTransInfo> PARSER =
        new com.google.protobuf.AbstractParser<DataTransInfo>() {
      public DataTransInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataTransInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataTransInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TYPEDESC_FIELD_NUMBER = 1;
    private java.lang.Object typeDesc_;
    /**
     * <code>required string typeDesc = 1;</code>
     */
    public boolean hasTypeDesc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string typeDesc = 1;</code>
     */
    public java.lang.String getTypeDesc() {
      java.lang.Object ref = typeDesc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          typeDesc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string typeDesc = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeDescBytes() {
      java.lang.Object ref = typeDesc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRANSTAG_FIELD_NUMBER = 2;
    private int transTag_;
    /**
     * <code>optional int32 transTag = 2;</code>
     */
    public boolean hasTransTag() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 transTag = 2;</code>
     */
    public int getTransTag() {
      return transTag_;
    }

    public static final int FIELDOFFSETREMAPPAIRS_FIELD_NUMBER = 3;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> fieldOffsetRemapPairs_;
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> getFieldOffsetRemapPairsList() {
      return fieldOffsetRemapPairs_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder> 
        getFieldOffsetRemapPairsOrBuilderList() {
      return fieldOffsetRemapPairs_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    public int getFieldOffsetRemapPairsCount() {
      return fieldOffsetRemapPairs_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair getFieldOffsetRemapPairs(int index) {
      return fieldOffsetRemapPairs_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder getFieldOffsetRemapPairsOrBuilder(
        int index) {
      return fieldOffsetRemapPairs_.get(index);
    }

    private void initFields() {
      typeDesc_ = "";
      transTag_ = 0;
      fieldOffsetRemapPairs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTypeDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldOffsetRemapPairsCount(); i++) {
        if (!getFieldOffsetRemapPairs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTypeDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, transTag_);
      }
      for (int i = 0; i < fieldOffsetRemapPairs_.size(); i++) {
        output.writeMessage(3, fieldOffsetRemapPairs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTypeDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, transTag_);
      }
      for (int i = 0; i < fieldOffsetRemapPairs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fieldOffsetRemapPairs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.DataTransInfo}
     *
     * <pre>
     * Data transformation information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.DataTransInfo)
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldOffsetRemapPairsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        typeDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        transTag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (fieldOffsetRemapPairsBuilder_ == null) {
          fieldOffsetRemapPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fieldOffsetRemapPairsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransInfo_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo build() {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo result = new com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.typeDesc_ = typeDesc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.transTag_ = transTag_;
        if (fieldOffsetRemapPairsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fieldOffsetRemapPairs_ = java.util.Collections.unmodifiableList(fieldOffsetRemapPairs_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fieldOffsetRemapPairs_ = fieldOffsetRemapPairs_;
        } else {
          result.fieldOffsetRemapPairs_ = fieldOffsetRemapPairsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance()) return this;
        if (other.hasTypeDesc()) {
          bitField0_ |= 0x00000001;
          typeDesc_ = other.typeDesc_;
          onChanged();
        }
        if (other.hasTransTag()) {
          setTransTag(other.getTransTag());
        }
        if (fieldOffsetRemapPairsBuilder_ == null) {
          if (!other.fieldOffsetRemapPairs_.isEmpty()) {
            if (fieldOffsetRemapPairs_.isEmpty()) {
              fieldOffsetRemapPairs_ = other.fieldOffsetRemapPairs_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFieldOffsetRemapPairsIsMutable();
              fieldOffsetRemapPairs_.addAll(other.fieldOffsetRemapPairs_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldOffsetRemapPairs_.isEmpty()) {
            if (fieldOffsetRemapPairsBuilder_.isEmpty()) {
              fieldOffsetRemapPairsBuilder_.dispose();
              fieldOffsetRemapPairsBuilder_ = null;
              fieldOffsetRemapPairs_ = other.fieldOffsetRemapPairs_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fieldOffsetRemapPairsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldOffsetRemapPairsFieldBuilder() : null;
            } else {
              fieldOffsetRemapPairsBuilder_.addAllMessages(other.fieldOffsetRemapPairs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTypeDesc()) {
          
          return false;
        }
        for (int i = 0; i < getFieldOffsetRemapPairsCount(); i++) {
          if (!getFieldOffsetRemapPairs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object typeDesc_ = "";
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public boolean hasTypeDesc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public java.lang.String getTypeDesc() {
        java.lang.Object ref = typeDesc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            typeDesc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeDescBytes() {
        java.lang.Object ref = typeDesc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeDesc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public Builder setTypeDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeDesc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public Builder clearTypeDesc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        typeDesc_ = getDefaultInstance().getTypeDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string typeDesc = 1;</code>
       */
      public Builder setTypeDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        typeDesc_ = value;
        onChanged();
        return this;
      }

      private int transTag_ ;
      /**
       * <code>optional int32 transTag = 2;</code>
       */
      public boolean hasTransTag() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 transTag = 2;</code>
       */
      public int getTransTag() {
        return transTag_;
      }
      /**
       * <code>optional int32 transTag = 2;</code>
       */
      public Builder setTransTag(int value) {
        bitField0_ |= 0x00000002;
        transTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 transTag = 2;</code>
       */
      public Builder clearTransTag() {
        bitField0_ = (bitField0_ & ~0x00000002);
        transTag_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> fieldOffsetRemapPairs_ =
        java.util.Collections.emptyList();
      private void ensureFieldOffsetRemapPairsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fieldOffsetRemapPairs_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair>(fieldOffsetRemapPairs_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder> fieldOffsetRemapPairsBuilder_;

      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> getFieldOffsetRemapPairsList() {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldOffsetRemapPairs_);
        } else {
          return fieldOffsetRemapPairsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public int getFieldOffsetRemapPairsCount() {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          return fieldOffsetRemapPairs_.size();
        } else {
          return fieldOffsetRemapPairsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair getFieldOffsetRemapPairs(int index) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          return fieldOffsetRemapPairs_.get(index);
        } else {
          return fieldOffsetRemapPairsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder setFieldOffsetRemapPairs(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair value) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.set(index, value);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder setFieldOffsetRemapPairs(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder builderForValue) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder addFieldOffsetRemapPairs(com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair value) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.add(value);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder addFieldOffsetRemapPairs(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair value) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.add(index, value);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder addFieldOffsetRemapPairs(
          com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder builderForValue) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.add(builderForValue.build());
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder addFieldOffsetRemapPairs(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder builderForValue) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder addAllFieldOffsetRemapPairs(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair> values) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          ensureFieldOffsetRemapPairsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldOffsetRemapPairs_);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder clearFieldOffsetRemapPairs() {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          fieldOffsetRemapPairs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public Builder removeFieldOffsetRemapPairs(int index) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          ensureFieldOffsetRemapPairsIsMutable();
          fieldOffsetRemapPairs_.remove(index);
          onChanged();
        } else {
          fieldOffsetRemapPairsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder getFieldOffsetRemapPairsBuilder(
          int index) {
        return getFieldOffsetRemapPairsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder getFieldOffsetRemapPairsOrBuilder(
          int index) {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          return fieldOffsetRemapPairs_.get(index);  } else {
          return fieldOffsetRemapPairsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder> 
           getFieldOffsetRemapPairsOrBuilderList() {
        if (fieldOffsetRemapPairsBuilder_ != null) {
          return fieldOffsetRemapPairsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldOffsetRemapPairs_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder addFieldOffsetRemapPairsBuilder() {
        return getFieldOffsetRemapPairsFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder addFieldOffsetRemapPairsBuilder(
          int index) {
        return getFieldOffsetRemapPairsFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldOffsetRemapPair fieldOffsetRemapPairs = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder> 
           getFieldOffsetRemapPairsBuilderList() {
        return getFieldOffsetRemapPairsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder> 
          getFieldOffsetRemapPairsFieldBuilder() {
        if (fieldOffsetRemapPairsBuilder_ == null) {
          fieldOffsetRemapPairsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldOffsetRemapPairOrBuilder>(
                  fieldOffsetRemapPairs_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fieldOffsetRemapPairs_ = null;
        }
        return fieldOffsetRemapPairsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.DataTransInfo)
    }

    static {
      defaultInstance = new DataTransInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.DataTransInfo)
  }

  public interface DataTransDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.DataTransDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> 
        getDataTransInfoList();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    int getDataTransInfoCount();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
        getDataTransInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.DataTransDB}
   *
   * <pre>
   * Data transformation database.
   * </pre>
   */
  public static final class DataTransDB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.DataTransDB)
      DataTransDBOrBuilder {
    // Use DataTransDB.newBuilder() to construct.
    private DataTransDB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DataTransDB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DataTransDB defaultInstance;
    public static DataTransDB getDefaultInstance() {
      return defaultInstance;
    }

    public DataTransDB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DataTransDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                dataTransInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              dataTransInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          dataTransInfo_ = java.util.Collections.unmodifiableList(dataTransInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransDB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.class, com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.Builder.class);
    }

    public static com.google.protobuf.Parser<DataTransDB> PARSER =
        new com.google.protobuf.AbstractParser<DataTransDB>() {
      public DataTransDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataTransDB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DataTransDB> getParserForType() {
      return PARSER;
    }

    public static final int DATATRANSINFO_FIELD_NUMBER = 1;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> dataTransInfo_;
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> getDataTransInfoList() {
      return dataTransInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
        getDataTransInfoOrBuilderList() {
      return dataTransInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    public int getDataTransInfoCount() {
      return dataTransInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index) {
      return dataTransInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
        int index) {
      return dataTransInfo_.get(index);
    }

    private void initFields() {
      dataTransInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getDataTransInfoCount(); i++) {
        if (!getDataTransInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < dataTransInfo_.size(); i++) {
        output.writeMessage(1, dataTransInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < dataTransInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, dataTransInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.DataTransDB}
     *
     * <pre>
     * Data transformation database.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.DataTransDB)
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransDB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.class, com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getDataTransInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (dataTransInfoBuilder_ == null) {
          dataTransInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          dataTransInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_DataTransDB_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB build() {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB result = new com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB(this);
        int from_bitField0_ = bitField0_;
        if (dataTransInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            dataTransInfo_ = java.util.Collections.unmodifiableList(dataTransInfo_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.dataTransInfo_ = dataTransInfo_;
        } else {
          result.dataTransInfo_ = dataTransInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB.getDefaultInstance()) return this;
        if (dataTransInfoBuilder_ == null) {
          if (!other.dataTransInfo_.isEmpty()) {
            if (dataTransInfo_.isEmpty()) {
              dataTransInfo_ = other.dataTransInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureDataTransInfoIsMutable();
              dataTransInfo_.addAll(other.dataTransInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.dataTransInfo_.isEmpty()) {
            if (dataTransInfoBuilder_.isEmpty()) {
              dataTransInfoBuilder_.dispose();
              dataTransInfoBuilder_ = null;
              dataTransInfo_ = other.dataTransInfo_;
              bitField0_ = (bitField0_ & ~0x00000001);
              dataTransInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataTransInfoFieldBuilder() : null;
            } else {
              dataTransInfoBuilder_.addAllMessages(other.dataTransInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getDataTransInfoCount(); i++) {
          if (!getDataTransInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.DataTransDB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> dataTransInfo_ =
        java.util.Collections.emptyList();
      private void ensureDataTransInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          dataTransInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo>(dataTransInfo_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> dataTransInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> getDataTransInfoList() {
        if (dataTransInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataTransInfo_);
        } else {
          return dataTransInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public int getDataTransInfoCount() {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.size();
        } else {
          return dataTransInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index) {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.get(index);
        } else {
          return dataTransInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder setDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.set(index, value);
          onChanged();
        } else {
          dataTransInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder setDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder addDataTransInfo(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(value);
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder addDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(index, value);
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder addDataTransInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder addDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder addAllDataTransInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> values) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataTransInfo_);
          onChanged();
        } else {
          dataTransInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder clearDataTransInfo() {
        if (dataTransInfoBuilder_ == null) {
          dataTransInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          dataTransInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public Builder removeDataTransInfo(int index) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.remove(index);
          onChanged();
        } else {
          dataTransInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder getDataTransInfoBuilder(
          int index) {
        return getDataTransInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
          int index) {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.get(index);  } else {
          return dataTransInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
           getDataTransInfoOrBuilderList() {
        if (dataTransInfoBuilder_ != null) {
          return dataTransInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataTransInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder addDataTransInfoBuilder() {
        return getDataTransInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder addDataTransInfoBuilder(
          int index) {
        return getDataTransInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 1;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder> 
           getDataTransInfoBuilderList() {
        return getDataTransInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
          getDataTransInfoFieldBuilder() {
        if (dataTransInfoBuilder_ == null) {
          dataTransInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder>(
                  dataTransInfo_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          dataTransInfo_ = null;
        }
        return dataTransInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.DataTransDB)
    }

    static {
      defaultInstance = new DataTransDB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.DataTransDB)
  }

  public interface OffsetBCIPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.OffsetBCIPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 offset = 1;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 1;</code>
     */
    int getOffset();

    /**
     * <code>required int32 BCI = 2;</code>
     */
    boolean hasBCI();
    /**
     * <code>required int32 BCI = 2;</code>
     */
    int getBCI();
  }
  /**
   * Protobuf type {@code MaxSimInterface.OffsetBCIPair}
   *
   * <pre>
   * Offset-BCI pair.
   * </pre>
   */
  public static final class OffsetBCIPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.OffsetBCIPair)
      OffsetBCIPairOrBuilder {
    // Use OffsetBCIPair.newBuilder() to construct.
    private OffsetBCIPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private OffsetBCIPair(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final OffsetBCIPair defaultInstance;
    public static OffsetBCIPair getDefaultInstance() {
      return defaultInstance;
    }

    public OffsetBCIPair getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private OffsetBCIPair(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              offset_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              bCI_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_OffsetBCIPair_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_OffsetBCIPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.class, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder.class);
    }

    public static com.google.protobuf.Parser<OffsetBCIPair> PARSER =
        new com.google.protobuf.AbstractParser<OffsetBCIPair>() {
      public OffsetBCIPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OffsetBCIPair(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<OffsetBCIPair> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OFFSET_FIELD_NUMBER = 1;
    private int offset_;
    /**
     * <code>required int32 offset = 1;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 offset = 1;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int BCI_FIELD_NUMBER = 2;
    private int bCI_;
    /**
     * <code>required int32 BCI = 2;</code>
     */
    public boolean hasBCI() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 BCI = 2;</code>
     */
    public int getBCI() {
      return bCI_;
    }

    private void initFields() {
      offset_ = 0;
      bCI_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBCI()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, offset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, bCI_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, offset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, bCI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.OffsetBCIPair}
     *
     * <pre>
     * Offset-BCI pair.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.OffsetBCIPair)
        com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_OffsetBCIPair_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_OffsetBCIPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.class, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        bCI_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_OffsetBCIPair_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair build() {
        com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair result = new com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.bCI_ = bCI_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.getDefaultInstance()) return this;
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasBCI()) {
          setBCI(other.getBCI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasBCI()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int offset_ ;
      /**
       * <code>required int32 offset = 1;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000001;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0;
        onChanged();
        return this;
      }

      private int bCI_ ;
      /**
       * <code>required int32 BCI = 2;</code>
       */
      public boolean hasBCI() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 BCI = 2;</code>
       */
      public int getBCI() {
        return bCI_;
      }
      /**
       * <code>required int32 BCI = 2;</code>
       */
      public Builder setBCI(int value) {
        bitField0_ |= 0x00000002;
        bCI_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 BCI = 2;</code>
       */
      public Builder clearBCI() {
        bitField0_ = (bitField0_ & ~0x00000002);
        bCI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.OffsetBCIPair)
    }

    static {
      defaultInstance = new OffsetBCIPair(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.OffsetBCIPair)
  }

  public interface MethodInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.MethodInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required int64 beginIP = 2;</code>
     */
    boolean hasBeginIP();
    /**
     * <code>required int64 beginIP = 2;</code>
     */
    long getBeginIP();

    /**
     * <code>required int64 size = 3;</code>
     */
    boolean hasSize();
    /**
     * <code>required int64 size = 3;</code>
     */
    long getSize();

    /**
     * <code>optional string desc = 4;</code>
     */
    boolean hasDesc();
    /**
     * <code>optional string desc = 4;</code>
     */
    java.lang.String getDesc();
    /**
     * <code>optional string desc = 4;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    /**
     * <code>optional int32 classId = 5;</code>
     */
    boolean hasClassId();
    /**
     * <code>optional int32 classId = 5;</code>
     */
    int getClassId();

    /**
     * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
     */
    boolean hasKind();
    /**
     * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind getKind();

    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> 
        getOffsetBCIPairList();
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair getOffsetBCIPair(int index);
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    int getOffsetBCIPairCount();
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder> 
        getOffsetBCIPairOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder getOffsetBCIPairOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.MethodInfo}
   *
   * <pre>
   * Method information.
   * </pre>
   */
  public static final class MethodInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.MethodInfo)
      MethodInfoOrBuilder {
    // Use MethodInfo.newBuilder() to construct.
    private MethodInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MethodInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MethodInfo defaultInstance;
    public static MethodInfo getDefaultInstance() {
      return defaultInstance;
    }

    public MethodInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MethodInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              beginIP_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              size_ = input.readInt64();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              desc_ = bs;
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              classId_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind value = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                kind_ = value;
              }
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                offsetBCIPair_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair>();
                mutable_bitField0_ |= 0x00000040;
              }
              offsetBCIPair_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          offsetBCIPair_ = java.util.Collections.unmodifiableList(offsetBCIPair_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MethodInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MethodInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<MethodInfo> PARSER =
        new com.google.protobuf.AbstractParser<MethodInfo>() {
      public MethodInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MethodInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MethodInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code MaxSimInterface.MethodInfo.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>OPTIMIZED = 0;</code>
       */
      OPTIMIZED(0, 0),
      /**
       * <code>BOOT = 1;</code>
       */
      BOOT(1, 1),
      /**
       * <code>BASELINE = 2;</code>
       */
      BASELINE(2, 2),
      /**
       * <code>NATIVE = 3;</code>
       */
      NATIVE(3, 3),
      ;

      /**
       * <code>OPTIMIZED = 0;</code>
       */
      public static final int OPTIMIZED_VALUE = 0;
      /**
       * <code>BOOT = 1;</code>
       */
      public static final int BOOT_VALUE = 1;
      /**
       * <code>BASELINE = 2;</code>
       */
      public static final int BASELINE_VALUE = 2;
      /**
       * <code>NATIVE = 3;</code>
       */
      public static final int NATIVE_VALUE = 3;


      public final int getNumber() { return value; }

      public static Kind valueOf(int value) {
        switch (value) {
          case 0: return OPTIMIZED;
          case 1: return BOOT;
          case 2: return BASELINE;
          case 3: return NATIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Kind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MaxSimInterface.MethodInfo.Kind)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGINIP_FIELD_NUMBER = 2;
    private long beginIP_;
    /**
     * <code>required int64 beginIP = 2;</code>
     */
    public boolean hasBeginIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 beginIP = 2;</code>
     */
    public long getBeginIP() {
      return beginIP_;
    }

    public static final int SIZE_FIELD_NUMBER = 3;
    private long size_;
    /**
     * <code>required int64 size = 3;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 size = 3;</code>
     */
    public long getSize() {
      return size_;
    }

    public static final int DESC_FIELD_NUMBER = 4;
    private java.lang.Object desc_;
    /**
     * <code>optional string desc = 4;</code>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string desc = 4;</code>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string desc = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLASSID_FIELD_NUMBER = 5;
    private int classId_;
    /**
     * <code>optional int32 classId = 5;</code>
     */
    public boolean hasClassId() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 classId = 5;</code>
     */
    public int getClassId() {
      return classId_;
    }

    public static final int KIND_FIELD_NUMBER = 6;
    private com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind kind_;
    /**
     * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind getKind() {
      return kind_;
    }

    public static final int OFFSETBCIPAIR_FIELD_NUMBER = 7;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> offsetBCIPair_;
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> getOffsetBCIPairList() {
      return offsetBCIPair_;
    }
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder> 
        getOffsetBCIPairOrBuilderList() {
      return offsetBCIPair_;
    }
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    public int getOffsetBCIPairCount() {
      return offsetBCIPair_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair getOffsetBCIPair(int index) {
      return offsetBCIPair_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder getOffsetBCIPairOrBuilder(
        int index) {
      return offsetBCIPair_.get(index);
    }

    private void initFields() {
      name_ = "";
      beginIP_ = 0L;
      size_ = 0L;
      desc_ = "";
      classId_ = 0;
      kind_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind.OPTIMIZED;
      offsetBCIPair_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBeginIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getOffsetBCIPairCount(); i++) {
        if (!getOffsetBCIPair(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, beginIP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, classId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, kind_.getNumber());
      }
      for (int i = 0; i < offsetBCIPair_.size(); i++) {
        output.writeMessage(7, offsetBCIPair_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, beginIP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, size_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, classId_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, kind_.getNumber());
      }
      for (int i = 0; i < offsetBCIPair_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, offsetBCIPair_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.MethodInfo}
     *
     * <pre>
     * Method information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.MethodInfo)
        com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MethodInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MethodInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getOffsetBCIPairFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        beginIP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        size_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        classId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        kind_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind.OPTIMIZED;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (offsetBCIPairBuilder_ == null) {
          offsetBCIPair_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          offsetBCIPairBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MethodInfo_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo build() {
        com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo result = new com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.beginIP_ = beginIP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.classId_ = classId_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.kind_ = kind_;
        if (offsetBCIPairBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            offsetBCIPair_ = java.util.Collections.unmodifiableList(offsetBCIPair_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.offsetBCIPair_ = offsetBCIPair_;
        } else {
          result.offsetBCIPair_ = offsetBCIPairBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasBeginIP()) {
          setBeginIP(other.getBeginIP());
        }
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasDesc()) {
          bitField0_ |= 0x00000008;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasClassId()) {
          setClassId(other.getClassId());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (offsetBCIPairBuilder_ == null) {
          if (!other.offsetBCIPair_.isEmpty()) {
            if (offsetBCIPair_.isEmpty()) {
              offsetBCIPair_ = other.offsetBCIPair_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureOffsetBCIPairIsMutable();
              offsetBCIPair_.addAll(other.offsetBCIPair_);
            }
            onChanged();
          }
        } else {
          if (!other.offsetBCIPair_.isEmpty()) {
            if (offsetBCIPairBuilder_.isEmpty()) {
              offsetBCIPairBuilder_.dispose();
              offsetBCIPairBuilder_ = null;
              offsetBCIPair_ = other.offsetBCIPair_;
              bitField0_ = (bitField0_ & ~0x00000040);
              offsetBCIPairBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOffsetBCIPairFieldBuilder() : null;
            } else {
              offsetBCIPairBuilder_.addAllMessages(other.offsetBCIPair_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasBeginIP()) {
          
          return false;
        }
        if (!hasSize()) {
          
          return false;
        }
        for (int i = 0; i < getOffsetBCIPairCount(); i++) {
          if (!getOffsetBCIPair(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private long beginIP_ ;
      /**
       * <code>required int64 beginIP = 2;</code>
       */
      public boolean hasBeginIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 beginIP = 2;</code>
       */
      public long getBeginIP() {
        return beginIP_;
      }
      /**
       * <code>required int64 beginIP = 2;</code>
       */
      public Builder setBeginIP(long value) {
        bitField0_ |= 0x00000002;
        beginIP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 beginIP = 2;</code>
       */
      public Builder clearBeginIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        beginIP_ = 0L;
        onChanged();
        return this;
      }

      private long size_ ;
      /**
       * <code>required int64 size = 3;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public long getSize() {
        return size_;
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public Builder setSize(long value) {
        bitField0_ |= 0x00000004;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 size = 3;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        size_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object desc_ = "";
      /**
       * <code>optional string desc = 4;</code>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string desc = 4;</code>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            desc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string desc = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string desc = 4;</code>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string desc = 4;</code>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string desc = 4;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        desc_ = value;
        onChanged();
        return this;
      }

      private int classId_ ;
      /**
       * <code>optional int32 classId = 5;</code>
       */
      public boolean hasClassId() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 classId = 5;</code>
       */
      public int getClassId() {
        return classId_;
      }
      /**
       * <code>optional int32 classId = 5;</code>
       */
      public Builder setClassId(int value) {
        bitField0_ |= 0x00000010;
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 classId = 5;</code>
       */
      public Builder clearClassId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        classId_ = 0;
        onChanged();
        return this;
      }

      private com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind kind_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind.OPTIMIZED;
      /**
       * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind getKind() {
        return kind_;
      }
      /**
       * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
       */
      public Builder setKind(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MaxSimInterface.MethodInfo.Kind kind = 6;</code>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000020);
        kind_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Kind.OPTIMIZED;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> offsetBCIPair_ =
        java.util.Collections.emptyList();
      private void ensureOffsetBCIPairIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          offsetBCIPair_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair>(offsetBCIPair_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder> offsetBCIPairBuilder_;

      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> getOffsetBCIPairList() {
        if (offsetBCIPairBuilder_ == null) {
          return java.util.Collections.unmodifiableList(offsetBCIPair_);
        } else {
          return offsetBCIPairBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public int getOffsetBCIPairCount() {
        if (offsetBCIPairBuilder_ == null) {
          return offsetBCIPair_.size();
        } else {
          return offsetBCIPairBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair getOffsetBCIPair(int index) {
        if (offsetBCIPairBuilder_ == null) {
          return offsetBCIPair_.get(index);
        } else {
          return offsetBCIPairBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder setOffsetBCIPair(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair value) {
        if (offsetBCIPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.set(index, value);
          onChanged();
        } else {
          offsetBCIPairBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder setOffsetBCIPair(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder builderForValue) {
        if (offsetBCIPairBuilder_ == null) {
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.set(index, builderForValue.build());
          onChanged();
        } else {
          offsetBCIPairBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder addOffsetBCIPair(com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair value) {
        if (offsetBCIPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.add(value);
          onChanged();
        } else {
          offsetBCIPairBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder addOffsetBCIPair(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair value) {
        if (offsetBCIPairBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.add(index, value);
          onChanged();
        } else {
          offsetBCIPairBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder addOffsetBCIPair(
          com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder builderForValue) {
        if (offsetBCIPairBuilder_ == null) {
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.add(builderForValue.build());
          onChanged();
        } else {
          offsetBCIPairBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder addOffsetBCIPair(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder builderForValue) {
        if (offsetBCIPairBuilder_ == null) {
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.add(index, builderForValue.build());
          onChanged();
        } else {
          offsetBCIPairBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder addAllOffsetBCIPair(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair> values) {
        if (offsetBCIPairBuilder_ == null) {
          ensureOffsetBCIPairIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, offsetBCIPair_);
          onChanged();
        } else {
          offsetBCIPairBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder clearOffsetBCIPair() {
        if (offsetBCIPairBuilder_ == null) {
          offsetBCIPair_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          offsetBCIPairBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public Builder removeOffsetBCIPair(int index) {
        if (offsetBCIPairBuilder_ == null) {
          ensureOffsetBCIPairIsMutable();
          offsetBCIPair_.remove(index);
          onChanged();
        } else {
          offsetBCIPairBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder getOffsetBCIPairBuilder(
          int index) {
        return getOffsetBCIPairFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder getOffsetBCIPairOrBuilder(
          int index) {
        if (offsetBCIPairBuilder_ == null) {
          return offsetBCIPair_.get(index);  } else {
          return offsetBCIPairBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder> 
           getOffsetBCIPairOrBuilderList() {
        if (offsetBCIPairBuilder_ != null) {
          return offsetBCIPairBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(offsetBCIPair_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder addOffsetBCIPairBuilder() {
        return getOffsetBCIPairFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder addOffsetBCIPairBuilder(
          int index) {
        return getOffsetBCIPairFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.OffsetBCIPair offsetBCIPair = 7;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder> 
           getOffsetBCIPairBuilderList() {
        return getOffsetBCIPairFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder> 
          getOffsetBCIPairFieldBuilder() {
        if (offsetBCIPairBuilder_ == null) {
          offsetBCIPairBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPair.Builder, com.sun.max.vm.maxsim.MaxSimInterface.OffsetBCIPairOrBuilder>(
                  offsetBCIPair_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          offsetBCIPair_ = null;
        }
        return offsetBCIPairBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.MethodInfo)
    }

    static {
      defaultInstance = new MethodInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.MethodInfo)
  }

  public interface FieldInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.FieldInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required int32 classId = 2;</code>
     */
    boolean hasClassId();
    /**
     * <code>required int32 classId = 2;</code>
     */
    int getClassId();

    /**
     * <code>required int32 offset = 3;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 3;</code>
     */
    int getOffset();

    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> getPropertyList();
    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    int getPropertyCount();
    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property getProperty(int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.FieldInfo}
   *
   * <pre>
   * Field information.
   * </pre>
   */
  public static final class FieldInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.FieldInfo)
      FieldInfoOrBuilder {
    // Use FieldInfo.newBuilder() to construct.
    private FieldInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FieldInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FieldInfo defaultInstance;
    public static FieldInfo getDefaultInstance() {
      return defaultInstance;
    }

    public FieldInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FieldInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              classId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              offset_ = input.readInt32();
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property value = com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
                } else {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  property_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property>();
                  mutable_bitField0_ |= 0x00000008;
                }
                property_.add(value);
              }
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int rawValue = input.readEnum();
                com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property value = com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(4, rawValue);
                  } else {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    property_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  property_.add(value);
                }
              }
              input.popLimit(oldLimit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          property_ = java.util.Collections.unmodifiableList(property_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<FieldInfo> PARSER =
        new com.google.protobuf.AbstractParser<FieldInfo>() {
      public FieldInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FieldInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code MaxSimInterface.FieldInfo.Property}
     */
    public enum Property
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>FINAL = 0;</code>
       */
      FINAL(0, 0),
      ;

      /**
       * <code>FINAL = 0;</code>
       */
      public static final int FINAL_VALUE = 0;


      public final int getNumber() { return value; }

      public static Property valueOf(int value) {
        switch (value) {
          case 0: return FINAL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Property>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Property>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Property>() {
              public Property findValueByNumber(int number) {
                return Property.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final Property[] VALUES = values();

      public static Property valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Property(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MaxSimInterface.FieldInfo.Property)
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CLASSID_FIELD_NUMBER = 2;
    private int classId_;
    /**
     * <code>required int32 classId = 2;</code>
     */
    public boolean hasClassId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 classId = 2;</code>
     */
    public int getClassId() {
      return classId_;
    }

    public static final int OFFSET_FIELD_NUMBER = 3;
    private int offset_;
    /**
     * <code>required int32 offset = 3;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 offset = 3;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int PROPERTY_FIELD_NUMBER = 4;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> property_;
    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> getPropertyList() {
      return property_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    public int getPropertyCount() {
      return property_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property getProperty(int index) {
      return property_.get(index);
    }

    private void initFields() {
      name_ = "";
      classId_ = 0;
      offset_ = 0;
      property_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClassId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, classId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, offset_);
      }
      for (int i = 0; i < property_.size(); i++) {
        output.writeEnum(4, property_.get(i).getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, classId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, offset_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < property_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(property_.get(i).getNumber());
        }
        size += dataSize;
        size += 1 * property_.size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.FieldInfo}
     *
     * <pre>
     * Field information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.FieldInfo)
        com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        classId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        property_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldInfo_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo build() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo result = new com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.classId_ = classId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.offset_ = offset_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          property_ = java.util.Collections.unmodifiableList(property_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.property_ = property_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasClassId()) {
          setClassId(other.getClassId());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (!other.property_.isEmpty()) {
          if (property_.isEmpty()) {
            property_ = other.property_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePropertyIsMutable();
            property_.addAll(other.property_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasClassId()) {
          
          return false;
        }
        if (!hasOffset()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int classId_ ;
      /**
       * <code>required int32 classId = 2;</code>
       */
      public boolean hasClassId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 classId = 2;</code>
       */
      public int getClassId() {
        return classId_;
      }
      /**
       * <code>required int32 classId = 2;</code>
       */
      public Builder setClassId(int value) {
        bitField0_ |= 0x00000002;
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 classId = 2;</code>
       */
      public Builder clearClassId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        classId_ = 0;
        onChanged();
        return this;
      }

      private int offset_ ;
      /**
       * <code>required int32 offset = 3;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000004;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 3;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000004);
        offset_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> property_ =
        java.util.Collections.emptyList();
      private void ensurePropertyIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          property_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property>(property_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> getPropertyList() {
        return java.util.Collections.unmodifiableList(property_);
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public int getPropertyCount() {
        return property_.size();
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property getProperty(int index) {
        return property_.get(index);
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public Builder setProperty(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertyIsMutable();
        property_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public Builder addProperty(com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePropertyIsMutable();
        property_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public Builder addAllProperty(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Property> values) {
        ensurePropertyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, property_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo.Property property = 4;</code>
       */
      public Builder clearProperty() {
        property_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.FieldInfo)
    }

    static {
      defaultInstance = new FieldInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.FieldInfo)
  }

  public interface ClassInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.ClassInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string desc = 1;</code>
     */
    boolean hasDesc();
    /**
     * <code>required string desc = 1;</code>
     */
    java.lang.String getDesc();
    /**
     * <code>required string desc = 1;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();

    /**
     * <code>required int32 id = 2;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 2;</code>
     */
    int getId();

    /**
     * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
     */
    boolean hasKind();
    /**
     * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind getKind();

    /**
     * <code>optional int32 componentId = 4;</code>
     */
    boolean hasComponentId();
    /**
     * <code>optional int32 componentId = 4;</code>
     */
    int getComponentId();

    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> 
        getFieldInfoList();
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo getFieldInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    int getFieldInfoCount();
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder> 
        getFieldInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder getFieldInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.ClassInfo}
   *
   * <pre>
   * Class information.
   * </pre>
   */
  public static final class ClassInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.ClassInfo)
      ClassInfoOrBuilder {
    // Use ClassInfo.newBuilder() to construct.
    private ClassInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClassInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClassInfo defaultInstance;
    public static ClassInfo getDefaultInstance() {
      return defaultInstance;
    }

    public ClassInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClassInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              desc_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              id_ = input.readInt32();
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind value = com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                kind_ = value;
              }
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              componentId_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                fieldInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo>();
                mutable_bitField0_ |= 0x00000010;
              }
              fieldInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          fieldInfo_ = java.util.Collections.unmodifiableList(fieldInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<ClassInfo> PARSER =
        new com.google.protobuf.AbstractParser<ClassInfo>() {
      public ClassInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClassInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClassInfo> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code MaxSimInterface.ClassInfo.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TUPLE = 0;</code>
       */
      TUPLE(0, 0),
      /**
       * <code>ARRAY = 1;</code>
       */
      ARRAY(1, 1),
      /**
       * <code>PRIMITIVE = 2;</code>
       */
      PRIMITIVE(2, 2),
      /**
       * <code>HYBRID = 3;</code>
       */
      HYBRID(3, 3),
      /**
       * <code>OTHER = 4;</code>
       */
      OTHER(4, 4),
      ;

      /**
       * <code>TUPLE = 0;</code>
       */
      public static final int TUPLE_VALUE = 0;
      /**
       * <code>ARRAY = 1;</code>
       */
      public static final int ARRAY_VALUE = 1;
      /**
       * <code>PRIMITIVE = 2;</code>
       */
      public static final int PRIMITIVE_VALUE = 2;
      /**
       * <code>HYBRID = 3;</code>
       */
      public static final int HYBRID_VALUE = 3;
      /**
       * <code>OTHER = 4;</code>
       */
      public static final int OTHER_VALUE = 4;


      public final int getNumber() { return value; }

      public static Kind valueOf(int value) {
        switch (value) {
          case 0: return TUPLE;
          case 1: return ARRAY;
          case 2: return PRIMITIVE;
          case 3: return HYBRID;
          case 4: return OTHER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Kind(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MaxSimInterface.ClassInfo.Kind)
    }

    private int bitField0_;
    public static final int DESC_FIELD_NUMBER = 1;
    private java.lang.Object desc_;
    /**
     * <code>required string desc = 1;</code>
     */
    public boolean hasDesc() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string desc = 1;</code>
     */
    public java.lang.String getDesc() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          desc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string desc = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      java.lang.Object ref = desc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ID_FIELD_NUMBER = 2;
    private int id_;
    /**
     * <code>required int32 id = 2;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 id = 2;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int KIND_FIELD_NUMBER = 3;
    private com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind kind_;
    /**
     * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
     */
    public boolean hasKind() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind getKind() {
      return kind_;
    }

    public static final int COMPONENTID_FIELD_NUMBER = 4;
    private int componentId_;
    /**
     * <code>optional int32 componentId = 4;</code>
     */
    public boolean hasComponentId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 componentId = 4;</code>
     */
    public int getComponentId() {
      return componentId_;
    }

    public static final int FIELDINFO_FIELD_NUMBER = 5;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> fieldInfo_;
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> getFieldInfoList() {
      return fieldInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder> 
        getFieldInfoOrBuilderList() {
      return fieldInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    public int getFieldInfoCount() {
      return fieldInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo getFieldInfo(int index) {
      return fieldInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder getFieldInfoOrBuilder(
        int index) {
      return fieldInfo_.get(index);
    }

    private void initFields() {
      desc_ = "";
      id_ = 0;
      kind_ = com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind.TUPLE;
      componentId_ = 0;
      fieldInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDesc()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasKind()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFieldInfoCount(); i++) {
        if (!getFieldInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, componentId_);
      }
      for (int i = 0; i < fieldInfo_.size(); i++) {
        output.writeMessage(5, fieldInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getDescBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, id_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, kind_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, componentId_);
      }
      for (int i = 0; i < fieldInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, fieldInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.ClassInfo}
     *
     * <pre>
     * Class information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.ClassInfo)
        com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getFieldInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        desc_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        kind_ = com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind.TUPLE;
        bitField0_ = (bitField0_ & ~0x00000004);
        componentId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fieldInfoBuilder_ == null) {
          fieldInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          fieldInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassInfo_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo build() {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo result = new com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.desc_ = desc_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.kind_ = kind_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.componentId_ = componentId_;
        if (fieldInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            fieldInfo_ = java.util.Collections.unmodifiableList(fieldInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.fieldInfo_ = fieldInfo_;
        } else {
          result.fieldInfo_ = fieldInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.getDefaultInstance()) return this;
        if (other.hasDesc()) {
          bitField0_ |= 0x00000001;
          desc_ = other.desc_;
          onChanged();
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasComponentId()) {
          setComponentId(other.getComponentId());
        }
        if (fieldInfoBuilder_ == null) {
          if (!other.fieldInfo_.isEmpty()) {
            if (fieldInfo_.isEmpty()) {
              fieldInfo_ = other.fieldInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFieldInfoIsMutable();
              fieldInfo_.addAll(other.fieldInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldInfo_.isEmpty()) {
            if (fieldInfoBuilder_.isEmpty()) {
              fieldInfoBuilder_.dispose();
              fieldInfoBuilder_ = null;
              fieldInfo_ = other.fieldInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              fieldInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldInfoFieldBuilder() : null;
            } else {
              fieldInfoBuilder_.addAllMessages(other.fieldInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDesc()) {
          
          return false;
        }
        if (!hasId()) {
          
          return false;
        }
        if (!hasKind()) {
          
          return false;
        }
        for (int i = 0; i < getFieldInfoCount(); i++) {
          if (!getFieldInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object desc_ = "";
      /**
       * <code>required string desc = 1;</code>
       */
      public boolean hasDesc() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string desc = 1;</code>
       */
      public java.lang.String getDesc() {
        java.lang.Object ref = desc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            desc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string desc = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        java.lang.Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string desc = 1;</code>
       */
      public Builder setDesc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 1;</code>
       */
      public Builder clearDesc() {
        bitField0_ = (bitField0_ & ~0x00000001);
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>required string desc = 1;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        desc_ = value;
        onChanged();
        return this;
      }

      private int id_ ;
      /**
       * <code>required int32 id = 2;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000002;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 2;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        id_ = 0;
        onChanged();
        return this;
      }

      private com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind kind_ = com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind.TUPLE;
      /**
       * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
       */
      public boolean hasKind() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind getKind() {
        return kind_;
      }
      /**
       * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
       */
      public Builder setKind(com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        kind_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .MaxSimInterface.ClassInfo.Kind kind = 3;</code>
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000004);
        kind_ = com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Kind.TUPLE;
        onChanged();
        return this;
      }

      private int componentId_ ;
      /**
       * <code>optional int32 componentId = 4;</code>
       */
      public boolean hasComponentId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 componentId = 4;</code>
       */
      public int getComponentId() {
        return componentId_;
      }
      /**
       * <code>optional int32 componentId = 4;</code>
       */
      public Builder setComponentId(int value) {
        bitField0_ |= 0x00000008;
        componentId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 componentId = 4;</code>
       */
      public Builder clearComponentId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        componentId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> fieldInfo_ =
        java.util.Collections.emptyList();
      private void ensureFieldInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          fieldInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo>(fieldInfo_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder> fieldInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> getFieldInfoList() {
        if (fieldInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldInfo_);
        } else {
          return fieldInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public int getFieldInfoCount() {
        if (fieldInfoBuilder_ == null) {
          return fieldInfo_.size();
        } else {
          return fieldInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo getFieldInfo(int index) {
        if (fieldInfoBuilder_ == null) {
          return fieldInfo_.get(index);
        } else {
          return fieldInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder setFieldInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo value) {
        if (fieldInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldInfoIsMutable();
          fieldInfo_.set(index, value);
          onChanged();
        } else {
          fieldInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder setFieldInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder builderForValue) {
        if (fieldInfoBuilder_ == null) {
          ensureFieldInfoIsMutable();
          fieldInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder addFieldInfo(com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo value) {
        if (fieldInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldInfoIsMutable();
          fieldInfo_.add(value);
          onChanged();
        } else {
          fieldInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder addFieldInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo value) {
        if (fieldInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldInfoIsMutable();
          fieldInfo_.add(index, value);
          onChanged();
        } else {
          fieldInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder addFieldInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder builderForValue) {
        if (fieldInfoBuilder_ == null) {
          ensureFieldInfoIsMutable();
          fieldInfo_.add(builderForValue.build());
          onChanged();
        } else {
          fieldInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder addFieldInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder builderForValue) {
        if (fieldInfoBuilder_ == null) {
          ensureFieldInfoIsMutable();
          fieldInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder addAllFieldInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo> values) {
        if (fieldInfoBuilder_ == null) {
          ensureFieldInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldInfo_);
          onChanged();
        } else {
          fieldInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder clearFieldInfo() {
        if (fieldInfoBuilder_ == null) {
          fieldInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          fieldInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public Builder removeFieldInfo(int index) {
        if (fieldInfoBuilder_ == null) {
          ensureFieldInfoIsMutable();
          fieldInfo_.remove(index);
          onChanged();
        } else {
          fieldInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder getFieldInfoBuilder(
          int index) {
        return getFieldInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder getFieldInfoOrBuilder(
          int index) {
        if (fieldInfoBuilder_ == null) {
          return fieldInfo_.get(index);  } else {
          return fieldInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder> 
           getFieldInfoOrBuilderList() {
        if (fieldInfoBuilder_ != null) {
          return fieldInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder addFieldInfoBuilder() {
        return getFieldInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder addFieldInfoBuilder(
          int index) {
        return getFieldInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldInfo fieldInfo = 5;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder> 
           getFieldInfoBuilderList() {
        return getFieldInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder> 
          getFieldInfoFieldBuilder() {
        if (fieldInfoBuilder_ == null) {
          fieldInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldInfoOrBuilder>(
                  fieldInfo_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          fieldInfo_ = null;
        }
        return fieldInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.ClassInfo)
    }

    static {
      defaultInstance = new ClassInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.ClassInfo)
  }

  public interface MaxineInfoDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.MaxineInfoDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 key = 1;</code>
     */
    boolean hasKey();
    /**
     * <code>optional int64 key = 1;</code>
     */
    long getKey();

    /**
     * <code>required int32 maxClassInfoId = 2;</code>
     */
    boolean hasMaxClassInfoId();
    /**
     * <code>required int32 maxClassInfoId = 2;</code>
     */
    int getMaxClassInfoId();

    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> 
        getClassInfoList();
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo getClassInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    int getClassInfoCount();
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder> 
        getClassInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder getClassInfoOrBuilder(
        int index);

    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> 
        getMethodInfoList();
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getMethodInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    int getMethodInfoCount();
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> 
        getMethodInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getMethodInfoOrBuilder(
        int index);

    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    boolean hasBootCodeRegInfo();
    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getBootCodeRegInfo();
    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getBootCodeRegInfoOrBuilder();

    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    boolean hasMaxSimConfig();
    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig getMaxSimConfig();
    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder getMaxSimConfigOrBuilder();

    /**
     * <code>required int32 nullCheckOffset = 7;</code>
     */
    boolean hasNullCheckOffset();
    /**
     * <code>required int32 nullCheckOffset = 7;</code>
     */
    int getNullCheckOffset();

    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> 
        getDataTransInfoList();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    int getDataTransInfoCount();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
        getDataTransInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.MaxineInfoDB}
   *
   * <pre>
   * Maxine information database.
   * </pre>
   */
  public static final class MaxineInfoDB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.MaxineInfoDB)
      MaxineInfoDBOrBuilder {
    // Use MaxineInfoDB.newBuilder() to construct.
    private MaxineInfoDB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MaxineInfoDB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MaxineInfoDB defaultInstance;
    public static MaxineInfoDB getDefaultInstance() {
      return defaultInstance;
    }

    public MaxineInfoDB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MaxineInfoDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              key_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              maxClassInfoId_ = input.readInt32();
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                classInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              classInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                methodInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              methodInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                subBuilder = bootCodeRegInfo_.toBuilder();
              }
              bootCodeRegInfo_ = input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(bootCodeRegInfo_);
                bootCodeRegInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000004;
              break;
            }
            case 50: {
              com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = maxSimConfig_.toBuilder();
              }
              maxSimConfig_ = input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(maxSimConfig_);
                maxSimConfig_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              nullCheckOffset_ = input.readInt32();
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                dataTransInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo>();
                mutable_bitField0_ |= 0x00000080;
              }
              dataTransInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          classInfo_ = java.util.Collections.unmodifiableList(classInfo_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          methodInfo_ = java.util.Collections.unmodifiableList(methodInfo_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          dataTransInfo_ = java.util.Collections.unmodifiableList(dataTransInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxineInfoDB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxineInfoDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.class, com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.Builder.class);
    }

    public static com.google.protobuf.Parser<MaxineInfoDB> PARSER =
        new com.google.protobuf.AbstractParser<MaxineInfoDB>() {
      public MaxineInfoDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MaxineInfoDB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MaxineInfoDB> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int KEY_FIELD_NUMBER = 1;
    private long key_;
    /**
     * <code>optional int64 key = 1;</code>
     */
    public boolean hasKey() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int64 key = 1;</code>
     */
    public long getKey() {
      return key_;
    }

    public static final int MAXCLASSINFOID_FIELD_NUMBER = 2;
    private int maxClassInfoId_;
    /**
     * <code>required int32 maxClassInfoId = 2;</code>
     */
    public boolean hasMaxClassInfoId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 maxClassInfoId = 2;</code>
     */
    public int getMaxClassInfoId() {
      return maxClassInfoId_;
    }

    public static final int CLASSINFO_FIELD_NUMBER = 3;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> classInfo_;
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> getClassInfoList() {
      return classInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder> 
        getClassInfoOrBuilderList() {
      return classInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    public int getClassInfoCount() {
      return classInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo getClassInfo(int index) {
      return classInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder getClassInfoOrBuilder(
        int index) {
      return classInfo_.get(index);
    }

    public static final int METHODINFO_FIELD_NUMBER = 4;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> methodInfo_;
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> getMethodInfoList() {
      return methodInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> 
        getMethodInfoOrBuilderList() {
      return methodInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    public int getMethodInfoCount() {
      return methodInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getMethodInfo(int index) {
      return methodInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getMethodInfoOrBuilder(
        int index) {
      return methodInfo_.get(index);
    }

    public static final int BOOTCODEREGINFO_FIELD_NUMBER = 5;
    private com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo bootCodeRegInfo_;
    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    public boolean hasBootCodeRegInfo() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getBootCodeRegInfo() {
      return bootCodeRegInfo_;
    }
    /**
     * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getBootCodeRegInfoOrBuilder() {
      return bootCodeRegInfo_;
    }

    public static final int MAXSIMCONFIG_FIELD_NUMBER = 6;
    private com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig maxSimConfig_;
    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    public boolean hasMaxSimConfig() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig getMaxSimConfig() {
      return maxSimConfig_;
    }
    /**
     * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder getMaxSimConfigOrBuilder() {
      return maxSimConfig_;
    }

    public static final int NULLCHECKOFFSET_FIELD_NUMBER = 7;
    private int nullCheckOffset_;
    /**
     * <code>required int32 nullCheckOffset = 7;</code>
     */
    public boolean hasNullCheckOffset() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 nullCheckOffset = 7;</code>
     */
    public int getNullCheckOffset() {
      return nullCheckOffset_;
    }

    public static final int DATATRANSINFO_FIELD_NUMBER = 8;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> dataTransInfo_;
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> getDataTransInfoList() {
      return dataTransInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
        getDataTransInfoOrBuilderList() {
      return dataTransInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    public int getDataTransInfoCount() {
      return dataTransInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index) {
      return dataTransInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
        int index) {
      return dataTransInfo_.get(index);
    }

    private void initFields() {
      key_ = 0L;
      maxClassInfoId_ = 0;
      classInfo_ = java.util.Collections.emptyList();
      methodInfo_ = java.util.Collections.emptyList();
      bootCodeRegInfo_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance();
      maxSimConfig_ = com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance();
      nullCheckOffset_ = 0;
      dataTransInfo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaxClassInfoId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBootCodeRegInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMaxSimConfig()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNullCheckOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getClassInfoCount(); i++) {
        if (!getClassInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMethodInfoCount(); i++) {
        if (!getMethodInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!getBootCodeRegInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getDataTransInfoCount(); i++) {
        if (!getDataTransInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, maxClassInfoId_);
      }
      for (int i = 0; i < classInfo_.size(); i++) {
        output.writeMessage(3, classInfo_.get(i));
      }
      for (int i = 0; i < methodInfo_.size(); i++) {
        output.writeMessage(4, methodInfo_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(5, bootCodeRegInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(6, maxSimConfig_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, nullCheckOffset_);
      }
      for (int i = 0; i < dataTransInfo_.size(); i++) {
        output.writeMessage(8, dataTransInfo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, key_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, maxClassInfoId_);
      }
      for (int i = 0; i < classInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, classInfo_.get(i));
      }
      for (int i = 0; i < methodInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, methodInfo_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, bootCodeRegInfo_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, maxSimConfig_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, nullCheckOffset_);
      }
      for (int i = 0; i < dataTransInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, dataTransInfo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.MaxineInfoDB}
     *
     * <pre>
     * Maxine information database.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.MaxineInfoDB)
        com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxineInfoDB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxineInfoDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.class, com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClassInfoFieldBuilder();
          getMethodInfoFieldBuilder();
          getBootCodeRegInfoFieldBuilder();
          getMaxSimConfigFieldBuilder();
          getDataTransInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        maxClassInfoId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        if (classInfoBuilder_ == null) {
          classInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          classInfoBuilder_.clear();
        }
        if (methodInfoBuilder_ == null) {
          methodInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          methodInfoBuilder_.clear();
        }
        if (bootCodeRegInfoBuilder_ == null) {
          bootCodeRegInfo_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance();
        } else {
          bootCodeRegInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (maxSimConfigBuilder_ == null) {
          maxSimConfig_ = com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance();
        } else {
          maxSimConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        nullCheckOffset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        if (dataTransInfoBuilder_ == null) {
          dataTransInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          dataTransInfoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_MaxineInfoDB_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB build() {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB result = new com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.key_ = key_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.maxClassInfoId_ = maxClassInfoId_;
        if (classInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            classInfo_ = java.util.Collections.unmodifiableList(classInfo_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.classInfo_ = classInfo_;
        } else {
          result.classInfo_ = classInfoBuilder_.build();
        }
        if (methodInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            methodInfo_ = java.util.Collections.unmodifiableList(methodInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.methodInfo_ = methodInfo_;
        } else {
          result.methodInfo_ = methodInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        if (bootCodeRegInfoBuilder_ == null) {
          result.bootCodeRegInfo_ = bootCodeRegInfo_;
        } else {
          result.bootCodeRegInfo_ = bootCodeRegInfoBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        if (maxSimConfigBuilder_ == null) {
          result.maxSimConfig_ = maxSimConfig_;
        } else {
          result.maxSimConfig_ = maxSimConfigBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nullCheckOffset_ = nullCheckOffset_;
        if (dataTransInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            dataTransInfo_ = java.util.Collections.unmodifiableList(dataTransInfo_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.dataTransInfo_ = dataTransInfo_;
        } else {
          result.dataTransInfo_ = dataTransInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB.getDefaultInstance()) return this;
        if (other.hasKey()) {
          setKey(other.getKey());
        }
        if (other.hasMaxClassInfoId()) {
          setMaxClassInfoId(other.getMaxClassInfoId());
        }
        if (classInfoBuilder_ == null) {
          if (!other.classInfo_.isEmpty()) {
            if (classInfo_.isEmpty()) {
              classInfo_ = other.classInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureClassInfoIsMutable();
              classInfo_.addAll(other.classInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.classInfo_.isEmpty()) {
            if (classInfoBuilder_.isEmpty()) {
              classInfoBuilder_.dispose();
              classInfoBuilder_ = null;
              classInfo_ = other.classInfo_;
              bitField0_ = (bitField0_ & ~0x00000004);
              classInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClassInfoFieldBuilder() : null;
            } else {
              classInfoBuilder_.addAllMessages(other.classInfo_);
            }
          }
        }
        if (methodInfoBuilder_ == null) {
          if (!other.methodInfo_.isEmpty()) {
            if (methodInfo_.isEmpty()) {
              methodInfo_ = other.methodInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureMethodInfoIsMutable();
              methodInfo_.addAll(other.methodInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.methodInfo_.isEmpty()) {
            if (methodInfoBuilder_.isEmpty()) {
              methodInfoBuilder_.dispose();
              methodInfoBuilder_ = null;
              methodInfo_ = other.methodInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              methodInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMethodInfoFieldBuilder() : null;
            } else {
              methodInfoBuilder_.addAllMessages(other.methodInfo_);
            }
          }
        }
        if (other.hasBootCodeRegInfo()) {
          mergeBootCodeRegInfo(other.getBootCodeRegInfo());
        }
        if (other.hasMaxSimConfig()) {
          mergeMaxSimConfig(other.getMaxSimConfig());
        }
        if (other.hasNullCheckOffset()) {
          setNullCheckOffset(other.getNullCheckOffset());
        }
        if (dataTransInfoBuilder_ == null) {
          if (!other.dataTransInfo_.isEmpty()) {
            if (dataTransInfo_.isEmpty()) {
              dataTransInfo_ = other.dataTransInfo_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDataTransInfoIsMutable();
              dataTransInfo_.addAll(other.dataTransInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.dataTransInfo_.isEmpty()) {
            if (dataTransInfoBuilder_.isEmpty()) {
              dataTransInfoBuilder_.dispose();
              dataTransInfoBuilder_ = null;
              dataTransInfo_ = other.dataTransInfo_;
              bitField0_ = (bitField0_ & ~0x00000080);
              dataTransInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDataTransInfoFieldBuilder() : null;
            } else {
              dataTransInfoBuilder_.addAllMessages(other.dataTransInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxClassInfoId()) {
          
          return false;
        }
        if (!hasBootCodeRegInfo()) {
          
          return false;
        }
        if (!hasMaxSimConfig()) {
          
          return false;
        }
        if (!hasNullCheckOffset()) {
          
          return false;
        }
        for (int i = 0; i < getClassInfoCount(); i++) {
          if (!getClassInfo(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMethodInfoCount(); i++) {
          if (!getMethodInfo(i).isInitialized()) {
            
            return false;
          }
        }
        if (!getBootCodeRegInfo().isInitialized()) {
          
          return false;
        }
        for (int i = 0; i < getDataTransInfoCount(); i++) {
          if (!getDataTransInfo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.MaxineInfoDB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long key_ ;
      /**
       * <code>optional int64 key = 1;</code>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public long getKey() {
        return key_;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder setKey(long value) {
        bitField0_ |= 0x00000001;
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 key = 1;</code>
       */
      public Builder clearKey() {
        bitField0_ = (bitField0_ & ~0x00000001);
        key_ = 0L;
        onChanged();
        return this;
      }

      private int maxClassInfoId_ ;
      /**
       * <code>required int32 maxClassInfoId = 2;</code>
       */
      public boolean hasMaxClassInfoId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 maxClassInfoId = 2;</code>
       */
      public int getMaxClassInfoId() {
        return maxClassInfoId_;
      }
      /**
       * <code>required int32 maxClassInfoId = 2;</code>
       */
      public Builder setMaxClassInfoId(int value) {
        bitField0_ |= 0x00000002;
        maxClassInfoId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxClassInfoId = 2;</code>
       */
      public Builder clearMaxClassInfoId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxClassInfoId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> classInfo_ =
        java.util.Collections.emptyList();
      private void ensureClassInfoIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          classInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo>(classInfo_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder> classInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> getClassInfoList() {
        if (classInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(classInfo_);
        } else {
          return classInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public int getClassInfoCount() {
        if (classInfoBuilder_ == null) {
          return classInfo_.size();
        } else {
          return classInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo getClassInfo(int index) {
        if (classInfoBuilder_ == null) {
          return classInfo_.get(index);
        } else {
          return classInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder setClassInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo value) {
        if (classInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassInfoIsMutable();
          classInfo_.set(index, value);
          onChanged();
        } else {
          classInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder setClassInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder builderForValue) {
        if (classInfoBuilder_ == null) {
          ensureClassInfoIsMutable();
          classInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          classInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder addClassInfo(com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo value) {
        if (classInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassInfoIsMutable();
          classInfo_.add(value);
          onChanged();
        } else {
          classInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder addClassInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo value) {
        if (classInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassInfoIsMutable();
          classInfo_.add(index, value);
          onChanged();
        } else {
          classInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder addClassInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder builderForValue) {
        if (classInfoBuilder_ == null) {
          ensureClassInfoIsMutable();
          classInfo_.add(builderForValue.build());
          onChanged();
        } else {
          classInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder addClassInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder builderForValue) {
        if (classInfoBuilder_ == null) {
          ensureClassInfoIsMutable();
          classInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          classInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder addAllClassInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo> values) {
        if (classInfoBuilder_ == null) {
          ensureClassInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, classInfo_);
          onChanged();
        } else {
          classInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder clearClassInfo() {
        if (classInfoBuilder_ == null) {
          classInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          classInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public Builder removeClassInfo(int index) {
        if (classInfoBuilder_ == null) {
          ensureClassInfoIsMutable();
          classInfo_.remove(index);
          onChanged();
        } else {
          classInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder getClassInfoBuilder(
          int index) {
        return getClassInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder getClassInfoOrBuilder(
          int index) {
        if (classInfoBuilder_ == null) {
          return classInfo_.get(index);  } else {
          return classInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder> 
           getClassInfoOrBuilderList() {
        if (classInfoBuilder_ != null) {
          return classInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(classInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder addClassInfoBuilder() {
        return getClassInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder addClassInfoBuilder(
          int index) {
        return getClassInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.ClassInfo classInfo = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder> 
           getClassInfoBuilderList() {
        return getClassInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder> 
          getClassInfoFieldBuilder() {
        if (classInfoBuilder_ == null) {
          classInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassInfoOrBuilder>(
                  classInfo_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          classInfo_ = null;
        }
        return classInfoBuilder_;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> methodInfo_ =
        java.util.Collections.emptyList();
      private void ensureMethodInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          methodInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo>(methodInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> methodInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> getMethodInfoList() {
        if (methodInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(methodInfo_);
        } else {
          return methodInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public int getMethodInfoCount() {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.size();
        } else {
          return methodInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getMethodInfo(int index) {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.get(index);
        } else {
          return methodInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder setMethodInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.set(index, value);
          onChanged();
        } else {
          methodInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder setMethodInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder addMethodInfo(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.add(value);
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder addMethodInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo value) {
        if (methodInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMethodInfoIsMutable();
          methodInfo_.add(index, value);
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder addMethodInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.add(builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder addMethodInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder builderForValue) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          methodInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder addAllMethodInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo> values) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, methodInfo_);
          onChanged();
        } else {
          methodInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder clearMethodInfo() {
        if (methodInfoBuilder_ == null) {
          methodInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          methodInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public Builder removeMethodInfo(int index) {
        if (methodInfoBuilder_ == null) {
          ensureMethodInfoIsMutable();
          methodInfo_.remove(index);
          onChanged();
        } else {
          methodInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder getMethodInfoBuilder(
          int index) {
        return getMethodInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getMethodInfoOrBuilder(
          int index) {
        if (methodInfoBuilder_ == null) {
          return methodInfo_.get(index);  } else {
          return methodInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> 
           getMethodInfoOrBuilderList() {
        if (methodInfoBuilder_ != null) {
          return methodInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(methodInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder addMethodInfoBuilder() {
        return getMethodInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder addMethodInfoBuilder(
          int index) {
        return getMethodInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.MethodInfo methodInfo = 4;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder> 
           getMethodInfoBuilderList() {
        return getMethodInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> 
          getMethodInfoFieldBuilder() {
        if (methodInfoBuilder_ == null) {
          methodInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder>(
                  methodInfo_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          methodInfo_ = null;
        }
        return methodInfoBuilder_;
      }

      private com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo bootCodeRegInfo_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> bootCodeRegInfoBuilder_;
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public boolean hasBootCodeRegInfo() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo getBootCodeRegInfo() {
        if (bootCodeRegInfoBuilder_ == null) {
          return bootCodeRegInfo_;
        } else {
          return bootCodeRegInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public Builder setBootCodeRegInfo(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo value) {
        if (bootCodeRegInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          bootCodeRegInfo_ = value;
          onChanged();
        } else {
          bootCodeRegInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public Builder setBootCodeRegInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder builderForValue) {
        if (bootCodeRegInfoBuilder_ == null) {
          bootCodeRegInfo_ = builderForValue.build();
          onChanged();
        } else {
          bootCodeRegInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public Builder mergeBootCodeRegInfo(com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo value) {
        if (bootCodeRegInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              bootCodeRegInfo_ != com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance()) {
            bootCodeRegInfo_ =
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.newBuilder(bootCodeRegInfo_).mergeFrom(value).buildPartial();
          } else {
            bootCodeRegInfo_ = value;
          }
          onChanged();
        } else {
          bootCodeRegInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public Builder clearBootCodeRegInfo() {
        if (bootCodeRegInfoBuilder_ == null) {
          bootCodeRegInfo_ = com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.getDefaultInstance();
          onChanged();
        } else {
          bootCodeRegInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder getBootCodeRegInfoBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getBootCodeRegInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder getBootCodeRegInfoOrBuilder() {
        if (bootCodeRegInfoBuilder_ != null) {
          return bootCodeRegInfoBuilder_.getMessageOrBuilder();
        } else {
          return bootCodeRegInfo_;
        }
      }
      /**
       * <code>required .MaxSimInterface.MethodInfo bootCodeRegInfo = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder> 
          getBootCodeRegInfoFieldBuilder() {
        if (bootCodeRegInfoBuilder_ == null) {
          bootCodeRegInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MethodInfoOrBuilder>(
                  getBootCodeRegInfo(),
                  getParentForChildren(),
                  isClean());
          bootCodeRegInfo_ = null;
        }
        return bootCodeRegInfoBuilder_;
      }

      private com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig maxSimConfig_ = com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder> maxSimConfigBuilder_;
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public boolean hasMaxSimConfig() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig getMaxSimConfig() {
        if (maxSimConfigBuilder_ == null) {
          return maxSimConfig_;
        } else {
          return maxSimConfigBuilder_.getMessage();
        }
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public Builder setMaxSimConfig(com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig value) {
        if (maxSimConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          maxSimConfig_ = value;
          onChanged();
        } else {
          maxSimConfigBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public Builder setMaxSimConfig(
          com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder builderForValue) {
        if (maxSimConfigBuilder_ == null) {
          maxSimConfig_ = builderForValue.build();
          onChanged();
        } else {
          maxSimConfigBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public Builder mergeMaxSimConfig(com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig value) {
        if (maxSimConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              maxSimConfig_ != com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance()) {
            maxSimConfig_ =
              com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.newBuilder(maxSimConfig_).mergeFrom(value).buildPartial();
          } else {
            maxSimConfig_ = value;
          }
          onChanged();
        } else {
          maxSimConfigBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public Builder clearMaxSimConfig() {
        if (maxSimConfigBuilder_ == null) {
          maxSimConfig_ = com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.getDefaultInstance();
          onChanged();
        } else {
          maxSimConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder getMaxSimConfigBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getMaxSimConfigFieldBuilder().getBuilder();
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder getMaxSimConfigOrBuilder() {
        if (maxSimConfigBuilder_ != null) {
          return maxSimConfigBuilder_.getMessageOrBuilder();
        } else {
          return maxSimConfig_;
        }
      }
      /**
       * <code>required .MaxSimInterface.MaxSimConfig MaxSimConfig = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder> 
          getMaxSimConfigFieldBuilder() {
        if (maxSimConfigBuilder_ == null) {
          maxSimConfigBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfig.Builder, com.sun.max.vm.maxsim.MaxSimInterface.MaxSimConfigOrBuilder>(
                  getMaxSimConfig(),
                  getParentForChildren(),
                  isClean());
          maxSimConfig_ = null;
        }
        return maxSimConfigBuilder_;
      }

      private int nullCheckOffset_ ;
      /**
       * <code>required int32 nullCheckOffset = 7;</code>
       */
      public boolean hasNullCheckOffset() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 nullCheckOffset = 7;</code>
       */
      public int getNullCheckOffset() {
        return nullCheckOffset_;
      }
      /**
       * <code>required int32 nullCheckOffset = 7;</code>
       */
      public Builder setNullCheckOffset(int value) {
        bitField0_ |= 0x00000040;
        nullCheckOffset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nullCheckOffset = 7;</code>
       */
      public Builder clearNullCheckOffset() {
        bitField0_ = (bitField0_ & ~0x00000040);
        nullCheckOffset_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> dataTransInfo_ =
        java.util.Collections.emptyList();
      private void ensureDataTransInfoIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          dataTransInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo>(dataTransInfo_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> dataTransInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> getDataTransInfoList() {
        if (dataTransInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dataTransInfo_);
        } else {
          return dataTransInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public int getDataTransInfoCount() {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.size();
        } else {
          return dataTransInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo getDataTransInfo(int index) {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.get(index);
        } else {
          return dataTransInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder setDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.set(index, value);
          onChanged();
        } else {
          dataTransInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder setDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder addDataTransInfo(com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(value);
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder addDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo value) {
        if (dataTransInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(index, value);
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder addDataTransInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder addDataTransInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder builderForValue) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          dataTransInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder addAllDataTransInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo> values) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dataTransInfo_);
          onChanged();
        } else {
          dataTransInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder clearDataTransInfo() {
        if (dataTransInfoBuilder_ == null) {
          dataTransInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          dataTransInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public Builder removeDataTransInfo(int index) {
        if (dataTransInfoBuilder_ == null) {
          ensureDataTransInfoIsMutable();
          dataTransInfo_.remove(index);
          onChanged();
        } else {
          dataTransInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder getDataTransInfoBuilder(
          int index) {
        return getDataTransInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder getDataTransInfoOrBuilder(
          int index) {
        if (dataTransInfoBuilder_ == null) {
          return dataTransInfo_.get(index);  } else {
          return dataTransInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
           getDataTransInfoOrBuilderList() {
        if (dataTransInfoBuilder_ != null) {
          return dataTransInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dataTransInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder addDataTransInfoBuilder() {
        return getDataTransInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder addDataTransInfoBuilder(
          int index) {
        return getDataTransInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.DataTransInfo dataTransInfo = 8;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder> 
           getDataTransInfoBuilderList() {
        return getDataTransInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder> 
          getDataTransInfoFieldBuilder() {
        if (dataTransInfoBuilder_ == null) {
          dataTransInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.DataTransInfoOrBuilder>(
                  dataTransInfo_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          dataTransInfo_ = null;
        }
        return dataTransInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.MaxineInfoDB)
    }

    static {
      defaultInstance = new MaxineInfoDB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.MaxineInfoDB)
  }

  public interface AllocProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.AllocProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 size = 1;</code>
     */
    boolean hasSize();
    /**
     * <code>required int32 size = 1;</code>
     */
    int getSize();

    /**
     * <code>required int64 count = 2;</code>
     */
    boolean hasCount();
    /**
     * <code>required int64 count = 2;</code>
     */
    long getCount();
  }
  /**
   * Protobuf type {@code MaxSimInterface.AllocProf}
   *
   * <pre>
   * Allocation profe.
   * </pre>
   */
  public static final class AllocProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.AllocProf)
      AllocProfOrBuilder {
    // Use AllocProf.newBuilder() to construct.
    private AllocProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AllocProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AllocProf defaultInstance;
    public static AllocProf getDefaultInstance() {
      return defaultInstance;
    }

    public AllocProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AllocProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              size_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              count_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.class, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder.class);
    }

    public static com.google.protobuf.Parser<AllocProf> PARSER =
        new com.google.protobuf.AbstractParser<AllocProf>() {
      public AllocProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AllocProf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SIZE_FIELD_NUMBER = 1;
    private int size_;
    /**
     * <code>required int32 size = 1;</code>
     */
    public boolean hasSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 size = 1;</code>
     */
    public int getSize() {
      return size_;
    }

    public static final int COUNT_FIELD_NUMBER = 2;
    private long count_;
    /**
     * <code>required int64 count = 2;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 count = 2;</code>
     */
    public long getCount() {
      return count_;
    }

    private void initFields() {
      size_ = 0;
      count_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, size_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.AllocProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.AllocProf}
     *
     * <pre>
     * Allocation profe.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.AllocProf)
        com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.class, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        size_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocProf result = new com.sun.max.vm.maxsim.MaxSimInterface.AllocProf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.size_ = size_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.AllocProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.AllocProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.AllocProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.getDefaultInstance()) return this;
        if (other.hasSize()) {
          setSize(other.getSize());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSize()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.AllocProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int size_ ;
      /**
       * <code>required int32 size = 1;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 size = 1;</code>
       */
      public int getSize() {
        return size_;
      }
      /**
       * <code>required int32 size = 1;</code>
       */
      public Builder setSize(int value) {
        bitField0_ |= 0x00000001;
        size_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 size = 1;</code>
       */
      public Builder clearSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        size_ = 0;
        onChanged();
        return this;
      }

      private long count_ ;
      /**
       * <code>required int64 count = 2;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 count = 2;</code>
       */
      public long getCount() {
        return count_;
      }
      /**
       * <code>required int64 count = 2;</code>
       */
      public Builder setCount(long value) {
        bitField0_ |= 0x00000002;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 count = 2;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        count_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.AllocProf)
    }

    static {
      defaultInstance = new AllocProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.AllocProf)
  }

  public interface CacheMissProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.CacheMissProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 count = 1;</code>
     */
    boolean hasCount();
    /**
     * <code>required int64 count = 1;</code>
     */
    long getCount();

    /**
     * <code>required int64 IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>required int64 IP = 2;</code>
     */
    long getIP();

    /**
     * <code>required int32 classId = 3;</code>
     */
    boolean hasClassId();
    /**
     * <code>required int32 classId = 3;</code>
     */
    int getClassId();

    /**
     * <code>required int32 offsetLo = 4;</code>
     */
    boolean hasOffsetLo();
    /**
     * <code>required int32 offsetLo = 4;</code>
     */
    int getOffsetLo();

    /**
     * <code>required int32 offsetHi = 5;</code>
     */
    boolean hasOffsetHi();
    /**
     * <code>required int32 offsetHi = 5;</code>
     */
    int getOffsetHi();
  }
  /**
   * Protobuf type {@code MaxSimInterface.CacheMissProf}
   *
   * <pre>
   * Cache miss profile.
   * </pre>
   */
  public static final class CacheMissProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.CacheMissProf)
      CacheMissProfOrBuilder {
    // Use CacheMissProf.newBuilder() to construct.
    private CacheMissProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CacheMissProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CacheMissProf defaultInstance;
    public static CacheMissProf getDefaultInstance() {
      return defaultInstance;
    }

    public CacheMissProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CacheMissProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              count_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              iP_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              classId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              offsetLo_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              offsetHi_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheMissProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheMissProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder.class);
    }

    public static com.google.protobuf.Parser<CacheMissProf> PARSER =
        new com.google.protobuf.AbstractParser<CacheMissProf>() {
      public CacheMissProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CacheMissProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CacheMissProf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int COUNT_FIELD_NUMBER = 1;
    private long count_;
    /**
     * <code>required int64 count = 1;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 count = 1;</code>
     */
    public long getCount() {
      return count_;
    }

    public static final int IP_FIELD_NUMBER = 2;
    private long iP_;
    /**
     * <code>required int64 IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 IP = 2;</code>
     */
    public long getIP() {
      return iP_;
    }

    public static final int CLASSID_FIELD_NUMBER = 3;
    private int classId_;
    /**
     * <code>required int32 classId = 3;</code>
     */
    public boolean hasClassId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 classId = 3;</code>
     */
    public int getClassId() {
      return classId_;
    }

    public static final int OFFSETLO_FIELD_NUMBER = 4;
    private int offsetLo_;
    /**
     * <code>required int32 offsetLo = 4;</code>
     */
    public boolean hasOffsetLo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 offsetLo = 4;</code>
     */
    public int getOffsetLo() {
      return offsetLo_;
    }

    public static final int OFFSETHI_FIELD_NUMBER = 5;
    private int offsetHi_;
    /**
     * <code>required int32 offsetHi = 5;</code>
     */
    public boolean hasOffsetHi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 offsetHi = 5;</code>
     */
    public int getOffsetHi() {
      return offsetHi_;
    }

    private void initFields() {
      count_ = 0L;
      iP_ = 0L;
      classId_ = 0;
      offsetLo_ = 0;
      offsetHi_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClassId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffsetLo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffsetHi()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, iP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, classId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, offsetLo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, offsetHi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, count_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, iP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, classId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, offsetLo_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, offsetHi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.CacheMissProf}
     *
     * <pre>
     * Cache miss profile.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.CacheMissProf)
        com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheMissProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheMissProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        count_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        classId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        offsetLo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        offsetHi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheMissProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf result = new com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.count_ = count_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.classId_ = classId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.offsetLo_ = offsetLo_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.offsetHi_ = offsetHi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.getDefaultInstance()) return this;
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        if (other.hasIP()) {
          setIP(other.getIP());
        }
        if (other.hasClassId()) {
          setClassId(other.getClassId());
        }
        if (other.hasOffsetLo()) {
          setOffsetLo(other.getOffsetLo());
        }
        if (other.hasOffsetHi()) {
          setOffsetHi(other.getOffsetHi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCount()) {
          
          return false;
        }
        if (!hasIP()) {
          
          return false;
        }
        if (!hasClassId()) {
          
          return false;
        }
        if (!hasOffsetLo()) {
          
          return false;
        }
        if (!hasOffsetHi()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long count_ ;
      /**
       * <code>required int64 count = 1;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 count = 1;</code>
       */
      public long getCount() {
        return count_;
      }
      /**
       * <code>required int64 count = 1;</code>
       */
      public Builder setCount(long value) {
        bitField0_ |= 0x00000001;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 count = 1;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        count_ = 0L;
        onChanged();
        return this;
      }

      private long iP_ ;
      /**
       * <code>required int64 IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public long getIP() {
        return iP_;
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public Builder setIP(long value) {
        bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = 0L;
        onChanged();
        return this;
      }

      private int classId_ ;
      /**
       * <code>required int32 classId = 3;</code>
       */
      public boolean hasClassId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public int getClassId() {
        return classId_;
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public Builder setClassId(int value) {
        bitField0_ |= 0x00000004;
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public Builder clearClassId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        classId_ = 0;
        onChanged();
        return this;
      }

      private int offsetLo_ ;
      /**
       * <code>required int32 offsetLo = 4;</code>
       */
      public boolean hasOffsetLo() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 offsetLo = 4;</code>
       */
      public int getOffsetLo() {
        return offsetLo_;
      }
      /**
       * <code>required int32 offsetLo = 4;</code>
       */
      public Builder setOffsetLo(int value) {
        bitField0_ |= 0x00000008;
        offsetLo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offsetLo = 4;</code>
       */
      public Builder clearOffsetLo() {
        bitField0_ = (bitField0_ & ~0x00000008);
        offsetLo_ = 0;
        onChanged();
        return this;
      }

      private int offsetHi_ ;
      /**
       * <code>required int32 offsetHi = 5;</code>
       */
      public boolean hasOffsetHi() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 offsetHi = 5;</code>
       */
      public int getOffsetHi() {
        return offsetHi_;
      }
      /**
       * <code>required int32 offsetHi = 5;</code>
       */
      public Builder setOffsetHi(int value) {
        bitField0_ |= 0x00000010;
        offsetHi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offsetHi = 5;</code>
       */
      public Builder clearOffsetHi() {
        bitField0_ = (bitField0_ & ~0x00000010);
        offsetHi_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.CacheMissProf)
    }

    static {
      defaultInstance = new CacheMissProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.CacheMissProf)
  }

  public interface CacheRWGroupInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.CacheRWGroupInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 cacheRWGroupId = 1;</code>
     */
    boolean hasCacheRWGroupId();
    /**
     * <code>required int32 cacheRWGroupId = 1;</code>
     */
    int getCacheRWGroupId();

    /**
     * <code>required int32 cacheGroupId = 2;</code>
     */
    boolean hasCacheGroupId();
    /**
     * <code>required int32 cacheGroupId = 2;</code>
     */
    int getCacheGroupId();

    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    boolean hasCacheGroupName();
    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    java.lang.String getCacheGroupName();
    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    com.google.protobuf.ByteString
        getCacheGroupNameBytes();

    /**
     * <code>required bool isWrite = 4;</code>
     */
    boolean hasIsWrite();
    /**
     * <code>required bool isWrite = 4;</code>
     */
    boolean getIsWrite();
  }
  /**
   * Protobuf type {@code MaxSimInterface.CacheRWGroupInfo}
   *
   * <pre>
   * Cache Read/Write group information.
   * </pre>
   */
  public static final class CacheRWGroupInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.CacheRWGroupInfo)
      CacheRWGroupInfoOrBuilder {
    // Use CacheRWGroupInfo.newBuilder() to construct.
    private CacheRWGroupInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CacheRWGroupInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CacheRWGroupInfo defaultInstance;
    public static CacheRWGroupInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CacheRWGroupInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CacheRWGroupInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              cacheRWGroupId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              cacheGroupId_ = input.readInt32();
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              cacheGroupName_ = bs;
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              isWrite_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CacheRWGroupInfo> PARSER =
        new com.google.protobuf.AbstractParser<CacheRWGroupInfo>() {
      public CacheRWGroupInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CacheRWGroupInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CacheRWGroupInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CACHERWGROUPID_FIELD_NUMBER = 1;
    private int cacheRWGroupId_;
    /**
     * <code>required int32 cacheRWGroupId = 1;</code>
     */
    public boolean hasCacheRWGroupId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 cacheRWGroupId = 1;</code>
     */
    public int getCacheRWGroupId() {
      return cacheRWGroupId_;
    }

    public static final int CACHEGROUPID_FIELD_NUMBER = 2;
    private int cacheGroupId_;
    /**
     * <code>required int32 cacheGroupId = 2;</code>
     */
    public boolean hasCacheGroupId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 cacheGroupId = 2;</code>
     */
    public int getCacheGroupId() {
      return cacheGroupId_;
    }

    public static final int CACHEGROUPNAME_FIELD_NUMBER = 3;
    private java.lang.Object cacheGroupName_;
    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    public boolean hasCacheGroupName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    public java.lang.String getCacheGroupName() {
      java.lang.Object ref = cacheGroupName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          cacheGroupName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string cacheGroupName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getCacheGroupNameBytes() {
      java.lang.Object ref = cacheGroupName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cacheGroupName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ISWRITE_FIELD_NUMBER = 4;
    private boolean isWrite_;
    /**
     * <code>required bool isWrite = 4;</code>
     */
    public boolean hasIsWrite() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool isWrite = 4;</code>
     */
    public boolean getIsWrite() {
      return isWrite_;
    }

    private void initFields() {
      cacheRWGroupId_ = 0;
      cacheGroupId_ = 0;
      cacheGroupName_ = "";
      isWrite_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasCacheRWGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCacheGroupId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCacheGroupName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsWrite()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, cacheRWGroupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, cacheGroupId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getCacheGroupNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, isWrite_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, cacheRWGroupId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, cacheGroupId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getCacheGroupNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, isWrite_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.CacheRWGroupInfo}
     *
     * <pre>
     * Cache Read/Write group information.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.CacheRWGroupInfo)
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cacheRWGroupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cacheGroupId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cacheGroupName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        isWrite_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo build() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo result = new com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.cacheRWGroupId_ = cacheRWGroupId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.cacheGroupId_ = cacheGroupId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cacheGroupName_ = cacheGroupName_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isWrite_ = isWrite_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.getDefaultInstance()) return this;
        if (other.hasCacheRWGroupId()) {
          setCacheRWGroupId(other.getCacheRWGroupId());
        }
        if (other.hasCacheGroupId()) {
          setCacheGroupId(other.getCacheGroupId());
        }
        if (other.hasCacheGroupName()) {
          bitField0_ |= 0x00000004;
          cacheGroupName_ = other.cacheGroupName_;
          onChanged();
        }
        if (other.hasIsWrite()) {
          setIsWrite(other.getIsWrite());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasCacheRWGroupId()) {
          
          return false;
        }
        if (!hasCacheGroupId()) {
          
          return false;
        }
        if (!hasCacheGroupName()) {
          
          return false;
        }
        if (!hasIsWrite()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int cacheRWGroupId_ ;
      /**
       * <code>required int32 cacheRWGroupId = 1;</code>
       */
      public boolean hasCacheRWGroupId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 cacheRWGroupId = 1;</code>
       */
      public int getCacheRWGroupId() {
        return cacheRWGroupId_;
      }
      /**
       * <code>required int32 cacheRWGroupId = 1;</code>
       */
      public Builder setCacheRWGroupId(int value) {
        bitField0_ |= 0x00000001;
        cacheRWGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cacheRWGroupId = 1;</code>
       */
      public Builder clearCacheRWGroupId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cacheRWGroupId_ = 0;
        onChanged();
        return this;
      }

      private int cacheGroupId_ ;
      /**
       * <code>required int32 cacheGroupId = 2;</code>
       */
      public boolean hasCacheGroupId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 cacheGroupId = 2;</code>
       */
      public int getCacheGroupId() {
        return cacheGroupId_;
      }
      /**
       * <code>required int32 cacheGroupId = 2;</code>
       */
      public Builder setCacheGroupId(int value) {
        bitField0_ |= 0x00000002;
        cacheGroupId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 cacheGroupId = 2;</code>
       */
      public Builder clearCacheGroupId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        cacheGroupId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object cacheGroupName_ = "";
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public boolean hasCacheGroupName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public java.lang.String getCacheGroupName() {
        java.lang.Object ref = cacheGroupName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            cacheGroupName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public com.google.protobuf.ByteString
          getCacheGroupNameBytes() {
        java.lang.Object ref = cacheGroupName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cacheGroupName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public Builder setCacheGroupName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        cacheGroupName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public Builder clearCacheGroupName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cacheGroupName_ = getDefaultInstance().getCacheGroupName();
        onChanged();
        return this;
      }
      /**
       * <code>required string cacheGroupName = 3;</code>
       */
      public Builder setCacheGroupNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        cacheGroupName_ = value;
        onChanged();
        return this;
      }

      private boolean isWrite_ ;
      /**
       * <code>required bool isWrite = 4;</code>
       */
      public boolean hasIsWrite() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool isWrite = 4;</code>
       */
      public boolean getIsWrite() {
        return isWrite_;
      }
      /**
       * <code>required bool isWrite = 4;</code>
       */
      public Builder setIsWrite(boolean value) {
        bitField0_ |= 0x00000008;
        isWrite_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool isWrite = 4;</code>
       */
      public Builder clearIsWrite() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isWrite_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.CacheRWGroupInfo)
    }

    static {
      defaultInstance = new CacheRWGroupInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.CacheRWGroupInfo)
  }

  public interface CacheRWGroupMissProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.CacheRWGroupMissProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> 
        getCacheMissProfList();
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf getCacheMissProf(int index);
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    int getCacheMissProfCount();
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder> 
        getCacheMissProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder getCacheMissProfOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.CacheRWGroupMissProf}
   *
   * <pre>
   * Cache Read/Write group miss profile.
   * </pre>
   */
  public static final class CacheRWGroupMissProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.CacheRWGroupMissProf)
      CacheRWGroupMissProfOrBuilder {
    // Use CacheRWGroupMissProf.newBuilder() to construct.
    private CacheRWGroupMissProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CacheRWGroupMissProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CacheRWGroupMissProf defaultInstance;
    public static CacheRWGroupMissProf getDefaultInstance() {
      return defaultInstance;
    }

    public CacheRWGroupMissProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CacheRWGroupMissProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cacheMissProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf>();
                mutable_bitField0_ |= 0x00000001;
              }
              cacheMissProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cacheMissProf_ = java.util.Collections.unmodifiableList(cacheMissProf_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupMissProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder.class);
    }

    public static com.google.protobuf.Parser<CacheRWGroupMissProf> PARSER =
        new com.google.protobuf.AbstractParser<CacheRWGroupMissProf>() {
      public CacheRWGroupMissProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CacheRWGroupMissProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CacheRWGroupMissProf> getParserForType() {
      return PARSER;
    }

    public static final int CACHEMISSPROF_FIELD_NUMBER = 1;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> cacheMissProf_;
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> getCacheMissProfList() {
      return cacheMissProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder> 
        getCacheMissProfOrBuilderList() {
      return cacheMissProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    public int getCacheMissProfCount() {
      return cacheMissProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf getCacheMissProf(int index) {
      return cacheMissProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder getCacheMissProfOrBuilder(
        int index) {
      return cacheMissProf_.get(index);
    }

    private void initFields() {
      cacheMissProf_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getCacheMissProfCount(); i++) {
        if (!getCacheMissProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cacheMissProf_.size(); i++) {
        output.writeMessage(1, cacheMissProf_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cacheMissProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cacheMissProf_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.CacheRWGroupMissProf}
     *
     * <pre>
     * Cache Read/Write group miss profile.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.CacheRWGroupMissProf)
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupMissProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.class, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCacheMissProfFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cacheMissProfBuilder_ == null) {
          cacheMissProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cacheMissProfBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf result = new com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf(this);
        int from_bitField0_ = bitField0_;
        if (cacheMissProfBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cacheMissProf_ = java.util.Collections.unmodifiableList(cacheMissProf_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cacheMissProf_ = cacheMissProf_;
        } else {
          result.cacheMissProf_ = cacheMissProfBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.getDefaultInstance()) return this;
        if (cacheMissProfBuilder_ == null) {
          if (!other.cacheMissProf_.isEmpty()) {
            if (cacheMissProf_.isEmpty()) {
              cacheMissProf_ = other.cacheMissProf_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCacheMissProfIsMutable();
              cacheMissProf_.addAll(other.cacheMissProf_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheMissProf_.isEmpty()) {
            if (cacheMissProfBuilder_.isEmpty()) {
              cacheMissProfBuilder_.dispose();
              cacheMissProfBuilder_ = null;
              cacheMissProf_ = other.cacheMissProf_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cacheMissProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheMissProfFieldBuilder() : null;
            } else {
              cacheMissProfBuilder_.addAllMessages(other.cacheMissProf_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getCacheMissProfCount(); i++) {
          if (!getCacheMissProf(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> cacheMissProf_ =
        java.util.Collections.emptyList();
      private void ensureCacheMissProfIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cacheMissProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf>(cacheMissProf_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder> cacheMissProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> getCacheMissProfList() {
        if (cacheMissProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheMissProf_);
        } else {
          return cacheMissProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public int getCacheMissProfCount() {
        if (cacheMissProfBuilder_ == null) {
          return cacheMissProf_.size();
        } else {
          return cacheMissProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf getCacheMissProf(int index) {
        if (cacheMissProfBuilder_ == null) {
          return cacheMissProf_.get(index);
        } else {
          return cacheMissProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder setCacheMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf value) {
        if (cacheMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheMissProfIsMutable();
          cacheMissProf_.set(index, value);
          onChanged();
        } else {
          cacheMissProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder setCacheMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder builderForValue) {
        if (cacheMissProfBuilder_ == null) {
          ensureCacheMissProfIsMutable();
          cacheMissProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheMissProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder addCacheMissProf(com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf value) {
        if (cacheMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheMissProfIsMutable();
          cacheMissProf_.add(value);
          onChanged();
        } else {
          cacheMissProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder addCacheMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf value) {
        if (cacheMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheMissProfIsMutable();
          cacheMissProf_.add(index, value);
          onChanged();
        } else {
          cacheMissProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder addCacheMissProf(
          com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder builderForValue) {
        if (cacheMissProfBuilder_ == null) {
          ensureCacheMissProfIsMutable();
          cacheMissProf_.add(builderForValue.build());
          onChanged();
        } else {
          cacheMissProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder addCacheMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder builderForValue) {
        if (cacheMissProfBuilder_ == null) {
          ensureCacheMissProfIsMutable();
          cacheMissProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheMissProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder addAllCacheMissProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf> values) {
        if (cacheMissProfBuilder_ == null) {
          ensureCacheMissProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheMissProf_);
          onChanged();
        } else {
          cacheMissProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder clearCacheMissProf() {
        if (cacheMissProfBuilder_ == null) {
          cacheMissProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cacheMissProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public Builder removeCacheMissProf(int index) {
        if (cacheMissProfBuilder_ == null) {
          ensureCacheMissProfIsMutable();
          cacheMissProf_.remove(index);
          onChanged();
        } else {
          cacheMissProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder getCacheMissProfBuilder(
          int index) {
        return getCacheMissProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder getCacheMissProfOrBuilder(
          int index) {
        if (cacheMissProfBuilder_ == null) {
          return cacheMissProf_.get(index);  } else {
          return cacheMissProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder> 
           getCacheMissProfOrBuilderList() {
        if (cacheMissProfBuilder_ != null) {
          return cacheMissProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheMissProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder addCacheMissProfBuilder() {
        return getCacheMissProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder addCacheMissProfBuilder(
          int index) {
        return getCacheMissProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheMissProf cacheMissProf = 1;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder> 
           getCacheMissProfBuilderList() {
        return getCacheMissProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder> 
          getCacheMissProfFieldBuilder() {
        if (cacheMissProfBuilder_ == null) {
          cacheMissProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheMissProfOrBuilder>(
                  cacheMissProf_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cacheMissProf_ = null;
        }
        return cacheMissProfBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.CacheRWGroupMissProf)
    }

    static {
      defaultInstance = new CacheRWGroupMissProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.CacheRWGroupMissProf)
  }

  public interface AllocSiteProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.AllocSiteProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>required int64 IP = 2;</code>
     */
    boolean hasIP();
    /**
     * <code>required int64 IP = 2;</code>
     */
    long getIP();

    /**
     * <code>required int32 classId = 3;</code>
     */
    boolean hasClassId();
    /**
     * <code>required int32 classId = 3;</code>
     */
    int getClassId();

    /**
     * <code>required int64 count = 4;</code>
     */
    boolean hasCount();
    /**
     * <code>required int64 count = 4;</code>
     */
    long getCount();
  }
  /**
   * Protobuf type {@code MaxSimInterface.AllocSiteProf}
   *
   * <pre>
   * Allocation site profile.
   * </pre>
   */
  public static final class AllocSiteProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.AllocSiteProf)
      AllocSiteProfOrBuilder {
    // Use AllocSiteProf.newBuilder() to construct.
    private AllocSiteProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AllocSiteProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AllocSiteProf defaultInstance;
    public static AllocSiteProf getDefaultInstance() {
      return defaultInstance;
    }

    public AllocSiteProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AllocSiteProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              iP_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              classId_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              count_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocSiteProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocSiteProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.class, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder.class);
    }

    public static com.google.protobuf.Parser<AllocSiteProf> PARSER =
        new com.google.protobuf.AbstractParser<AllocSiteProf>() {
      public AllocSiteProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AllocSiteProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AllocSiteProf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int IP_FIELD_NUMBER = 2;
    private long iP_;
    /**
     * <code>required int64 IP = 2;</code>
     */
    public boolean hasIP() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 IP = 2;</code>
     */
    public long getIP() {
      return iP_;
    }

    public static final int CLASSID_FIELD_NUMBER = 3;
    private int classId_;
    /**
     * <code>required int32 classId = 3;</code>
     */
    public boolean hasClassId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 classId = 3;</code>
     */
    public int getClassId() {
      return classId_;
    }

    public static final int COUNT_FIELD_NUMBER = 4;
    private long count_;
    /**
     * <code>required int64 count = 4;</code>
     */
    public boolean hasCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 count = 4;</code>
     */
    public long getCount() {
      return count_;
    }

    private void initFields() {
      id_ = 0;
      iP_ = 0L;
      classId_ = 0;
      count_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIP()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClassId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, iP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, classId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(4, count_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, iP_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, classId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, count_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.AllocSiteProf}
     *
     * <pre>
     * Allocation site profile.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.AllocSiteProf)
        com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocSiteProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocSiteProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.class, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        iP_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        classId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        count_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_AllocSiteProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf result = new com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.iP_ = iP_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.classId_ = classId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.count_ = count_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasIP()) {
          setIP(other.getIP());
        }
        if (other.hasClassId()) {
          setClassId(other.getClassId());
        }
        if (other.hasCount()) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasIP()) {
          
          return false;
        }
        if (!hasClassId()) {
          
          return false;
        }
        if (!hasCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private long iP_ ;
      /**
       * <code>required int64 IP = 2;</code>
       */
      public boolean hasIP() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public long getIP() {
        return iP_;
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public Builder setIP(long value) {
        bitField0_ |= 0x00000002;
        iP_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 IP = 2;</code>
       */
      public Builder clearIP() {
        bitField0_ = (bitField0_ & ~0x00000002);
        iP_ = 0L;
        onChanged();
        return this;
      }

      private int classId_ ;
      /**
       * <code>required int32 classId = 3;</code>
       */
      public boolean hasClassId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public int getClassId() {
        return classId_;
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public Builder setClassId(int value) {
        bitField0_ |= 0x00000004;
        classId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 classId = 3;</code>
       */
      public Builder clearClassId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        classId_ = 0;
        onChanged();
        return this;
      }

      private long count_ ;
      /**
       * <code>required int64 count = 4;</code>
       */
      public boolean hasCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 count = 4;</code>
       */
      public long getCount() {
        return count_;
      }
      /**
       * <code>required int64 count = 4;</code>
       */
      public Builder setCount(long value) {
        bitField0_ |= 0x00000008;
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 count = 4;</code>
       */
      public Builder clearCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        count_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.AllocSiteProf)
    }

    static {
      defaultInstance = new AllocSiteProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.AllocSiteProf)
  }

  public interface FieldProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.FieldProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 offset = 1;</code>
     */
    boolean hasOffset();
    /**
     * <code>required int32 offset = 1;</code>
     */
    int getOffset();

    /**
     * <code>required int64 readCount = 2;</code>
     */
    boolean hasReadCount();
    /**
     * <code>required int64 readCount = 2;</code>
     */
    long getReadCount();

    /**
     * <code>required int64 writeCount = 3;</code>
     */
    boolean hasWriteCount();
    /**
     * <code>required int64 writeCount = 3;</code>
     */
    long getWriteCount();

    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    java.util.List<java.lang.Long> getCacheRWGroupMissCountList();
    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    int getCacheRWGroupMissCountCount();
    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    long getCacheRWGroupMissCount(int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.FieldProf}
   *
   * <pre>
   * Field profile.
   * </pre>
   */
  public static final class FieldProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.FieldProf)
      FieldProfOrBuilder {
    // Use FieldProf.newBuilder() to construct.
    private FieldProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private FieldProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final FieldProf defaultInstance;
    public static FieldProf getDefaultInstance() {
      return defaultInstance;
    }

    public FieldProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private FieldProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              offset_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              readCount_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              writeCount_ = input.readInt64();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cacheRWGroupMissCount_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              cacheRWGroupMissCount_.add(input.readInt64());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                cacheRWGroupMissCount_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                cacheRWGroupMissCount_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cacheRWGroupMissCount_ = java.util.Collections.unmodifiableList(cacheRWGroupMissCount_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder.class);
    }

    public static com.google.protobuf.Parser<FieldProf> PARSER =
        new com.google.protobuf.AbstractParser<FieldProf>() {
      public FieldProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FieldProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<FieldProf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int OFFSET_FIELD_NUMBER = 1;
    private int offset_;
    /**
     * <code>required int32 offset = 1;</code>
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 offset = 1;</code>
     */
    public int getOffset() {
      return offset_;
    }

    public static final int READCOUNT_FIELD_NUMBER = 2;
    private long readCount_;
    /**
     * <code>required int64 readCount = 2;</code>
     */
    public boolean hasReadCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 readCount = 2;</code>
     */
    public long getReadCount() {
      return readCount_;
    }

    public static final int WRITECOUNT_FIELD_NUMBER = 3;
    private long writeCount_;
    /**
     * <code>required int64 writeCount = 3;</code>
     */
    public boolean hasWriteCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 writeCount = 3;</code>
     */
    public long getWriteCount() {
      return writeCount_;
    }

    public static final int CACHERWGROUPMISSCOUNT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Long> cacheRWGroupMissCount_;
    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    public java.util.List<java.lang.Long>
        getCacheRWGroupMissCountList() {
      return cacheRWGroupMissCount_;
    }
    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    public int getCacheRWGroupMissCountCount() {
      return cacheRWGroupMissCount_.size();
    }
    /**
     * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
     */
    public long getCacheRWGroupMissCount(int index) {
      return cacheRWGroupMissCount_.get(index);
    }

    private void initFields() {
      offset_ = 0;
      readCount_ = 0L;
      writeCount_ = 0L;
      cacheRWGroupMissCount_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasReadCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWriteCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, offset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, readCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, writeCount_);
      }
      for (int i = 0; i < cacheRWGroupMissCount_.size(); i++) {
        output.writeInt64(4, cacheRWGroupMissCount_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, offset_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, readCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, writeCount_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cacheRWGroupMissCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(cacheRWGroupMissCount_.get(i));
        }
        size += dataSize;
        size += 1 * getCacheRWGroupMissCountList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.FieldProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.FieldProf}
     *
     * <pre>
     * Field profile.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.FieldProf)
        com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.class, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        offset_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        readCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        writeCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        cacheRWGroupMissCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_FieldProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldProf result = new com.sun.max.vm.maxsim.MaxSimInterface.FieldProf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.offset_ = offset_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.readCount_ = readCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.writeCount_ = writeCount_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          cacheRWGroupMissCount_ = java.util.Collections.unmodifiableList(cacheRWGroupMissCount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.cacheRWGroupMissCount_ = cacheRWGroupMissCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.FieldProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.FieldProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.FieldProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.getDefaultInstance()) return this;
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        if (other.hasReadCount()) {
          setReadCount(other.getReadCount());
        }
        if (other.hasWriteCount()) {
          setWriteCount(other.getWriteCount());
        }
        if (!other.cacheRWGroupMissCount_.isEmpty()) {
          if (cacheRWGroupMissCount_.isEmpty()) {
            cacheRWGroupMissCount_ = other.cacheRWGroupMissCount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureCacheRWGroupMissCountIsMutable();
            cacheRWGroupMissCount_.addAll(other.cacheRWGroupMissCount_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasOffset()) {
          
          return false;
        }
        if (!hasReadCount()) {
          
          return false;
        }
        if (!hasWriteCount()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.FieldProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.FieldProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int offset_ ;
      /**
       * <code>required int32 offset = 1;</code>
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public int getOffset() {
        return offset_;
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public Builder setOffset(int value) {
        bitField0_ |= 0x00000001;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 offset = 1;</code>
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000001);
        offset_ = 0;
        onChanged();
        return this;
      }

      private long readCount_ ;
      /**
       * <code>required int64 readCount = 2;</code>
       */
      public boolean hasReadCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int64 readCount = 2;</code>
       */
      public long getReadCount() {
        return readCount_;
      }
      /**
       * <code>required int64 readCount = 2;</code>
       */
      public Builder setReadCount(long value) {
        bitField0_ |= 0x00000002;
        readCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 readCount = 2;</code>
       */
      public Builder clearReadCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        readCount_ = 0L;
        onChanged();
        return this;
      }

      private long writeCount_ ;
      /**
       * <code>required int64 writeCount = 3;</code>
       */
      public boolean hasWriteCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int64 writeCount = 3;</code>
       */
      public long getWriteCount() {
        return writeCount_;
      }
      /**
       * <code>required int64 writeCount = 3;</code>
       */
      public Builder setWriteCount(long value) {
        bitField0_ |= 0x00000004;
        writeCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 writeCount = 3;</code>
       */
      public Builder clearWriteCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        writeCount_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> cacheRWGroupMissCount_ = java.util.Collections.emptyList();
      private void ensureCacheRWGroupMissCountIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cacheRWGroupMissCount_ = new java.util.ArrayList<java.lang.Long>(cacheRWGroupMissCount_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public java.util.List<java.lang.Long>
          getCacheRWGroupMissCountList() {
        return java.util.Collections.unmodifiableList(cacheRWGroupMissCount_);
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public int getCacheRWGroupMissCountCount() {
        return cacheRWGroupMissCount_.size();
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public long getCacheRWGroupMissCount(int index) {
        return cacheRWGroupMissCount_.get(index);
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public Builder setCacheRWGroupMissCount(
          int index, long value) {
        ensureCacheRWGroupMissCountIsMutable();
        cacheRWGroupMissCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public Builder addCacheRWGroupMissCount(long value) {
        ensureCacheRWGroupMissCountIsMutable();
        cacheRWGroupMissCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public Builder addAllCacheRWGroupMissCount(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCacheRWGroupMissCountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cacheRWGroupMissCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 cacheRWGroupMissCount = 4;</code>
       */
      public Builder clearCacheRWGroupMissCount() {
        cacheRWGroupMissCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.FieldProf)
    }

    static {
      defaultInstance = new FieldProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.FieldProf)
  }

  public interface ClassProfOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.ClassProf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required int32 id = 1;</code>
     */
    int getId();

    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> 
        getAllocProfList();
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.AllocProf getAllocProf(int index);
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    int getAllocProfCount();
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder> 
        getAllocProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder getAllocProfOrBuilder(
        int index);

    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> 
        getFieldProfList();
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldProf getFieldProf(int index);
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    int getFieldProfCount();
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder> 
        getFieldProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder getFieldProfOrBuilder(
        int index);

    /**
     * <code>required int64 memAllSize = 4;</code>
     */
    boolean hasMemAllSize();
    /**
     * <code>required int64 memAllSize = 4;</code>
     */
    long getMemAllSize();

    /**
     * <code>required int64 memAllCount = 5;</code>
     */
    boolean hasMemAllCount();
    /**
     * <code>required int64 memAllCount = 5;</code>
     */
    long getMemAllCount();

    /**
     * <code>required int64 memAccCount = 6;</code>
     */
    boolean hasMemAccCount();
    /**
     * <code>required int64 memAccCount = 6;</code>
     */
    long getMemAccCount();
  }
  /**
   * Protobuf type {@code MaxSimInterface.ClassProf}
   *
   * <pre>
   * Class profile.
   * </pre>
   */
  public static final class ClassProf extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.ClassProf)
      ClassProfOrBuilder {
    // Use ClassProf.newBuilder() to construct.
    private ClassProf(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClassProf(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClassProf defaultInstance;
    public static ClassProf getDefaultInstance() {
      return defaultInstance;
    }

    public ClassProf getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClassProf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                allocProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf>();
                mutable_bitField0_ |= 0x00000002;
              }
              allocProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                fieldProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf>();
                mutable_bitField0_ |= 0x00000004;
              }
              fieldProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              memAllSize_ = input.readInt64();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              memAllCount_ = input.readInt64();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              memAccCount_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          allocProf_ = java.util.Collections.unmodifiableList(allocProf_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          fieldProf_ = java.util.Collections.unmodifiableList(fieldProf_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassProf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassProf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.class, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder.class);
    }

    public static com.google.protobuf.Parser<ClassProf> PARSER =
        new com.google.protobuf.AbstractParser<ClassProf>() {
      public ClassProf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClassProf(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClassProf> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required int32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }

    public static final int ALLOCPROF_FIELD_NUMBER = 2;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> allocProf_;
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> getAllocProfList() {
      return allocProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder> 
        getAllocProfOrBuilderList() {
      return allocProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    public int getAllocProfCount() {
      return allocProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf getAllocProf(int index) {
      return allocProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder getAllocProfOrBuilder(
        int index) {
      return allocProf_.get(index);
    }

    public static final int FIELDPROF_FIELD_NUMBER = 3;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> fieldProf_;
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> getFieldProfList() {
      return fieldProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder> 
        getFieldProfOrBuilderList() {
      return fieldProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    public int getFieldProfCount() {
      return fieldProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf getFieldProf(int index) {
      return fieldProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder getFieldProfOrBuilder(
        int index) {
      return fieldProf_.get(index);
    }

    public static final int MEMALLSIZE_FIELD_NUMBER = 4;
    private long memAllSize_;
    /**
     * <code>required int64 memAllSize = 4;</code>
     */
    public boolean hasMemAllSize() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int64 memAllSize = 4;</code>
     */
    public long getMemAllSize() {
      return memAllSize_;
    }

    public static final int MEMALLCOUNT_FIELD_NUMBER = 5;
    private long memAllCount_;
    /**
     * <code>required int64 memAllCount = 5;</code>
     */
    public boolean hasMemAllCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int64 memAllCount = 5;</code>
     */
    public long getMemAllCount() {
      return memAllCount_;
    }

    public static final int MEMACCCOUNT_FIELD_NUMBER = 6;
    private long memAccCount_;
    /**
     * <code>required int64 memAccCount = 6;</code>
     */
    public boolean hasMemAccCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int64 memAccCount = 6;</code>
     */
    public long getMemAccCount() {
      return memAccCount_;
    }

    private void initFields() {
      id_ = 0;
      allocProf_ = java.util.Collections.emptyList();
      fieldProf_ = java.util.Collections.emptyList();
      memAllSize_ = 0L;
      memAllCount_ = 0L;
      memAccCount_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemAllSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemAllCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMemAccCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getAllocProfCount(); i++) {
        if (!getAllocProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getFieldProfCount(); i++) {
        if (!getFieldProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, id_);
      }
      for (int i = 0; i < allocProf_.size(); i++) {
        output.writeMessage(2, allocProf_.get(i));
      }
      for (int i = 0; i < fieldProf_.size(); i++) {
        output.writeMessage(3, fieldProf_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(4, memAllSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(5, memAllCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt64(6, memAccCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      for (int i = 0; i < allocProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, allocProf_.get(i));
      }
      for (int i = 0; i < fieldProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, fieldProf_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, memAllSize_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, memAllCount_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, memAccCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.ClassProf prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.ClassProf}
     *
     * <pre>
     * Class profile.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.ClassProf)
        com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassProf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassProf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.class, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAllocProfFieldBuilder();
          getFieldProfFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        id_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (allocProfBuilder_ == null) {
          allocProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          allocProfBuilder_.clear();
        }
        if (fieldProfBuilder_ == null) {
          fieldProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          fieldProfBuilder_.clear();
        }
        memAllSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        memAllCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000010);
        memAccCount_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ClassProf_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf build() {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassProf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassProf result = new com.sun.max.vm.maxsim.MaxSimInterface.ClassProf(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (allocProfBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            allocProf_ = java.util.Collections.unmodifiableList(allocProf_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.allocProf_ = allocProf_;
        } else {
          result.allocProf_ = allocProfBuilder_.build();
        }
        if (fieldProfBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            fieldProf_ = java.util.Collections.unmodifiableList(fieldProf_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.fieldProf_ = fieldProf_;
        } else {
          result.fieldProf_ = fieldProfBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.memAllSize_ = memAllSize_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.memAllCount_ = memAllCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.memAccCount_ = memAccCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.ClassProf) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.ClassProf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.ClassProf other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (allocProfBuilder_ == null) {
          if (!other.allocProf_.isEmpty()) {
            if (allocProf_.isEmpty()) {
              allocProf_ = other.allocProf_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAllocProfIsMutable();
              allocProf_.addAll(other.allocProf_);
            }
            onChanged();
          }
        } else {
          if (!other.allocProf_.isEmpty()) {
            if (allocProfBuilder_.isEmpty()) {
              allocProfBuilder_.dispose();
              allocProfBuilder_ = null;
              allocProf_ = other.allocProf_;
              bitField0_ = (bitField0_ & ~0x00000002);
              allocProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllocProfFieldBuilder() : null;
            } else {
              allocProfBuilder_.addAllMessages(other.allocProf_);
            }
          }
        }
        if (fieldProfBuilder_ == null) {
          if (!other.fieldProf_.isEmpty()) {
            if (fieldProf_.isEmpty()) {
              fieldProf_ = other.fieldProf_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFieldProfIsMutable();
              fieldProf_.addAll(other.fieldProf_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldProf_.isEmpty()) {
            if (fieldProfBuilder_.isEmpty()) {
              fieldProfBuilder_.dispose();
              fieldProfBuilder_ = null;
              fieldProf_ = other.fieldProf_;
              bitField0_ = (bitField0_ & ~0x00000004);
              fieldProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getFieldProfFieldBuilder() : null;
            } else {
              fieldProfBuilder_.addAllMessages(other.fieldProf_);
            }
          }
        }
        if (other.hasMemAllSize()) {
          setMemAllSize(other.getMemAllSize());
        }
        if (other.hasMemAllCount()) {
          setMemAllCount(other.getMemAllCount());
        }
        if (other.hasMemAccCount()) {
          setMemAccCount(other.getMemAccCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasId()) {
          
          return false;
        }
        if (!hasMemAllSize()) {
          
          return false;
        }
        if (!hasMemAllCount()) {
          
          return false;
        }
        if (!hasMemAccCount()) {
          
          return false;
        }
        for (int i = 0; i < getAllocProfCount(); i++) {
          if (!getAllocProf(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getFieldProfCount(); i++) {
          if (!getFieldProf(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.ClassProf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.ClassProf) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>required int32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder setId(int value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 id = 1;</code>
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> allocProf_ =
        java.util.Collections.emptyList();
      private void ensureAllocProfIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          allocProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf>(allocProf_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.AllocProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder> allocProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> getAllocProfList() {
        if (allocProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allocProf_);
        } else {
          return allocProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public int getAllocProfCount() {
        if (allocProfBuilder_ == null) {
          return allocProf_.size();
        } else {
          return allocProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf getAllocProf(int index) {
        if (allocProfBuilder_ == null) {
          return allocProf_.get(index);
        } else {
          return allocProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder setAllocProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf value) {
        if (allocProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocProfIsMutable();
          allocProf_.set(index, value);
          onChanged();
        } else {
          allocProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder setAllocProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder builderForValue) {
        if (allocProfBuilder_ == null) {
          ensureAllocProfIsMutable();
          allocProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          allocProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder addAllocProf(com.sun.max.vm.maxsim.MaxSimInterface.AllocProf value) {
        if (allocProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocProfIsMutable();
          allocProf_.add(value);
          onChanged();
        } else {
          allocProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder addAllocProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf value) {
        if (allocProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocProfIsMutable();
          allocProf_.add(index, value);
          onChanged();
        } else {
          allocProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder addAllocProf(
          com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder builderForValue) {
        if (allocProfBuilder_ == null) {
          ensureAllocProfIsMutable();
          allocProf_.add(builderForValue.build());
          onChanged();
        } else {
          allocProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder addAllocProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder builderForValue) {
        if (allocProfBuilder_ == null) {
          ensureAllocProfIsMutable();
          allocProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          allocProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder addAllAllocProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocProf> values) {
        if (allocProfBuilder_ == null) {
          ensureAllocProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allocProf_);
          onChanged();
        } else {
          allocProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder clearAllocProf() {
        if (allocProfBuilder_ == null) {
          allocProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          allocProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public Builder removeAllocProf(int index) {
        if (allocProfBuilder_ == null) {
          ensureAllocProfIsMutable();
          allocProf_.remove(index);
          onChanged();
        } else {
          allocProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder getAllocProfBuilder(
          int index) {
        return getAllocProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder getAllocProfOrBuilder(
          int index) {
        if (allocProfBuilder_ == null) {
          return allocProf_.get(index);  } else {
          return allocProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder> 
           getAllocProfOrBuilderList() {
        if (allocProfBuilder_ != null) {
          return allocProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allocProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder addAllocProfBuilder() {
        return getAllocProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder addAllocProfBuilder(
          int index) {
        return getAllocProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.AllocProf allocProf = 2;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder> 
           getAllocProfBuilderList() {
        return getAllocProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.AllocProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder> 
          getAllocProfFieldBuilder() {
        if (allocProfBuilder_ == null) {
          allocProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.AllocProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocProfOrBuilder>(
                  allocProf_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          allocProf_ = null;
        }
        return allocProfBuilder_;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> fieldProf_ =
        java.util.Collections.emptyList();
      private void ensureFieldProfIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          fieldProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf>(fieldProf_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldProf, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder> fieldProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> getFieldProfList() {
        if (fieldProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldProf_);
        } else {
          return fieldProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public int getFieldProfCount() {
        if (fieldProfBuilder_ == null) {
          return fieldProf_.size();
        } else {
          return fieldProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf getFieldProf(int index) {
        if (fieldProfBuilder_ == null) {
          return fieldProf_.get(index);
        } else {
          return fieldProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder setFieldProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf value) {
        if (fieldProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProfIsMutable();
          fieldProf_.set(index, value);
          onChanged();
        } else {
          fieldProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder setFieldProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder builderForValue) {
        if (fieldProfBuilder_ == null) {
          ensureFieldProfIsMutable();
          fieldProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder addFieldProf(com.sun.max.vm.maxsim.MaxSimInterface.FieldProf value) {
        if (fieldProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProfIsMutable();
          fieldProf_.add(value);
          onChanged();
        } else {
          fieldProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder addFieldProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf value) {
        if (fieldProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldProfIsMutable();
          fieldProf_.add(index, value);
          onChanged();
        } else {
          fieldProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder addFieldProf(
          com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder builderForValue) {
        if (fieldProfBuilder_ == null) {
          ensureFieldProfIsMutable();
          fieldProf_.add(builderForValue.build());
          onChanged();
        } else {
          fieldProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder addFieldProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder builderForValue) {
        if (fieldProfBuilder_ == null) {
          ensureFieldProfIsMutable();
          fieldProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder addAllFieldProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldProf> values) {
        if (fieldProfBuilder_ == null) {
          ensureFieldProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldProf_);
          onChanged();
        } else {
          fieldProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder clearFieldProf() {
        if (fieldProfBuilder_ == null) {
          fieldProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          fieldProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public Builder removeFieldProf(int index) {
        if (fieldProfBuilder_ == null) {
          ensureFieldProfIsMutable();
          fieldProf_.remove(index);
          onChanged();
        } else {
          fieldProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder getFieldProfBuilder(
          int index) {
        return getFieldProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder getFieldProfOrBuilder(
          int index) {
        if (fieldProfBuilder_ == null) {
          return fieldProf_.get(index);  } else {
          return fieldProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder> 
           getFieldProfOrBuilderList() {
        if (fieldProfBuilder_ != null) {
          return fieldProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder addFieldProfBuilder() {
        return getFieldProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder addFieldProfBuilder(
          int index) {
        return getFieldProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.FieldProf fieldProf = 3;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder> 
           getFieldProfBuilderList() {
        return getFieldProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.FieldProf, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder> 
          getFieldProfFieldBuilder() {
        if (fieldProfBuilder_ == null) {
          fieldProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.FieldProf, com.sun.max.vm.maxsim.MaxSimInterface.FieldProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.FieldProfOrBuilder>(
                  fieldProf_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          fieldProf_ = null;
        }
        return fieldProfBuilder_;
      }

      private long memAllSize_ ;
      /**
       * <code>required int64 memAllSize = 4;</code>
       */
      public boolean hasMemAllSize() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int64 memAllSize = 4;</code>
       */
      public long getMemAllSize() {
        return memAllSize_;
      }
      /**
       * <code>required int64 memAllSize = 4;</code>
       */
      public Builder setMemAllSize(long value) {
        bitField0_ |= 0x00000008;
        memAllSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 memAllSize = 4;</code>
       */
      public Builder clearMemAllSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        memAllSize_ = 0L;
        onChanged();
        return this;
      }

      private long memAllCount_ ;
      /**
       * <code>required int64 memAllCount = 5;</code>
       */
      public boolean hasMemAllCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int64 memAllCount = 5;</code>
       */
      public long getMemAllCount() {
        return memAllCount_;
      }
      /**
       * <code>required int64 memAllCount = 5;</code>
       */
      public Builder setMemAllCount(long value) {
        bitField0_ |= 0x00000010;
        memAllCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 memAllCount = 5;</code>
       */
      public Builder clearMemAllCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        memAllCount_ = 0L;
        onChanged();
        return this;
      }

      private long memAccCount_ ;
      /**
       * <code>required int64 memAccCount = 6;</code>
       */
      public boolean hasMemAccCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int64 memAccCount = 6;</code>
       */
      public long getMemAccCount() {
        return memAccCount_;
      }
      /**
       * <code>required int64 memAccCount = 6;</code>
       */
      public Builder setMemAccCount(long value) {
        bitField0_ |= 0x00000020;
        memAccCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 memAccCount = 6;</code>
       */
      public Builder clearMemAccCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        memAccCount_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.ClassProf)
    }

    static {
      defaultInstance = new ClassProf(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.ClassProf)
  }

  public interface ZSimProfDBOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MaxSimInterface.ZSimProfDB)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 maxAllocSiteProfId = 1;</code>
     */
    boolean hasMaxAllocSiteProfId();
    /**
     * <code>required int32 maxAllocSiteProfId = 1;</code>
     */
    int getMaxAllocSiteProfId();

    /**
     * <code>required int32 dumpEventualStatsBeg = 2;</code>
     */
    boolean hasDumpEventualStatsBeg();
    /**
     * <code>required int32 dumpEventualStatsBeg = 2;</code>
     */
    int getDumpEventualStatsBeg();

    /**
     * <code>required int32 dumpEventualStatsEnd = 3;</code>
     */
    boolean hasDumpEventualStatsEnd();
    /**
     * <code>required int32 dumpEventualStatsEnd = 3;</code>
     */
    int getDumpEventualStatsEnd();

    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> 
        getCacheRWGroupInfoList();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo getCacheRWGroupInfo(int index);
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    int getCacheRWGroupInfoCount();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder> 
        getCacheRWGroupInfoOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder getCacheRWGroupInfoOrBuilder(
        int index);

    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> 
        getClassProfList();
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.ClassProf getClassProf(int index);
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    int getClassProfCount();
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder> 
        getClassProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder getClassProfOrBuilder(
        int index);

    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> 
        getCacheRWGroupMissProfList();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf getCacheRWGroupMissProf(int index);
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    int getCacheRWGroupMissProfCount();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder> 
        getCacheRWGroupMissProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder getCacheRWGroupMissProfOrBuilder(
        int index);

    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> 
        getAllocSiteProfList();
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf getAllocSiteProf(int index);
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    int getAllocSiteProfCount();
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder> 
        getAllocSiteProfOrBuilderList();
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder getAllocSiteProfOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code MaxSimInterface.ZSimProfDB}
   *
   * <pre>
   * ZSim profile database.
   * </pre>
   */
  public static final class ZSimProfDB extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MaxSimInterface.ZSimProfDB)
      ZSimProfDBOrBuilder {
    // Use ZSimProfDB.newBuilder() to construct.
    private ZSimProfDB(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ZSimProfDB(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ZSimProfDB defaultInstance;
    public static ZSimProfDB getDefaultInstance() {
      return defaultInstance;
    }

    public ZSimProfDB getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ZSimProfDB(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              maxAllocSiteProfId_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              dumpEventualStatsBeg_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              dumpEventualStatsEnd_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                cacheRWGroupInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo>();
                mutable_bitField0_ |= 0x00000008;
              }
              cacheRWGroupInfo_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.PARSER, extensionRegistry));
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                classProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf>();
                mutable_bitField0_ |= 0x00000010;
              }
              classProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cacheRWGroupMissProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf>();
                mutable_bitField0_ |= 0x00000020;
              }
              cacheRWGroupMissProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.PARSER, extensionRegistry));
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                allocSiteProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf>();
                mutable_bitField0_ |= 0x00000040;
              }
              allocSiteProf_.add(input.readMessage(com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          cacheRWGroupInfo_ = java.util.Collections.unmodifiableList(cacheRWGroupInfo_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          classProf_ = java.util.Collections.unmodifiableList(classProf_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cacheRWGroupMissProf_ = java.util.Collections.unmodifiableList(cacheRWGroupMissProf_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          allocSiteProf_ = java.util.Collections.unmodifiableList(allocSiteProf_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ZSimProfDB_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ZSimProfDB_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.class, com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.Builder.class);
    }

    public static com.google.protobuf.Parser<ZSimProfDB> PARSER =
        new com.google.protobuf.AbstractParser<ZSimProfDB>() {
      public ZSimProfDB parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ZSimProfDB(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ZSimProfDB> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MAXALLOCSITEPROFID_FIELD_NUMBER = 1;
    private int maxAllocSiteProfId_;
    /**
     * <code>required int32 maxAllocSiteProfId = 1;</code>
     */
    public boolean hasMaxAllocSiteProfId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 maxAllocSiteProfId = 1;</code>
     */
    public int getMaxAllocSiteProfId() {
      return maxAllocSiteProfId_;
    }

    public static final int DUMPEVENTUALSTATSBEG_FIELD_NUMBER = 2;
    private int dumpEventualStatsBeg_;
    /**
     * <code>required int32 dumpEventualStatsBeg = 2;</code>
     */
    public boolean hasDumpEventualStatsBeg() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 dumpEventualStatsBeg = 2;</code>
     */
    public int getDumpEventualStatsBeg() {
      return dumpEventualStatsBeg_;
    }

    public static final int DUMPEVENTUALSTATSEND_FIELD_NUMBER = 3;
    private int dumpEventualStatsEnd_;
    /**
     * <code>required int32 dumpEventualStatsEnd = 3;</code>
     */
    public boolean hasDumpEventualStatsEnd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 dumpEventualStatsEnd = 3;</code>
     */
    public int getDumpEventualStatsEnd() {
      return dumpEventualStatsEnd_;
    }

    public static final int CACHERWGROUPINFO_FIELD_NUMBER = 4;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> cacheRWGroupInfo_;
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> getCacheRWGroupInfoList() {
      return cacheRWGroupInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder> 
        getCacheRWGroupInfoOrBuilderList() {
      return cacheRWGroupInfo_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    public int getCacheRWGroupInfoCount() {
      return cacheRWGroupInfo_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo getCacheRWGroupInfo(int index) {
      return cacheRWGroupInfo_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder getCacheRWGroupInfoOrBuilder(
        int index) {
      return cacheRWGroupInfo_.get(index);
    }

    public static final int CLASSPROF_FIELD_NUMBER = 5;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> classProf_;
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> getClassProfList() {
      return classProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder> 
        getClassProfOrBuilderList() {
      return classProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    public int getClassProfCount() {
      return classProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf getClassProf(int index) {
      return classProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder getClassProfOrBuilder(
        int index) {
      return classProf_.get(index);
    }

    public static final int CACHERWGROUPMISSPROF_FIELD_NUMBER = 6;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> cacheRWGroupMissProf_;
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> getCacheRWGroupMissProfList() {
      return cacheRWGroupMissProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder> 
        getCacheRWGroupMissProfOrBuilderList() {
      return cacheRWGroupMissProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    public int getCacheRWGroupMissProfCount() {
      return cacheRWGroupMissProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf getCacheRWGroupMissProf(int index) {
      return cacheRWGroupMissProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder getCacheRWGroupMissProfOrBuilder(
        int index) {
      return cacheRWGroupMissProf_.get(index);
    }

    public static final int ALLOCSITEPROF_FIELD_NUMBER = 7;
    private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> allocSiteProf_;
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> getAllocSiteProfList() {
      return allocSiteProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder> 
        getAllocSiteProfOrBuilderList() {
      return allocSiteProf_;
    }
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    public int getAllocSiteProfCount() {
      return allocSiteProf_.size();
    }
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf getAllocSiteProf(int index) {
      return allocSiteProf_.get(index);
    }
    /**
     * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
     */
    public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder getAllocSiteProfOrBuilder(
        int index) {
      return allocSiteProf_.get(index);
    }

    private void initFields() {
      maxAllocSiteProfId_ = 0;
      dumpEventualStatsBeg_ = 0;
      dumpEventualStatsEnd_ = 0;
      cacheRWGroupInfo_ = java.util.Collections.emptyList();
      classProf_ = java.util.Collections.emptyList();
      cacheRWGroupMissProf_ = java.util.Collections.emptyList();
      allocSiteProf_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMaxAllocSiteProfId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDumpEventualStatsBeg()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDumpEventualStatsEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getCacheRWGroupInfoCount(); i++) {
        if (!getCacheRWGroupInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getClassProfCount(); i++) {
        if (!getClassProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCacheRWGroupMissProfCount(); i++) {
        if (!getCacheRWGroupMissProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAllocSiteProfCount(); i++) {
        if (!getAllocSiteProf(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, maxAllocSiteProfId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, dumpEventualStatsBeg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, dumpEventualStatsEnd_);
      }
      for (int i = 0; i < cacheRWGroupInfo_.size(); i++) {
        output.writeMessage(4, cacheRWGroupInfo_.get(i));
      }
      for (int i = 0; i < classProf_.size(); i++) {
        output.writeMessage(5, classProf_.get(i));
      }
      for (int i = 0; i < cacheRWGroupMissProf_.size(); i++) {
        output.writeMessage(6, cacheRWGroupMissProf_.get(i));
      }
      for (int i = 0; i < allocSiteProf_.size(); i++) {
        output.writeMessage(7, allocSiteProf_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, maxAllocSiteProfId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, dumpEventualStatsBeg_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, dumpEventualStatsEnd_);
      }
      for (int i = 0; i < cacheRWGroupInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, cacheRWGroupInfo_.get(i));
      }
      for (int i = 0; i < classProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, classProf_.get(i));
      }
      for (int i = 0; i < cacheRWGroupMissProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cacheRWGroupMissProf_.get(i));
      }
      for (int i = 0; i < allocSiteProf_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, allocSiteProf_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MaxSimInterface.ZSimProfDB}
     *
     * <pre>
     * ZSim profile database.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MaxSimInterface.ZSimProfDB)
        com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDBOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ZSimProfDB_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ZSimProfDB_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.class, com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.Builder.class);
      }

      // Construct using com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCacheRWGroupInfoFieldBuilder();
          getClassProfFieldBuilder();
          getCacheRWGroupMissProfFieldBuilder();
          getAllocSiteProfFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        maxAllocSiteProfId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        dumpEventualStatsBeg_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        dumpEventualStatsEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (cacheRWGroupInfoBuilder_ == null) {
          cacheRWGroupInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          cacheRWGroupInfoBuilder_.clear();
        }
        if (classProfBuilder_ == null) {
          classProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          classProfBuilder_.clear();
        }
        if (cacheRWGroupMissProfBuilder_ == null) {
          cacheRWGroupMissProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          cacheRWGroupMissProfBuilder_.clear();
        }
        if (allocSiteProfBuilder_ == null) {
          allocSiteProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          allocSiteProfBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.internal_static_MaxSimInterface_ZSimProfDB_descriptor;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB getDefaultInstanceForType() {
        return com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.getDefaultInstance();
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB build() {
        com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB buildPartial() {
        com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB result = new com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.maxAllocSiteProfId_ = maxAllocSiteProfId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dumpEventualStatsBeg_ = dumpEventualStatsBeg_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.dumpEventualStatsEnd_ = dumpEventualStatsEnd_;
        if (cacheRWGroupInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            cacheRWGroupInfo_ = java.util.Collections.unmodifiableList(cacheRWGroupInfo_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.cacheRWGroupInfo_ = cacheRWGroupInfo_;
        } else {
          result.cacheRWGroupInfo_ = cacheRWGroupInfoBuilder_.build();
        }
        if (classProfBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            classProf_ = java.util.Collections.unmodifiableList(classProf_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.classProf_ = classProf_;
        } else {
          result.classProf_ = classProfBuilder_.build();
        }
        if (cacheRWGroupMissProfBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            cacheRWGroupMissProf_ = java.util.Collections.unmodifiableList(cacheRWGroupMissProf_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.cacheRWGroupMissProf_ = cacheRWGroupMissProf_;
        } else {
          result.cacheRWGroupMissProf_ = cacheRWGroupMissProfBuilder_.build();
        }
        if (allocSiteProfBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            allocSiteProf_ = java.util.Collections.unmodifiableList(allocSiteProf_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.allocSiteProf_ = allocSiteProf_;
        } else {
          result.allocSiteProf_ = allocSiteProfBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB) {
          return mergeFrom((com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB other) {
        if (other == com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB.getDefaultInstance()) return this;
        if (other.hasMaxAllocSiteProfId()) {
          setMaxAllocSiteProfId(other.getMaxAllocSiteProfId());
        }
        if (other.hasDumpEventualStatsBeg()) {
          setDumpEventualStatsBeg(other.getDumpEventualStatsBeg());
        }
        if (other.hasDumpEventualStatsEnd()) {
          setDumpEventualStatsEnd(other.getDumpEventualStatsEnd());
        }
        if (cacheRWGroupInfoBuilder_ == null) {
          if (!other.cacheRWGroupInfo_.isEmpty()) {
            if (cacheRWGroupInfo_.isEmpty()) {
              cacheRWGroupInfo_ = other.cacheRWGroupInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCacheRWGroupInfoIsMutable();
              cacheRWGroupInfo_.addAll(other.cacheRWGroupInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheRWGroupInfo_.isEmpty()) {
            if (cacheRWGroupInfoBuilder_.isEmpty()) {
              cacheRWGroupInfoBuilder_.dispose();
              cacheRWGroupInfoBuilder_ = null;
              cacheRWGroupInfo_ = other.cacheRWGroupInfo_;
              bitField0_ = (bitField0_ & ~0x00000008);
              cacheRWGroupInfoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheRWGroupInfoFieldBuilder() : null;
            } else {
              cacheRWGroupInfoBuilder_.addAllMessages(other.cacheRWGroupInfo_);
            }
          }
        }
        if (classProfBuilder_ == null) {
          if (!other.classProf_.isEmpty()) {
            if (classProf_.isEmpty()) {
              classProf_ = other.classProf_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureClassProfIsMutable();
              classProf_.addAll(other.classProf_);
            }
            onChanged();
          }
        } else {
          if (!other.classProf_.isEmpty()) {
            if (classProfBuilder_.isEmpty()) {
              classProfBuilder_.dispose();
              classProfBuilder_ = null;
              classProf_ = other.classProf_;
              bitField0_ = (bitField0_ & ~0x00000010);
              classProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClassProfFieldBuilder() : null;
            } else {
              classProfBuilder_.addAllMessages(other.classProf_);
            }
          }
        }
        if (cacheRWGroupMissProfBuilder_ == null) {
          if (!other.cacheRWGroupMissProf_.isEmpty()) {
            if (cacheRWGroupMissProf_.isEmpty()) {
              cacheRWGroupMissProf_ = other.cacheRWGroupMissProf_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCacheRWGroupMissProfIsMutable();
              cacheRWGroupMissProf_.addAll(other.cacheRWGroupMissProf_);
            }
            onChanged();
          }
        } else {
          if (!other.cacheRWGroupMissProf_.isEmpty()) {
            if (cacheRWGroupMissProfBuilder_.isEmpty()) {
              cacheRWGroupMissProfBuilder_.dispose();
              cacheRWGroupMissProfBuilder_ = null;
              cacheRWGroupMissProf_ = other.cacheRWGroupMissProf_;
              bitField0_ = (bitField0_ & ~0x00000020);
              cacheRWGroupMissProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCacheRWGroupMissProfFieldBuilder() : null;
            } else {
              cacheRWGroupMissProfBuilder_.addAllMessages(other.cacheRWGroupMissProf_);
            }
          }
        }
        if (allocSiteProfBuilder_ == null) {
          if (!other.allocSiteProf_.isEmpty()) {
            if (allocSiteProf_.isEmpty()) {
              allocSiteProf_ = other.allocSiteProf_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureAllocSiteProfIsMutable();
              allocSiteProf_.addAll(other.allocSiteProf_);
            }
            onChanged();
          }
        } else {
          if (!other.allocSiteProf_.isEmpty()) {
            if (allocSiteProfBuilder_.isEmpty()) {
              allocSiteProfBuilder_.dispose();
              allocSiteProfBuilder_ = null;
              allocSiteProf_ = other.allocSiteProf_;
              bitField0_ = (bitField0_ & ~0x00000040);
              allocSiteProfBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllocSiteProfFieldBuilder() : null;
            } else {
              allocSiteProfBuilder_.addAllMessages(other.allocSiteProf_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMaxAllocSiteProfId()) {
          
          return false;
        }
        if (!hasDumpEventualStatsBeg()) {
          
          return false;
        }
        if (!hasDumpEventualStatsEnd()) {
          
          return false;
        }
        for (int i = 0; i < getCacheRWGroupInfoCount(); i++) {
          if (!getCacheRWGroupInfo(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getClassProfCount(); i++) {
          if (!getClassProf(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCacheRWGroupMissProfCount(); i++) {
          if (!getCacheRWGroupMissProf(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAllocSiteProfCount(); i++) {
          if (!getAllocSiteProf(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sun.max.vm.maxsim.MaxSimInterface.ZSimProfDB) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int maxAllocSiteProfId_ ;
      /**
       * <code>required int32 maxAllocSiteProfId = 1;</code>
       */
      public boolean hasMaxAllocSiteProfId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 maxAllocSiteProfId = 1;</code>
       */
      public int getMaxAllocSiteProfId() {
        return maxAllocSiteProfId_;
      }
      /**
       * <code>required int32 maxAllocSiteProfId = 1;</code>
       */
      public Builder setMaxAllocSiteProfId(int value) {
        bitField0_ |= 0x00000001;
        maxAllocSiteProfId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 maxAllocSiteProfId = 1;</code>
       */
      public Builder clearMaxAllocSiteProfId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        maxAllocSiteProfId_ = 0;
        onChanged();
        return this;
      }

      private int dumpEventualStatsBeg_ ;
      /**
       * <code>required int32 dumpEventualStatsBeg = 2;</code>
       */
      public boolean hasDumpEventualStatsBeg() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 dumpEventualStatsBeg = 2;</code>
       */
      public int getDumpEventualStatsBeg() {
        return dumpEventualStatsBeg_;
      }
      /**
       * <code>required int32 dumpEventualStatsBeg = 2;</code>
       */
      public Builder setDumpEventualStatsBeg(int value) {
        bitField0_ |= 0x00000002;
        dumpEventualStatsBeg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dumpEventualStatsBeg = 2;</code>
       */
      public Builder clearDumpEventualStatsBeg() {
        bitField0_ = (bitField0_ & ~0x00000002);
        dumpEventualStatsBeg_ = 0;
        onChanged();
        return this;
      }

      private int dumpEventualStatsEnd_ ;
      /**
       * <code>required int32 dumpEventualStatsEnd = 3;</code>
       */
      public boolean hasDumpEventualStatsEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 dumpEventualStatsEnd = 3;</code>
       */
      public int getDumpEventualStatsEnd() {
        return dumpEventualStatsEnd_;
      }
      /**
       * <code>required int32 dumpEventualStatsEnd = 3;</code>
       */
      public Builder setDumpEventualStatsEnd(int value) {
        bitField0_ |= 0x00000004;
        dumpEventualStatsEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 dumpEventualStatsEnd = 3;</code>
       */
      public Builder clearDumpEventualStatsEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        dumpEventualStatsEnd_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> cacheRWGroupInfo_ =
        java.util.Collections.emptyList();
      private void ensureCacheRWGroupInfoIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          cacheRWGroupInfo_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo>(cacheRWGroupInfo_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder> cacheRWGroupInfoBuilder_;

      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> getCacheRWGroupInfoList() {
        if (cacheRWGroupInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheRWGroupInfo_);
        } else {
          return cacheRWGroupInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public int getCacheRWGroupInfoCount() {
        if (cacheRWGroupInfoBuilder_ == null) {
          return cacheRWGroupInfo_.size();
        } else {
          return cacheRWGroupInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo getCacheRWGroupInfo(int index) {
        if (cacheRWGroupInfoBuilder_ == null) {
          return cacheRWGroupInfo_.get(index);
        } else {
          return cacheRWGroupInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder setCacheRWGroupInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo value) {
        if (cacheRWGroupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.set(index, value);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder setCacheRWGroupInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder builderForValue) {
        if (cacheRWGroupInfoBuilder_ == null) {
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder addCacheRWGroupInfo(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo value) {
        if (cacheRWGroupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.add(value);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder addCacheRWGroupInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo value) {
        if (cacheRWGroupInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.add(index, value);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder addCacheRWGroupInfo(
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder builderForValue) {
        if (cacheRWGroupInfoBuilder_ == null) {
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.add(builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder addCacheRWGroupInfo(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder builderForValue) {
        if (cacheRWGroupInfoBuilder_ == null) {
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder addAllCacheRWGroupInfo(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo> values) {
        if (cacheRWGroupInfoBuilder_ == null) {
          ensureCacheRWGroupInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheRWGroupInfo_);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder clearCacheRWGroupInfo() {
        if (cacheRWGroupInfoBuilder_ == null) {
          cacheRWGroupInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public Builder removeCacheRWGroupInfo(int index) {
        if (cacheRWGroupInfoBuilder_ == null) {
          ensureCacheRWGroupInfoIsMutable();
          cacheRWGroupInfo_.remove(index);
          onChanged();
        } else {
          cacheRWGroupInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder getCacheRWGroupInfoBuilder(
          int index) {
        return getCacheRWGroupInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder getCacheRWGroupInfoOrBuilder(
          int index) {
        if (cacheRWGroupInfoBuilder_ == null) {
          return cacheRWGroupInfo_.get(index);  } else {
          return cacheRWGroupInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder> 
           getCacheRWGroupInfoOrBuilderList() {
        if (cacheRWGroupInfoBuilder_ != null) {
          return cacheRWGroupInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheRWGroupInfo_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder addCacheRWGroupInfoBuilder() {
        return getCacheRWGroupInfoFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder addCacheRWGroupInfoBuilder(
          int index) {
        return getCacheRWGroupInfoFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupInfo cacheRWGroupInfo = 4;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder> 
           getCacheRWGroupInfoBuilderList() {
        return getCacheRWGroupInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder> 
          getCacheRWGroupInfoFieldBuilder() {
        if (cacheRWGroupInfoBuilder_ == null) {
          cacheRWGroupInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfo.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupInfoOrBuilder>(
                  cacheRWGroupInfo_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          cacheRWGroupInfo_ = null;
        }
        return cacheRWGroupInfoBuilder_;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> classProf_ =
        java.util.Collections.emptyList();
      private void ensureClassProfIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          classProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf>(classProf_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.ClassProf, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder> classProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> getClassProfList() {
        if (classProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(classProf_);
        } else {
          return classProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public int getClassProfCount() {
        if (classProfBuilder_ == null) {
          return classProf_.size();
        } else {
          return classProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf getClassProf(int index) {
        if (classProfBuilder_ == null) {
          return classProf_.get(index);
        } else {
          return classProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder setClassProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf value) {
        if (classProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassProfIsMutable();
          classProf_.set(index, value);
          onChanged();
        } else {
          classProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder setClassProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder builderForValue) {
        if (classProfBuilder_ == null) {
          ensureClassProfIsMutable();
          classProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          classProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder addClassProf(com.sun.max.vm.maxsim.MaxSimInterface.ClassProf value) {
        if (classProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassProfIsMutable();
          classProf_.add(value);
          onChanged();
        } else {
          classProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder addClassProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf value) {
        if (classProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClassProfIsMutable();
          classProf_.add(index, value);
          onChanged();
        } else {
          classProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder addClassProf(
          com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder builderForValue) {
        if (classProfBuilder_ == null) {
          ensureClassProfIsMutable();
          classProf_.add(builderForValue.build());
          onChanged();
        } else {
          classProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder addClassProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder builderForValue) {
        if (classProfBuilder_ == null) {
          ensureClassProfIsMutable();
          classProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          classProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder addAllClassProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassProf> values) {
        if (classProfBuilder_ == null) {
          ensureClassProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, classProf_);
          onChanged();
        } else {
          classProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder clearClassProf() {
        if (classProfBuilder_ == null) {
          classProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          classProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public Builder removeClassProf(int index) {
        if (classProfBuilder_ == null) {
          ensureClassProfIsMutable();
          classProf_.remove(index);
          onChanged();
        } else {
          classProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder getClassProfBuilder(
          int index) {
        return getClassProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder getClassProfOrBuilder(
          int index) {
        if (classProfBuilder_ == null) {
          return classProf_.get(index);  } else {
          return classProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder> 
           getClassProfOrBuilderList() {
        if (classProfBuilder_ != null) {
          return classProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(classProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder addClassProfBuilder() {
        return getClassProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder addClassProfBuilder(
          int index) {
        return getClassProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.ClassProf classProf = 5;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder> 
           getClassProfBuilderList() {
        return getClassProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.ClassProf, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder> 
          getClassProfFieldBuilder() {
        if (classProfBuilder_ == null) {
          classProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.ClassProf, com.sun.max.vm.maxsim.MaxSimInterface.ClassProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.ClassProfOrBuilder>(
                  classProf_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          classProf_ = null;
        }
        return classProfBuilder_;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> cacheRWGroupMissProf_ =
        java.util.Collections.emptyList();
      private void ensureCacheRWGroupMissProfIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cacheRWGroupMissProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf>(cacheRWGroupMissProf_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder> cacheRWGroupMissProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> getCacheRWGroupMissProfList() {
        if (cacheRWGroupMissProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cacheRWGroupMissProf_);
        } else {
          return cacheRWGroupMissProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public int getCacheRWGroupMissProfCount() {
        if (cacheRWGroupMissProfBuilder_ == null) {
          return cacheRWGroupMissProf_.size();
        } else {
          return cacheRWGroupMissProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf getCacheRWGroupMissProf(int index) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          return cacheRWGroupMissProf_.get(index);
        } else {
          return cacheRWGroupMissProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder setCacheRWGroupMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf value) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.set(index, value);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder setCacheRWGroupMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder builderForValue) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder addCacheRWGroupMissProf(com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf value) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.add(value);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder addCacheRWGroupMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf value) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.add(index, value);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder addCacheRWGroupMissProf(
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder builderForValue) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.add(builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder addCacheRWGroupMissProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder builderForValue) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder addAllCacheRWGroupMissProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf> values) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          ensureCacheRWGroupMissProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cacheRWGroupMissProf_);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder clearCacheRWGroupMissProf() {
        if (cacheRWGroupMissProfBuilder_ == null) {
          cacheRWGroupMissProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public Builder removeCacheRWGroupMissProf(int index) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          ensureCacheRWGroupMissProfIsMutable();
          cacheRWGroupMissProf_.remove(index);
          onChanged();
        } else {
          cacheRWGroupMissProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder getCacheRWGroupMissProfBuilder(
          int index) {
        return getCacheRWGroupMissProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder getCacheRWGroupMissProfOrBuilder(
          int index) {
        if (cacheRWGroupMissProfBuilder_ == null) {
          return cacheRWGroupMissProf_.get(index);  } else {
          return cacheRWGroupMissProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder> 
           getCacheRWGroupMissProfOrBuilderList() {
        if (cacheRWGroupMissProfBuilder_ != null) {
          return cacheRWGroupMissProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cacheRWGroupMissProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder addCacheRWGroupMissProfBuilder() {
        return getCacheRWGroupMissProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder addCacheRWGroupMissProfBuilder(
          int index) {
        return getCacheRWGroupMissProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.CacheRWGroupMissProf cacheRWGroupMissProf = 6;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder> 
           getCacheRWGroupMissProfBuilderList() {
        return getCacheRWGroupMissProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder> 
          getCacheRWGroupMissProfFieldBuilder() {
        if (cacheRWGroupMissProfBuilder_ == null) {
          cacheRWGroupMissProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.CacheRWGroupMissProfOrBuilder>(
                  cacheRWGroupMissProf_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          cacheRWGroupMissProf_ = null;
        }
        return cacheRWGroupMissProfBuilder_;
      }

      private java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> allocSiteProf_ =
        java.util.Collections.emptyList();
      private void ensureAllocSiteProfIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          allocSiteProf_ = new java.util.ArrayList<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf>(allocSiteProf_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder> allocSiteProfBuilder_;

      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> getAllocSiteProfList() {
        if (allocSiteProfBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allocSiteProf_);
        } else {
          return allocSiteProfBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public int getAllocSiteProfCount() {
        if (allocSiteProfBuilder_ == null) {
          return allocSiteProf_.size();
        } else {
          return allocSiteProfBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf getAllocSiteProf(int index) {
        if (allocSiteProfBuilder_ == null) {
          return allocSiteProf_.get(index);
        } else {
          return allocSiteProfBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder setAllocSiteProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf value) {
        if (allocSiteProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.set(index, value);
          onChanged();
        } else {
          allocSiteProfBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder setAllocSiteProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder builderForValue) {
        if (allocSiteProfBuilder_ == null) {
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.set(index, builderForValue.build());
          onChanged();
        } else {
          allocSiteProfBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder addAllocSiteProf(com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf value) {
        if (allocSiteProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.add(value);
          onChanged();
        } else {
          allocSiteProfBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder addAllocSiteProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf value) {
        if (allocSiteProfBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.add(index, value);
          onChanged();
        } else {
          allocSiteProfBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder addAllocSiteProf(
          com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder builderForValue) {
        if (allocSiteProfBuilder_ == null) {
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.add(builderForValue.build());
          onChanged();
        } else {
          allocSiteProfBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder addAllocSiteProf(
          int index, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder builderForValue) {
        if (allocSiteProfBuilder_ == null) {
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.add(index, builderForValue.build());
          onChanged();
        } else {
          allocSiteProfBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder addAllAllocSiteProf(
          java.lang.Iterable<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf> values) {
        if (allocSiteProfBuilder_ == null) {
          ensureAllocSiteProfIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, allocSiteProf_);
          onChanged();
        } else {
          allocSiteProfBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder clearAllocSiteProf() {
        if (allocSiteProfBuilder_ == null) {
          allocSiteProf_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          allocSiteProfBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public Builder removeAllocSiteProf(int index) {
        if (allocSiteProfBuilder_ == null) {
          ensureAllocSiteProfIsMutable();
          allocSiteProf_.remove(index);
          onChanged();
        } else {
          allocSiteProfBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder getAllocSiteProfBuilder(
          int index) {
        return getAllocSiteProfFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder getAllocSiteProfOrBuilder(
          int index) {
        if (allocSiteProfBuilder_ == null) {
          return allocSiteProf_.get(index);  } else {
          return allocSiteProfBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public java.util.List<? extends com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder> 
           getAllocSiteProfOrBuilderList() {
        if (allocSiteProfBuilder_ != null) {
          return allocSiteProfBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allocSiteProf_);
        }
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder addAllocSiteProfBuilder() {
        return getAllocSiteProfFieldBuilder().addBuilder(
            com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder addAllocSiteProfBuilder(
          int index) {
        return getAllocSiteProfFieldBuilder().addBuilder(
            index, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.getDefaultInstance());
      }
      /**
       * <code>repeated .MaxSimInterface.AllocSiteProf allocSiteProf = 7;</code>
       */
      public java.util.List<com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder> 
           getAllocSiteProfBuilderList() {
        return getAllocSiteProfFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder> 
          getAllocSiteProfFieldBuilder() {
        if (allocSiteProfBuilder_ == null) {
          allocSiteProfBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProf.Builder, com.sun.max.vm.maxsim.MaxSimInterface.AllocSiteProfOrBuilder>(
                  allocSiteProf_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          allocSiteProf_ = null;
        }
        return allocSiteProfBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:MaxSimInterface.ZSimProfDB)
    }

    static {
      defaultInstance = new ZSimProfDB(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:MaxSimInterface.ZSimProfDB)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_MaxSimConfig_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_MaxSimConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_FieldOffsetRemapPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_DataTransInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_DataTransInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_DataTransDB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_DataTransDB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_OffsetBCIPair_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_OffsetBCIPair_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_MethodInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_MethodInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_FieldInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_FieldInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_ClassInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_ClassInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_MaxineInfoDB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_MaxineInfoDB_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_AllocProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_AllocProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_CacheMissProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_CacheMissProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_CacheRWGroupInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_CacheRWGroupMissProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_AllocSiteProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_AllocSiteProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_FieldProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_FieldProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_ClassProf_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_ClassProf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MaxSimInterface_ZSimProfDB_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MaxSimInterface_ZSimProfDB_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025MaxSimInterface.proto\022\017MaxSimInterface" +
      "\"\277\001\n\014MaxSimConfig\022\035\n\017isMaxSimEnabled\030\001 \001" +
      "(\010:\004true\022Q\n\022pointerTaggingType\030\002 \001(\0162#.M" +
      "axSimInterface.PointerTaggingType:\020CLASS" +
      "_ID_TAGGING\022\034\n\021layoutScaleFactor\030\003 \001(\005:\001" +
      "1\022\037\n\024layoutScaleRefFactor\030\004 \001(\005:\0011\"<\n\024Fi" +
      "eldOffsetRemapPair\022\022\n\nfromOffset\030\001 \002(\005\022\020" +
      "\n\010toOffset\030\002 \002(\005\"y\n\rDataTransInfo\022\020\n\010typ" +
      "eDesc\030\001 \002(\t\022\020\n\010transTag\030\002 \001(\005\022D\n\025fieldOf" +
      "fsetRemapPairs\030\003 \003(\0132%.MaxSimInterface.F",
      "ieldOffsetRemapPair\"D\n\013DataTransDB\0225\n\rda" +
      "taTransInfo\030\001 \003(\0132\036.MaxSimInterface.Data" +
      "TransInfo\",\n\rOffsetBCIPair\022\016\n\006offset\030\001 \002" +
      "(\005\022\013\n\003BCI\030\002 \002(\005\"\372\001\n\nMethodInfo\022\014\n\004name\030\001" +
      " \002(\t\022\017\n\007beginIP\030\002 \002(\003\022\014\n\004size\030\003 \002(\003\022\014\n\004d" +
      "esc\030\004 \001(\t\022\017\n\007classId\030\005 \001(\005\022.\n\004kind\030\006 \001(\016" +
      "2 .MaxSimInterface.MethodInfo.Kind\0225\n\rof" +
      "fsetBCIPair\030\007 \003(\0132\036.MaxSimInterface.Offs" +
      "etBCIPair\"9\n\004Kind\022\r\n\tOPTIMIZED\020\000\022\010\n\004BOOT" +
      "\020\001\022\014\n\010BASELINE\020\002\022\n\n\006NATIVE\020\003\"\210\001\n\tFieldIn",
      "fo\022\014\n\004name\030\001 \002(\t\022\017\n\007classId\030\002 \002(\005\022\016\n\006off" +
      "set\030\003 \002(\005\0225\n\010property\030\004 \003(\0162#.MaxSimInte" +
      "rface.FieldInfo.Property\"\025\n\010Property\022\t\n\005" +
      "FINAL\020\000\"\334\001\n\tClassInfo\022\014\n\004desc\030\001 \002(\t\022\n\n\002i" +
      "d\030\002 \002(\005\022-\n\004kind\030\003 \002(\0162\037.MaxSimInterface." +
      "ClassInfo.Kind\022\023\n\013componentId\030\004 \001(\005\022-\n\tf" +
      "ieldInfo\030\005 \003(\0132\032.MaxSimInterface.FieldIn" +
      "fo\"B\n\004Kind\022\t\n\005TUPLE\020\000\022\t\n\005ARRAY\020\001\022\r\n\tPRIM" +
      "ITIVE\020\002\022\n\n\006HYBRID\020\003\022\t\n\005OTHER\020\004\"\316\002\n\014Maxin" +
      "eInfoDB\022\013\n\003key\030\001 \001(\003\022\026\n\016maxClassInfoId\030\002",
      " \002(\005\022-\n\tclassInfo\030\003 \003(\0132\032.MaxSimInterfac" +
      "e.ClassInfo\022/\n\nmethodInfo\030\004 \003(\0132\033.MaxSim" +
      "Interface.MethodInfo\0224\n\017bootCodeRegInfo\030" +
      "\005 \002(\0132\033.MaxSimInterface.MethodInfo\0223\n\014Ma" +
      "xSimConfig\030\006 \002(\0132\035.MaxSimInterface.MaxSi" +
      "mConfig\022\027\n\017nullCheckOffset\030\007 \002(\005\0225\n\rdata" +
      "TransInfo\030\010 \003(\0132\036.MaxSimInterface.DataTr" +
      "ansInfo\"(\n\tAllocProf\022\014\n\004size\030\001 \002(\005\022\r\n\005co" +
      "unt\030\002 \002(\003\"_\n\rCacheMissProf\022\r\n\005count\030\001 \002(" +
      "\003\022\n\n\002IP\030\002 \002(\003\022\017\n\007classId\030\003 \002(\005\022\020\n\010offset",
      "Lo\030\004 \002(\005\022\020\n\010offsetHi\030\005 \002(\005\"i\n\020CacheRWGro" +
      "upInfo\022\026\n\016cacheRWGroupId\030\001 \002(\005\022\024\n\014cacheG" +
      "roupId\030\002 \002(\005\022\026\n\016cacheGroupName\030\003 \002(\t\022\017\n\007" +
      "isWrite\030\004 \002(\010\"M\n\024CacheRWGroupMissProf\0225\n" +
      "\rcacheMissProf\030\001 \003(\0132\036.MaxSimInterface.C" +
      "acheMissProf\"G\n\rAllocSiteProf\022\n\n\002id\030\001 \002(" +
      "\005\022\n\n\002IP\030\002 \002(\003\022\017\n\007classId\030\003 \002(\005\022\r\n\005count\030" +
      "\004 \002(\003\"a\n\tFieldProf\022\016\n\006offset\030\001 \002(\005\022\021\n\tre" +
      "adCount\030\002 \002(\003\022\022\n\nwriteCount\030\003 \002(\003\022\035\n\025cac" +
      "heRWGroupMissCount\030\004 \003(\003\"\263\001\n\tClassProf\022\n",
      "\n\002id\030\001 \002(\005\022-\n\tallocProf\030\002 \003(\0132\032.MaxSimIn" +
      "terface.AllocProf\022-\n\tfieldProf\030\003 \003(\0132\032.M" +
      "axSimInterface.FieldProf\022\022\n\nmemAllSize\030\004" +
      " \002(\003\022\023\n\013memAllCount\030\005 \002(\003\022\023\n\013memAccCount" +
      "\030\006 \002(\003\"\314\002\n\nZSimProfDB\022\032\n\022maxAllocSitePro" +
      "fId\030\001 \002(\005\022\034\n\024dumpEventualStatsBeg\030\002 \002(\005\022" +
      "\034\n\024dumpEventualStatsEnd\030\003 \002(\005\022;\n\020cacheRW" +
      "GroupInfo\030\004 \003(\0132!.MaxSimInterface.CacheR" +
      "WGroupInfo\022-\n\tclassProf\030\005 \003(\0132\032.MaxSimIn" +
      "terface.ClassProf\022C\n\024cacheRWGroupMissPro",
      "f\030\006 \003(\0132%.MaxSimInterface.CacheRWGroupMi" +
      "ssProf\0225\n\rallocSiteProf\030\007 \003(\0132\036.MaxSimIn" +
      "terface.AllocSiteProf*l\n\022PointerTaggingT" +
      "ype\022\016\n\nNO_TAGGING\020\000\022\024\n\020CLASS_ID_TAGGING\020" +
      "\001\022\031\n\025ALLOC_SITE_ID_TAGGING\020\002\022\025\n\021UNDEFINE" +
      "D_TAGGING\020\003*w\n\020ZSimMagicOpcodes\022\022\n\rZSIM_" +
      "M_OPC_LO\020\201\010\022\031\n\024ZSIM_M_OPC_ROI_BEGIN\020\201\010\022\027" +
      "\n\022ZSIM_M_OPC_ROI_END\020\202\010\022\027\n\022ZSIM_M_OPC_ZS" +
      "IM_HI\020\211\010\032\002\020\001*\210\006\n\022MaxSimMagicOpcodes\022\024\n\017M" +
      "AXSIM_M_OPC_LO\020\315\010\022.\n)MAXSIM_M_OPC_GET_AV",
      "AILABLE_PROCESSORS_NUM\020\315\010\022#\n\036MAXSIM_M_OP" +
      "C_REPORT_HUB_OFFSET\020\316\010\022(\n#MAXSIM_M_OPC_R" +
      "EPORT_HUB_TYPE_OFFSET\020\317\010\0220\n+MAXSIM_M_OPC" +
      "_REPORT_ARRAY_FIRST_ELEM_OFFSET\020\320\010\022(\n#MA" +
      "XSIM_M_OPC_REGISTER_ADDRESS_RANGE\020\321\010\022*\n%" +
      "MAXSIM_M_OPC_DEREGISTER_ADDRESS_RANGE\020\322\010" +
      "\0223\n.MAXSIM_M_OPC_GET_ALLOCATION_SITE_EST" +
      "IMATION_ID\020\323\010\022+\n&MAXSIM_M_OPC_PROFILE_OB" +
      "JECT_ALLOCATION\020\324\010\022+\n&MAXSIM_M_OPC_ENABL" +
      "E_PROFILE_COLLECTION\020\325\010\022,\n\'MAXSIM_M_OPC_",
      "DISABLE_PROFILE_COLLECTION\020\326\010\022*\n%MAXSIM_" +
      "M_OPC_RESET_PROFILE_COLLECTION\020\327\010\022\'\n\"MAX" +
      "SIM_M_OPC_PRINT_PROFILE_TO_FILE\020\330\010\022%\n MA" +
      "XSIM_M_OPC_DUMP_EVENTUAL_STATS\020\331\010\022#\n\036MAX" +
      "SIM_M_OPC_FILTER_LOOP_BEGIN\020\332\010\022!\n\034MAXSIM" +
      "_M_OPC_FILTER_LOOP_END\020\333\010\022:\n5MAXSIM_M_OP" +
      "C_ACTIVATE_DATA_TRANS_VIA_ADDR_SPACE_MOR" +
      "PH\020\334\010\022\024\n\017MAXSIM_M_OPC_HI\020\260\t\032\002\020\001*\325\001\n\036MaxS" +
      "imMagicOpPackedArgsOffsets\0228\n4MAXSIM_M_O" +
      "P_PROFILE_OBJECT_ALLOCATION_P_ARG_SIZE_O",
      "FF\020\000\022<\n8MAXSIM_M_OP_PROFILE_OBJECT_ALLOC" +
      "ATION_P_ARG_TAG_TYPE_OFF\020 \0227\n3MAXSIM_M_O" +
      "P_PROFILE_OBJECT_ALLOCATION_P_ARG_TAG_OF" +
      "F\0200\032\002\020\001*\226\002\n\020AddressRangeType\022\027\n\023STACK_AD" +
      "DRESS_RANGE\020\000\022\025\n\021TLS_ADDRESS_RANGE\020\001\022\026\n\022" +
      "HEAP_ADDRESS_RANGE\020\002\022\026\n\022CODE_ADDRESS_RAN" +
      "GE\020\003\022\030\n\024NATIVE_ADDRESS_RANGE\020\004\022 \n\034ARRAY_" +
      "CRITICAL_ADDRESS_RANGE\020\005\022%\n!ALLOCATION_F" +
      "RONTIER_ADDRESS_RANGE\020\006\022\"\n\036PROTOBUF_MESS" +
      "AGE_ADDRESS_RANGE\020\007\022\033\n\027UNDEFINED_ADDRESS",
      "_RANGE\020\010*\266\001\n\025MaxineVMOperationMode\022$\n MA" +
      "XINE_VM_OPERATION_MODE_UNKNOWN\020\000\022+\n\'MAXI" +
      "NE_VM_OPERATION_MODE_RUNNING_NON_GC\020\001\022\'\n" +
      "#MAXINE_VM_OPERATION_MODE_RUNNING_GC\020\002\022!" +
      "\n\035MAXINE_VM_OPERATION_MODE_SAME\020\003*u\n\007Hub" +
      "Type\022\022\n\016HUB_TYPE_TUPLE\020\000\022 \n\034HUB_TYPE_ARR" +
      "AY_OF_REFERENCES\020\001\022 \n\034HUB_TYPE_ARRAY_OF_" +
      "PRIMITIVES\020\002\022\022\n\016HUB_TYPE_UNDEF\020\003*\370\002\n\nPoi" +
      "nterTag\022\035\n\020TAG_AGGREGATE_LO\020\377\377\377\377\377\377\377\377\377\001\022\032" +
      "\n\rTAG_UNDEFINED\020\377\377\377\377\377\377\377\377\377\001\022\017\n\013TAG_FETCHE",
      "S\020\000\022\014\n\010TAG_CODE\020\001\022\014\n\010TAG_HEAP\020\002\022\r\n\tTAG_S" +
      "TACK\020\003\022\013\n\007TAG_TLS\020\004\022\016\n\nTAG_NATIVE\020\005\022\016\n\nT" +
      "AG_STATIC\020\006\022\024\n\020TAG_UNDEFINED_GP\020\007\022\024\n\020TAG" +
      "_AGGREGATE_HI\020\007\022\023\n\017TAG_RESERVED_LO\020\010\022\023\n\017" +
      "TAG_RESERVED_HI\020\n\022\031\n\025TAG_TRANSFORMATION_" +
      "LO\020\013\022\031\n\025TAG_TRANSFORMATION_HI\020\017\022\r\n\tTAG_G" +
      "P_LO\020\020\022\017\n\tTAG_GP_HI\020\376\377\003\022\026\n\020DEFINED_TAGS_" +
      "NUM\020\377\377\003\032\002\020\001B(\n\025com.sun.max.vm.maxsimB\017Ma" +
      "xSimInterface"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_MaxSimInterface_MaxSimConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MaxSimInterface_MaxSimConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_MaxSimConfig_descriptor,
        new java.lang.String[] { "IsMaxSimEnabled", "PointerTaggingType", "LayoutScaleFactor", "LayoutScaleRefFactor", });
    internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_MaxSimInterface_FieldOffsetRemapPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_FieldOffsetRemapPair_descriptor,
        new java.lang.String[] { "FromOffset", "ToOffset", });
    internal_static_MaxSimInterface_DataTransInfo_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_MaxSimInterface_DataTransInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_DataTransInfo_descriptor,
        new java.lang.String[] { "TypeDesc", "TransTag", "FieldOffsetRemapPairs", });
    internal_static_MaxSimInterface_DataTransDB_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_MaxSimInterface_DataTransDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_DataTransDB_descriptor,
        new java.lang.String[] { "DataTransInfo", });
    internal_static_MaxSimInterface_OffsetBCIPair_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_MaxSimInterface_OffsetBCIPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_OffsetBCIPair_descriptor,
        new java.lang.String[] { "Offset", "BCI", });
    internal_static_MaxSimInterface_MethodInfo_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_MaxSimInterface_MethodInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_MethodInfo_descriptor,
        new java.lang.String[] { "Name", "BeginIP", "Size", "Desc", "ClassId", "Kind", "OffsetBCIPair", });
    internal_static_MaxSimInterface_FieldInfo_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_MaxSimInterface_FieldInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_FieldInfo_descriptor,
        new java.lang.String[] { "Name", "ClassId", "Offset", "Property", });
    internal_static_MaxSimInterface_ClassInfo_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_MaxSimInterface_ClassInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_ClassInfo_descriptor,
        new java.lang.String[] { "Desc", "Id", "Kind", "ComponentId", "FieldInfo", });
    internal_static_MaxSimInterface_MaxineInfoDB_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_MaxSimInterface_MaxineInfoDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_MaxineInfoDB_descriptor,
        new java.lang.String[] { "Key", "MaxClassInfoId", "ClassInfo", "MethodInfo", "BootCodeRegInfo", "MaxSimConfig", "NullCheckOffset", "DataTransInfo", });
    internal_static_MaxSimInterface_AllocProf_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_MaxSimInterface_AllocProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_AllocProf_descriptor,
        new java.lang.String[] { "Size", "Count", });
    internal_static_MaxSimInterface_CacheMissProf_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_MaxSimInterface_CacheMissProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_CacheMissProf_descriptor,
        new java.lang.String[] { "Count", "IP", "ClassId", "OffsetLo", "OffsetHi", });
    internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_MaxSimInterface_CacheRWGroupInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_CacheRWGroupInfo_descriptor,
        new java.lang.String[] { "CacheRWGroupId", "CacheGroupId", "CacheGroupName", "IsWrite", });
    internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_MaxSimInterface_CacheRWGroupMissProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_CacheRWGroupMissProf_descriptor,
        new java.lang.String[] { "CacheMissProf", });
    internal_static_MaxSimInterface_AllocSiteProf_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_MaxSimInterface_AllocSiteProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_AllocSiteProf_descriptor,
        new java.lang.String[] { "Id", "IP", "ClassId", "Count", });
    internal_static_MaxSimInterface_FieldProf_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_MaxSimInterface_FieldProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_FieldProf_descriptor,
        new java.lang.String[] { "Offset", "ReadCount", "WriteCount", "CacheRWGroupMissCount", });
    internal_static_MaxSimInterface_ClassProf_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_MaxSimInterface_ClassProf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_ClassProf_descriptor,
        new java.lang.String[] { "Id", "AllocProf", "FieldProf", "MemAllSize", "MemAllCount", "MemAccCount", });
    internal_static_MaxSimInterface_ZSimProfDB_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_MaxSimInterface_ZSimProfDB_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MaxSimInterface_ZSimProfDB_descriptor,
        new java.lang.String[] { "MaxAllocSiteProfId", "DumpEventualStatsBeg", "DumpEventualStatsEnd", "CacheRWGroupInfo", "ClassProf", "CacheRWGroupMissProf", "AllocSiteProf", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
